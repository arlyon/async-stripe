name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  format:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
      - name: install cargo-make
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug cargo-make
      - name: regenerate openapi
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: check
  clippy:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        runtime:
          [
            async-std-surf,
            tokio-hyper,
            tokio-hyper-rustls,
            blocking,
            blocking-rustls,
          ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-clippy-${{ matrix.runtime }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: >
            --no-default-features
            --features runtime-${{ matrix.runtime }}
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        runtime:
          [
            async-std-surf,
            tokio-hyper,
            tokio-hyper-rustls,
            blocking,
            blocking-rustls,
          ]
    services:
      stripe-mock:
        image: stripemock/stripe-mock
        ports:
          - 12111:12111
          - 12112:12112
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: "1.54.0"
          override: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-test-${{ hashFiles('**/Cargo.lock') }}
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.19.0'
          args: '--features runtime-${{ matrix.runtime }}'
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml
