name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  format:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
      - run: cargo +nightly fmt --all -- --check
  clippy:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        runtime:
          [
            async-std-surf,
            tokio-hyper,
            tokio-hyper-rustls,
            blocking,
            blocking-rustls,
          ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-clippy-${{ matrix.runtime }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: >
            --no-default-features
            --features runtime-${{ matrix.runtime }}
            -- --deny warnings
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        runtime:
          [
            async-std-surf,
            tokio-hyper,
            tokio-hyper-rustls,
            blocking,
            blocking-rustls,
          ]
    services:
      stripe-mock:
        image: stripemock/stripe-mock
        ports:
          - 12111:12111
          - 12112:12112
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-test-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: >
            --features runtime-${{ matrix.runtime }}
