use stripe::{Client, Response};

impl stripe_misc::reporting::report_run::ReportRun {
    /// Retrieves the details of an existing Report Run.
    pub fn retrieve(
        client: &Client,
        report_run: &str,
        params: RetrieveReportRun,
    ) -> Response<stripe_misc::reporting::report_run::ReportRun> {
        client.get_query(
            &format!("/reporting/report_runs/{report_run}", report_run = report_run),
            params,
        )
    }
    /// Creates a new object and begin running the report.
    ///
    /// (Certain report types require a [live-mode API key](https://stripe.com/docs/keys#test-live-modes).).
    pub fn create(
        client: &Client,
        params: CreateReportRun,
    ) -> Response<stripe_misc::reporting::report_run::ReportRun> {
        client.send_form("/reporting/report_runs", params, http_types::Method::Post)
    }
    /// Returns a list of Report Runs, with the most recent appearing first.
    pub fn list(
        client: &Client,
        params: ListReportRun,
    ) -> Response<stripe_types::List<stripe_misc::reporting::report_run::ReportRun>> {
        client.get_query("/reporting/report_runs", params)
    }
}
#[derive(Copy, Clone, Debug, Default, serde::Serialize)]
pub struct RetrieveReportRun<'a> {
    /// Specifies which fields in the response should be expanded.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub expand: Option<&'a [&'a str]>,
}
impl<'a> RetrieveReportRun<'a> {
    pub fn new() -> Self {
        Self::default()
    }
}
#[derive(Copy, Clone, Debug, serde::Serialize)]
pub struct CreateReportRun<'a> {
    /// Specifies which fields in the response should be expanded.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub expand: Option<&'a [&'a str]>,
    /// Parameters specifying how the report should be run.
    ///
    /// Different Report Types have different required and optional parameters, listed in the [API Access to Reports](https://stripe.com/docs/reporting/statements/api) documentation.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub parameters: Option<CreateReportRunParameters<'a>>,
    /// The ID of the [report type](https://stripe.com/docs/reporting/statements/api#report-types) to run, such as `"balance.summary.1"`.
    pub report_type: &'a str,
}
impl<'a> CreateReportRun<'a> {
    pub fn new(report_type: &'a str) -> Self {
        Self { expand: Default::default(), parameters: Default::default(), report_type }
    }
}
/// Parameters specifying how the report should be run.
///
/// Different Report Types have different required and optional parameters, listed in the [API Access to Reports](https://stripe.com/docs/reporting/statements/api) documentation.
#[derive(Copy, Clone, Debug, Default, serde::Serialize)]
pub struct CreateReportRunParameters<'a> {
    /// The set of report columns to include in the report output.
    ///
    /// If omitted, the Report Type is run with its default column set.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub columns: Option<&'a [&'a str]>,
    /// Connected account ID to filter for in the report run.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub connected_account: Option<&'a str>,
    /// Currency of objects to be included in the report run.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub currency: Option<stripe_types::Currency>,
    /// Ending timestamp of data to be included in the report run (exclusive).
    #[serde(skip_serializing_if = "Option::is_none")]
    pub interval_end: Option<stripe_types::Timestamp>,
    /// Starting timestamp of data to be included in the report run.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub interval_start: Option<stripe_types::Timestamp>,
    /// Payout ID by which to filter the report run.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub payout: Option<&'a str>,
    /// Category of balance transactions to be included in the report run.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub reporting_category: Option<CreateReportRunParametersReportingCategory>,
    /// Defaults to `Etc/UTC`.
    ///
    /// The output timezone for all timestamps in the report.
    /// A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).
    /// Has no effect on `interval_start` or `interval_end`.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub timezone: Option<CreateReportRunParametersTimezone>,
}
impl<'a> CreateReportRunParameters<'a> {
    pub fn new() -> Self {
        Self::default()
    }
}
/// Category of balance transactions to be included in the report run.
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
pub enum CreateReportRunParametersReportingCategory {
    Advance,
    AdvanceFunding,
    AnticipationRepayment,
    Charge,
    ChargeFailure,
    ConnectCollectionTransfer,
    ConnectReservedFunds,
    Contribution,
    Dispute,
    DisputeReversal,
    Fee,
    FinancingPaydown,
    FinancingPaydownReversal,
    FinancingPayout,
    FinancingPayoutReversal,
    IssuingAuthorizationHold,
    IssuingAuthorizationRelease,
    IssuingDispute,
    IssuingTransaction,
    NetworkCost,
    OtherAdjustment,
    PartialCaptureReversal,
    Payout,
    PayoutReversal,
    PlatformEarning,
    PlatformEarningRefund,
    Refund,
    RefundFailure,
    RiskReservedFunds,
    Tax,
    Topup,
    TopupReversal,
    Transfer,
    TransferReversal,
}

impl CreateReportRunParametersReportingCategory {
    pub fn as_str(self) -> &'static str {
        match self {
            Self::Advance => "advance",
            Self::AdvanceFunding => "advance_funding",
            Self::AnticipationRepayment => "anticipation_repayment",
            Self::Charge => "charge",
            Self::ChargeFailure => "charge_failure",
            Self::ConnectCollectionTransfer => "connect_collection_transfer",
            Self::ConnectReservedFunds => "connect_reserved_funds",
            Self::Contribution => "contribution",
            Self::Dispute => "dispute",
            Self::DisputeReversal => "dispute_reversal",
            Self::Fee => "fee",
            Self::FinancingPaydown => "financing_paydown",
            Self::FinancingPaydownReversal => "financing_paydown_reversal",
            Self::FinancingPayout => "financing_payout",
            Self::FinancingPayoutReversal => "financing_payout_reversal",
            Self::IssuingAuthorizationHold => "issuing_authorization_hold",
            Self::IssuingAuthorizationRelease => "issuing_authorization_release",
            Self::IssuingDispute => "issuing_dispute",
            Self::IssuingTransaction => "issuing_transaction",
            Self::NetworkCost => "network_cost",
            Self::OtherAdjustment => "other_adjustment",
            Self::PartialCaptureReversal => "partial_capture_reversal",
            Self::Payout => "payout",
            Self::PayoutReversal => "payout_reversal",
            Self::PlatformEarning => "platform_earning",
            Self::PlatformEarningRefund => "platform_earning_refund",
            Self::Refund => "refund",
            Self::RefundFailure => "refund_failure",
            Self::RiskReservedFunds => "risk_reserved_funds",
            Self::Tax => "tax",
            Self::Topup => "topup",
            Self::TopupReversal => "topup_reversal",
            Self::Transfer => "transfer",
            Self::TransferReversal => "transfer_reversal",
        }
    }
}

impl std::str::FromStr for CreateReportRunParametersReportingCategory {
    type Err = ();
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "advance" => Ok(Self::Advance),
            "advance_funding" => Ok(Self::AdvanceFunding),
            "anticipation_repayment" => Ok(Self::AnticipationRepayment),
            "charge" => Ok(Self::Charge),
            "charge_failure" => Ok(Self::ChargeFailure),
            "connect_collection_transfer" => Ok(Self::ConnectCollectionTransfer),
            "connect_reserved_funds" => Ok(Self::ConnectReservedFunds),
            "contribution" => Ok(Self::Contribution),
            "dispute" => Ok(Self::Dispute),
            "dispute_reversal" => Ok(Self::DisputeReversal),
            "fee" => Ok(Self::Fee),
            "financing_paydown" => Ok(Self::FinancingPaydown),
            "financing_paydown_reversal" => Ok(Self::FinancingPaydownReversal),
            "financing_payout" => Ok(Self::FinancingPayout),
            "financing_payout_reversal" => Ok(Self::FinancingPayoutReversal),
            "issuing_authorization_hold" => Ok(Self::IssuingAuthorizationHold),
            "issuing_authorization_release" => Ok(Self::IssuingAuthorizationRelease),
            "issuing_dispute" => Ok(Self::IssuingDispute),
            "issuing_transaction" => Ok(Self::IssuingTransaction),
            "network_cost" => Ok(Self::NetworkCost),
            "other_adjustment" => Ok(Self::OtherAdjustment),
            "partial_capture_reversal" => Ok(Self::PartialCaptureReversal),
            "payout" => Ok(Self::Payout),
            "payout_reversal" => Ok(Self::PayoutReversal),
            "platform_earning" => Ok(Self::PlatformEarning),
            "platform_earning_refund" => Ok(Self::PlatformEarningRefund),
            "refund" => Ok(Self::Refund),
            "refund_failure" => Ok(Self::RefundFailure),
            "risk_reserved_funds" => Ok(Self::RiskReservedFunds),
            "tax" => Ok(Self::Tax),
            "topup" => Ok(Self::Topup),
            "topup_reversal" => Ok(Self::TopupReversal),
            "transfer" => Ok(Self::Transfer),
            "transfer_reversal" => Ok(Self::TransferReversal),

            _ => Err(()),
        }
    }
}

impl AsRef<str> for CreateReportRunParametersReportingCategory {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}

impl std::fmt::Display for CreateReportRunParametersReportingCategory {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        self.as_str().fmt(f)
    }
}
impl serde::Serialize for CreateReportRunParametersReportingCategory {
    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
    where
        S: serde::Serializer,
    {
        serializer.serialize_str(self.as_str())
    }
}
/// Defaults to `Etc/UTC`.
///
/// The output timezone for all timestamps in the report.
/// A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).
/// Has no effect on `interval_start` or `interval_end`.
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
pub enum CreateReportRunParametersTimezone {
    AfricaAbidjan,
    AfricaAccra,
    AfricaAddisAbaba,
    AfricaAlgiers,
    AfricaAsmara,
    AfricaAsmera,
    AfricaBamako,
    AfricaBangui,
    AfricaBanjul,
    AfricaBissau,
    AfricaBlantyre,
    AfricaBrazzaville,
    AfricaBujumbura,
    AfricaCairo,
    AfricaCasablanca,
    AfricaCeuta,
    AfricaConakry,
    AfricaDakar,
    AfricaDarEsSalaam,
    AfricaDjibouti,
    AfricaDouala,
    AfricaElAaiun,
    AfricaFreetown,
    AfricaGaborone,
    AfricaHarare,
    AfricaJohannesburg,
    AfricaJuba,
    AfricaKampala,
    AfricaKhartoum,
    AfricaKigali,
    AfricaKinshasa,
    AfricaLagos,
    AfricaLibreville,
    AfricaLome,
    AfricaLuanda,
    AfricaLubumbashi,
    AfricaLusaka,
    AfricaMalabo,
    AfricaMaputo,
    AfricaMaseru,
    AfricaMbabane,
    AfricaMogadishu,
    AfricaMonrovia,
    AfricaNairobi,
    AfricaNdjamena,
    AfricaNiamey,
    AfricaNouakchott,
    AfricaOuagadougou,
    AfricaPortoMinusNovo,
    AfricaSaoTome,
    AfricaTimbuktu,
    AfricaTripoli,
    AfricaTunis,
    AfricaWindhoek,
    AmericaAdak,
    AmericaAnchorage,
    AmericaAnguilla,
    AmericaAntigua,
    AmericaAraguaina,
    AmericaArgentinaBuenosAires,
    AmericaArgentinaCatamarca,
    AmericaArgentinaComodRivadavia,
    AmericaArgentinaCordoba,
    AmericaArgentinaJujuy,
    AmericaArgentinaLaRioja,
    AmericaArgentinaMendoza,
    AmericaArgentinaRioGallegos,
    AmericaArgentinaSalta,
    AmericaArgentinaSanJuan,
    AmericaArgentinaSanLuis,
    AmericaArgentinaTucuman,
    AmericaArgentinaUshuaia,
    AmericaAruba,
    AmericaAsuncion,
    AmericaAtikokan,
    AmericaAtka,
    AmericaBahia,
    AmericaBahiaBanderas,
    AmericaBarbados,
    AmericaBelem,
    AmericaBelize,
    AmericaBlancMinusSablon,
    AmericaBoaVista,
    AmericaBogota,
    AmericaBoise,
    AmericaBuenosAires,
    AmericaCambridgeBay,
    AmericaCampoGrande,
    AmericaCancun,
    AmericaCaracas,
    AmericaCatamarca,
    AmericaCayenne,
    AmericaCayman,
    AmericaChicago,
    AmericaChihuahua,
    AmericaCoralHarbour,
    AmericaCordoba,
    AmericaCostaRica,
    AmericaCreston,
    AmericaCuiaba,
    AmericaCuracao,
    AmericaDanmarkshavn,
    AmericaDawson,
    AmericaDawsonCreek,
    AmericaDenver,
    AmericaDetroit,
    AmericaDominica,
    AmericaEdmonton,
    AmericaEirunepe,
    AmericaElSalvador,
    AmericaEnsenada,
    AmericaFortNelson,
    AmericaFortWayne,
    AmericaFortaleza,
    AmericaGlaceBay,
    AmericaGodthab,
    AmericaGooseBay,
    AmericaGrandTurk,
    AmericaGrenada,
    AmericaGuadeloupe,
    AmericaGuatemala,
    AmericaGuayaquil,
    AmericaGuyana,
    AmericaHalifax,
    AmericaHavana,
    AmericaHermosillo,
    AmericaIndianaIndianapolis,
    AmericaIndianaKnox,
    AmericaIndianaMarengo,
    AmericaIndianaPetersburg,
    AmericaIndianaTellCity,
    AmericaIndianaVevay,
    AmericaIndianaVincennes,
    AmericaIndianaWinamac,
    AmericaIndianapolis,
    AmericaInuvik,
    AmericaIqaluit,
    AmericaJamaica,
    AmericaJujuy,
    AmericaJuneau,
    AmericaKentuckyLouisville,
    AmericaKentuckyMonticello,
    AmericaKnoxIn,
    AmericaKralendijk,
    AmericaLaPaz,
    AmericaLima,
    AmericaLosAngeles,
    AmericaLouisville,
    AmericaLowerPrinces,
    AmericaMaceio,
    AmericaManagua,
    AmericaManaus,
    AmericaMarigot,
    AmericaMartinique,
    AmericaMatamoros,
    AmericaMazatlan,
    AmericaMendoza,
    AmericaMenominee,
    AmericaMerida,
    AmericaMetlakatla,
    AmericaMexicoCity,
    AmericaMiquelon,
    AmericaMoncton,
    AmericaMonterrey,
    AmericaMontevideo,
    AmericaMontreal,
    AmericaMontserrat,
    AmericaNassau,
    AmericaNewYork,
    AmericaNipigon,
    AmericaNome,
    AmericaNoronha,
    AmericaNorthDakotaBeulah,
    AmericaNorthDakotaCenter,
    AmericaNorthDakotaNewSalem,
    AmericaNuuk,
    AmericaOjinaga,
    AmericaPanama,
    AmericaPangnirtung,
    AmericaParamaribo,
    AmericaPhoenix,
    AmericaPortMinusauMinusPrince,
    AmericaPortOfSpain,
    AmericaPortoAcre,
    AmericaPortoVelho,
    AmericaPuertoRico,
    AmericaPuntaArenas,
    AmericaRainyRiver,
    AmericaRankinInlet,
    AmericaRecife,
    AmericaRegina,
    AmericaResolute,
    AmericaRioBranco,
    AmericaRosario,
    AmericaSantaIsabel,
    AmericaSantarem,
    AmericaSantiago,
    AmericaSantoDomingo,
    AmericaSaoPaulo,
    AmericaScoresbysund,
    AmericaShiprock,
    AmericaSitka,
    AmericaStBarthelemy,
    AmericaStJohns,
    AmericaStKitts,
    AmericaStLucia,
    AmericaStThomas,
    AmericaStVincent,
    AmericaSwiftCurrent,
    AmericaTegucigalpa,
    AmericaThule,
    AmericaThunderBay,
    AmericaTijuana,
    AmericaToronto,
    AmericaTortola,
    AmericaVancouver,
    AmericaVirgin,
    AmericaWhitehorse,
    AmericaWinnipeg,
    AmericaYakutat,
    AmericaYellowknife,
    AntarcticaCasey,
    AntarcticaDavis,
    AntarcticaDumontDUrville,
    AntarcticaMacquarie,
    AntarcticaMawson,
    AntarcticaMcMurdo,
    AntarcticaPalmer,
    AntarcticaRothera,
    AntarcticaSouthPole,
    AntarcticaSyowa,
    AntarcticaTroll,
    AntarcticaVostok,
    ArcticLongyearbyen,
    AsiaAden,
    AsiaAlmaty,
    AsiaAmman,
    AsiaAnadyr,
    AsiaAqtau,
    AsiaAqtobe,
    AsiaAshgabat,
    AsiaAshkhabad,
    AsiaAtyrau,
    AsiaBaghdad,
    AsiaBahrain,
    AsiaBaku,
    AsiaBangkok,
    AsiaBarnaul,
    AsiaBeirut,
    AsiaBishkek,
    AsiaBrunei,
    AsiaCalcutta,
    AsiaChita,
    AsiaChoibalsan,
    AsiaChongqing,
    AsiaChungking,
    AsiaColombo,
    AsiaDacca,
    AsiaDamascus,
    AsiaDhaka,
    AsiaDili,
    AsiaDubai,
    AsiaDushanbe,
    AsiaFamagusta,
    AsiaGaza,
    AsiaHarbin,
    AsiaHebron,
    AsiaHoChiMinh,
    AsiaHongKong,
    AsiaHovd,
    AsiaIrkutsk,
    AsiaIstanbul,
    AsiaJakarta,
    AsiaJayapura,
    AsiaJerusalem,
    AsiaKabul,
    AsiaKamchatka,
    AsiaKarachi,
    AsiaKashgar,
    AsiaKathmandu,
    AsiaKatmandu,
    AsiaKhandyga,
    AsiaKolkata,
    AsiaKrasnoyarsk,
    AsiaKualaLumpur,
    AsiaKuching,
    AsiaKuwait,
    AsiaMacao,
    AsiaMacau,
    AsiaMagadan,
    AsiaMakassar,
    AsiaManila,
    AsiaMuscat,
    AsiaNicosia,
    AsiaNovokuznetsk,
    AsiaNovosibirsk,
    AsiaOmsk,
    AsiaOral,
    AsiaPhnomPenh,
    AsiaPontianak,
    AsiaPyongyang,
    AsiaQatar,
    AsiaQostanay,
    AsiaQyzylorda,
    AsiaRangoon,
    AsiaRiyadh,
    AsiaSaigon,
    AsiaSakhalin,
    AsiaSamarkand,
    AsiaSeoul,
    AsiaShanghai,
    AsiaSingapore,
    AsiaSrednekolymsk,
    AsiaTaipei,
    AsiaTashkent,
    AsiaTbilisi,
    AsiaTehran,
    AsiaTelAviv,
    AsiaThimbu,
    AsiaThimphu,
    AsiaTokyo,
    AsiaTomsk,
    AsiaUjungPandang,
    AsiaUlaanbaatar,
    AsiaUlanBator,
    AsiaUrumqi,
    AsiaUstMinusNera,
    AsiaVientiane,
    AsiaVladivostok,
    AsiaYakutsk,
    AsiaYangon,
    AsiaYekaterinburg,
    AsiaYerevan,
    AtlanticAzores,
    AtlanticBermuda,
    AtlanticCanary,
    AtlanticCapeVerde,
    AtlanticFaeroe,
    AtlanticFaroe,
    AtlanticJanMayen,
    AtlanticMadeira,
    AtlanticReykjavik,
    AtlanticSouthGeorgia,
    AtlanticStHelena,
    AtlanticStanley,
    AustraliaAct,
    AustraliaAdelaide,
    AustraliaBrisbane,
    AustraliaBrokenHill,
    AustraliaCanberra,
    AustraliaCurrie,
    AustraliaDarwin,
    AustraliaEucla,
    AustraliaHobart,
    AustraliaLhi,
    AustraliaLindeman,
    AustraliaLordHowe,
    AustraliaMelbourne,
    AustraliaNsw,
    AustraliaNorth,
    AustraliaPerth,
    AustraliaQueensland,
    AustraliaSouth,
    AustraliaSydney,
    AustraliaTasmania,
    AustraliaVictoria,
    AustraliaWest,
    AustraliaYancowinna,
    BrazilAcre,
    BrazilDeNoronha,
    BrazilEast,
    BrazilWest,
    Cet,
    Cst6cdt,
    CanadaAtlantic,
    CanadaCentral,
    CanadaEastern,
    CanadaMountain,
    CanadaNewfoundland,
    CanadaPacific,
    CanadaSaskatchewan,
    CanadaYukon,
    ChileContinental,
    ChileEasterIsland,
    Cuba,
    Eet,
    Est,
    Est5edt,
    Egypt,
    Eire,
    EtcGmt,
    EtcGmtPlus0,
    EtcGmtPlus1,
    EtcGmtPlus10,
    EtcGmtPlus11,
    EtcGmtPlus12,
    EtcGmtPlus2,
    EtcGmtPlus3,
    EtcGmtPlus4,
    EtcGmtPlus5,
    EtcGmtPlus6,
    EtcGmtPlus7,
    EtcGmtPlus8,
    EtcGmtPlus9,
    EtcGmtMinus0,
    EtcGmtMinus1,
    EtcGmtMinus10,
    EtcGmtMinus11,
    EtcGmtMinus12,
    EtcGmtMinus13,
    EtcGmtMinus14,
    EtcGmtMinus2,
    EtcGmtMinus3,
    EtcGmtMinus4,
    EtcGmtMinus5,
    EtcGmtMinus6,
    EtcGmtMinus7,
    EtcGmtMinus8,
    EtcGmtMinus9,
    EtcGmt0,
    EtcGreenwich,
    EtcUct,
    EtcUtc,
    EtcUniversal,
    EtcZulu,
    EuropeAmsterdam,
    EuropeAndorra,
    EuropeAstrakhan,
    EuropeAthens,
    EuropeBelfast,
    EuropeBelgrade,
    EuropeBerlin,
    EuropeBratislava,
    EuropeBrussels,
    EuropeBucharest,
    EuropeBudapest,
    EuropeBusingen,
    EuropeChisinau,
    EuropeCopenhagen,
    EuropeDublin,
    EuropeGibraltar,
    EuropeGuernsey,
    EuropeHelsinki,
    EuropeIsleOfMan,
    EuropeIstanbul,
    EuropeJersey,
    EuropeKaliningrad,
    EuropeKiev,
    EuropeKirov,
    EuropeKyiv,
    EuropeLisbon,
    EuropeLjubljana,
    EuropeLondon,
    EuropeLuxembourg,
    EuropeMadrid,
    EuropeMalta,
    EuropeMariehamn,
    EuropeMinsk,
    EuropeMonaco,
    EuropeMoscow,
    EuropeNicosia,
    EuropeOslo,
    EuropeParis,
    EuropePodgorica,
    EuropePrague,
    EuropeRiga,
    EuropeRome,
    EuropeSamara,
    EuropeSanMarino,
    EuropeSarajevo,
    EuropeSaratov,
    EuropeSimferopol,
    EuropeSkopje,
    EuropeSofia,
    EuropeStockholm,
    EuropeTallinn,
    EuropeTirane,
    EuropeTiraspol,
    EuropeUlyanovsk,
    EuropeUzhgorod,
    EuropeVaduz,
    EuropeVatican,
    EuropeVienna,
    EuropeVilnius,
    EuropeVolgograd,
    EuropeWarsaw,
    EuropeZagreb,
    EuropeZaporozhye,
    EuropeZurich,
    Factory,
    Gb,
    GbMinusEire,
    Gmt,
    GmtPlus0,
    GmtMinus0,
    Gmt0,
    Greenwich,
    Hst,
    Hongkong,
    Iceland,
    IndianAntananarivo,
    IndianChagos,
    IndianChristmas,
    IndianCocos,
    IndianComoro,
    IndianKerguelen,
    IndianMahe,
    IndianMaldives,
    IndianMauritius,
    IndianMayotte,
    IndianReunion,
    Iran,
    Israel,
    Jamaica,
    Japan,
    Kwajalein,
    Libya,
    Met,
    Mst,
    Mst7mdt,
    MexicoBajaNorte,
    MexicoBajaSur,
    MexicoGeneral,
    Nz,
    NzMinusChat,
    Navajo,
    Prc,
    Pst8pdt,
    PacificApia,
    PacificAuckland,
    PacificBougainville,
    PacificChatham,
    PacificChuuk,
    PacificEaster,
    PacificEfate,
    PacificEnderbury,
    PacificFakaofo,
    PacificFiji,
    PacificFunafuti,
    PacificGalapagos,
    PacificGambier,
    PacificGuadalcanal,
    PacificGuam,
    PacificHonolulu,
    PacificJohnston,
    PacificKanton,
    PacificKiritimati,
    PacificKosrae,
    PacificKwajalein,
    PacificMajuro,
    PacificMarquesas,
    PacificMidway,
    PacificNauru,
    PacificNiue,
    PacificNorfolk,
    PacificNoumea,
    PacificPagoPago,
    PacificPalau,
    PacificPitcairn,
    PacificPohnpei,
    PacificPonape,
    PacificPortMoresby,
    PacificRarotonga,
    PacificSaipan,
    PacificSamoa,
    PacificTahiti,
    PacificTarawa,
    PacificTongatapu,
    PacificTruk,
    PacificWake,
    PacificWallis,
    PacificYap,
    Poland,
    Portugal,
    Roc,
    Rok,
    Singapore,
    Turkey,
    Uct,
    UsAlaska,
    UsAleutian,
    UsArizona,
    UsCentral,
    UsEastMinusIndiana,
    UsEastern,
    UsHawaii,
    UsIndianaMinusStarke,
    UsMichigan,
    UsMountain,
    UsPacific,
    UsPacificMinusNew,
    UsSamoa,
    Utc,
    Universal,
    WMinusSu,
    Wet,
    Zulu,
}

impl CreateReportRunParametersTimezone {
    pub fn as_str(self) -> &'static str {
        match self {
            Self::AfricaAbidjan => "Africa/Abidjan",
            Self::AfricaAccra => "Africa/Accra",
            Self::AfricaAddisAbaba => "Africa/Addis_Ababa",
            Self::AfricaAlgiers => "Africa/Algiers",
            Self::AfricaAsmara => "Africa/Asmara",
            Self::AfricaAsmera => "Africa/Asmera",
            Self::AfricaBamako => "Africa/Bamako",
            Self::AfricaBangui => "Africa/Bangui",
            Self::AfricaBanjul => "Africa/Banjul",
            Self::AfricaBissau => "Africa/Bissau",
            Self::AfricaBlantyre => "Africa/Blantyre",
            Self::AfricaBrazzaville => "Africa/Brazzaville",
            Self::AfricaBujumbura => "Africa/Bujumbura",
            Self::AfricaCairo => "Africa/Cairo",
            Self::AfricaCasablanca => "Africa/Casablanca",
            Self::AfricaCeuta => "Africa/Ceuta",
            Self::AfricaConakry => "Africa/Conakry",
            Self::AfricaDakar => "Africa/Dakar",
            Self::AfricaDarEsSalaam => "Africa/Dar_es_Salaam",
            Self::AfricaDjibouti => "Africa/Djibouti",
            Self::AfricaDouala => "Africa/Douala",
            Self::AfricaElAaiun => "Africa/El_Aaiun",
            Self::AfricaFreetown => "Africa/Freetown",
            Self::AfricaGaborone => "Africa/Gaborone",
            Self::AfricaHarare => "Africa/Harare",
            Self::AfricaJohannesburg => "Africa/Johannesburg",
            Self::AfricaJuba => "Africa/Juba",
            Self::AfricaKampala => "Africa/Kampala",
            Self::AfricaKhartoum => "Africa/Khartoum",
            Self::AfricaKigali => "Africa/Kigali",
            Self::AfricaKinshasa => "Africa/Kinshasa",
            Self::AfricaLagos => "Africa/Lagos",
            Self::AfricaLibreville => "Africa/Libreville",
            Self::AfricaLome => "Africa/Lome",
            Self::AfricaLuanda => "Africa/Luanda",
            Self::AfricaLubumbashi => "Africa/Lubumbashi",
            Self::AfricaLusaka => "Africa/Lusaka",
            Self::AfricaMalabo => "Africa/Malabo",
            Self::AfricaMaputo => "Africa/Maputo",
            Self::AfricaMaseru => "Africa/Maseru",
            Self::AfricaMbabane => "Africa/Mbabane",
            Self::AfricaMogadishu => "Africa/Mogadishu",
            Self::AfricaMonrovia => "Africa/Monrovia",
            Self::AfricaNairobi => "Africa/Nairobi",
            Self::AfricaNdjamena => "Africa/Ndjamena",
            Self::AfricaNiamey => "Africa/Niamey",
            Self::AfricaNouakchott => "Africa/Nouakchott",
            Self::AfricaOuagadougou => "Africa/Ouagadougou",
            Self::AfricaPortoMinusNovo => "Africa/Porto-Novo",
            Self::AfricaSaoTome => "Africa/Sao_Tome",
            Self::AfricaTimbuktu => "Africa/Timbuktu",
            Self::AfricaTripoli => "Africa/Tripoli",
            Self::AfricaTunis => "Africa/Tunis",
            Self::AfricaWindhoek => "Africa/Windhoek",
            Self::AmericaAdak => "America/Adak",
            Self::AmericaAnchorage => "America/Anchorage",
            Self::AmericaAnguilla => "America/Anguilla",
            Self::AmericaAntigua => "America/Antigua",
            Self::AmericaAraguaina => "America/Araguaina",
            Self::AmericaArgentinaBuenosAires => "America/Argentina/Buenos_Aires",
            Self::AmericaArgentinaCatamarca => "America/Argentina/Catamarca",
            Self::AmericaArgentinaComodRivadavia => "America/Argentina/ComodRivadavia",
            Self::AmericaArgentinaCordoba => "America/Argentina/Cordoba",
            Self::AmericaArgentinaJujuy => "America/Argentina/Jujuy",
            Self::AmericaArgentinaLaRioja => "America/Argentina/La_Rioja",
            Self::AmericaArgentinaMendoza => "America/Argentina/Mendoza",
            Self::AmericaArgentinaRioGallegos => "America/Argentina/Rio_Gallegos",
            Self::AmericaArgentinaSalta => "America/Argentina/Salta",
            Self::AmericaArgentinaSanJuan => "America/Argentina/San_Juan",
            Self::AmericaArgentinaSanLuis => "America/Argentina/San_Luis",
            Self::AmericaArgentinaTucuman => "America/Argentina/Tucuman",
            Self::AmericaArgentinaUshuaia => "America/Argentina/Ushuaia",
            Self::AmericaAruba => "America/Aruba",
            Self::AmericaAsuncion => "America/Asuncion",
            Self::AmericaAtikokan => "America/Atikokan",
            Self::AmericaAtka => "America/Atka",
            Self::AmericaBahia => "America/Bahia",
            Self::AmericaBahiaBanderas => "America/Bahia_Banderas",
            Self::AmericaBarbados => "America/Barbados",
            Self::AmericaBelem => "America/Belem",
            Self::AmericaBelize => "America/Belize",
            Self::AmericaBlancMinusSablon => "America/Blanc-Sablon",
            Self::AmericaBoaVista => "America/Boa_Vista",
            Self::AmericaBogota => "America/Bogota",
            Self::AmericaBoise => "America/Boise",
            Self::AmericaBuenosAires => "America/Buenos_Aires",
            Self::AmericaCambridgeBay => "America/Cambridge_Bay",
            Self::AmericaCampoGrande => "America/Campo_Grande",
            Self::AmericaCancun => "America/Cancun",
            Self::AmericaCaracas => "America/Caracas",
            Self::AmericaCatamarca => "America/Catamarca",
            Self::AmericaCayenne => "America/Cayenne",
            Self::AmericaCayman => "America/Cayman",
            Self::AmericaChicago => "America/Chicago",
            Self::AmericaChihuahua => "America/Chihuahua",
            Self::AmericaCoralHarbour => "America/Coral_Harbour",
            Self::AmericaCordoba => "America/Cordoba",
            Self::AmericaCostaRica => "America/Costa_Rica",
            Self::AmericaCreston => "America/Creston",
            Self::AmericaCuiaba => "America/Cuiaba",
            Self::AmericaCuracao => "America/Curacao",
            Self::AmericaDanmarkshavn => "America/Danmarkshavn",
            Self::AmericaDawson => "America/Dawson",
            Self::AmericaDawsonCreek => "America/Dawson_Creek",
            Self::AmericaDenver => "America/Denver",
            Self::AmericaDetroit => "America/Detroit",
            Self::AmericaDominica => "America/Dominica",
            Self::AmericaEdmonton => "America/Edmonton",
            Self::AmericaEirunepe => "America/Eirunepe",
            Self::AmericaElSalvador => "America/El_Salvador",
            Self::AmericaEnsenada => "America/Ensenada",
            Self::AmericaFortNelson => "America/Fort_Nelson",
            Self::AmericaFortWayne => "America/Fort_Wayne",
            Self::AmericaFortaleza => "America/Fortaleza",
            Self::AmericaGlaceBay => "America/Glace_Bay",
            Self::AmericaGodthab => "America/Godthab",
            Self::AmericaGooseBay => "America/Goose_Bay",
            Self::AmericaGrandTurk => "America/Grand_Turk",
            Self::AmericaGrenada => "America/Grenada",
            Self::AmericaGuadeloupe => "America/Guadeloupe",
            Self::AmericaGuatemala => "America/Guatemala",
            Self::AmericaGuayaquil => "America/Guayaquil",
            Self::AmericaGuyana => "America/Guyana",
            Self::AmericaHalifax => "America/Halifax",
            Self::AmericaHavana => "America/Havana",
            Self::AmericaHermosillo => "America/Hermosillo",
            Self::AmericaIndianaIndianapolis => "America/Indiana/Indianapolis",
            Self::AmericaIndianaKnox => "America/Indiana/Knox",
            Self::AmericaIndianaMarengo => "America/Indiana/Marengo",
            Self::AmericaIndianaPetersburg => "America/Indiana/Petersburg",
            Self::AmericaIndianaTellCity => "America/Indiana/Tell_City",
            Self::AmericaIndianaVevay => "America/Indiana/Vevay",
            Self::AmericaIndianaVincennes => "America/Indiana/Vincennes",
            Self::AmericaIndianaWinamac => "America/Indiana/Winamac",
            Self::AmericaIndianapolis => "America/Indianapolis",
            Self::AmericaInuvik => "America/Inuvik",
            Self::AmericaIqaluit => "America/Iqaluit",
            Self::AmericaJamaica => "America/Jamaica",
            Self::AmericaJujuy => "America/Jujuy",
            Self::AmericaJuneau => "America/Juneau",
            Self::AmericaKentuckyLouisville => "America/Kentucky/Louisville",
            Self::AmericaKentuckyMonticello => "America/Kentucky/Monticello",
            Self::AmericaKnoxIn => "America/Knox_IN",
            Self::AmericaKralendijk => "America/Kralendijk",
            Self::AmericaLaPaz => "America/La_Paz",
            Self::AmericaLima => "America/Lima",
            Self::AmericaLosAngeles => "America/Los_Angeles",
            Self::AmericaLouisville => "America/Louisville",
            Self::AmericaLowerPrinces => "America/Lower_Princes",
            Self::AmericaMaceio => "America/Maceio",
            Self::AmericaManagua => "America/Managua",
            Self::AmericaManaus => "America/Manaus",
            Self::AmericaMarigot => "America/Marigot",
            Self::AmericaMartinique => "America/Martinique",
            Self::AmericaMatamoros => "America/Matamoros",
            Self::AmericaMazatlan => "America/Mazatlan",
            Self::AmericaMendoza => "America/Mendoza",
            Self::AmericaMenominee => "America/Menominee",
            Self::AmericaMerida => "America/Merida",
            Self::AmericaMetlakatla => "America/Metlakatla",
            Self::AmericaMexicoCity => "America/Mexico_City",
            Self::AmericaMiquelon => "America/Miquelon",
            Self::AmericaMoncton => "America/Moncton",
            Self::AmericaMonterrey => "America/Monterrey",
            Self::AmericaMontevideo => "America/Montevideo",
            Self::AmericaMontreal => "America/Montreal",
            Self::AmericaMontserrat => "America/Montserrat",
            Self::AmericaNassau => "America/Nassau",
            Self::AmericaNewYork => "America/New_York",
            Self::AmericaNipigon => "America/Nipigon",
            Self::AmericaNome => "America/Nome",
            Self::AmericaNoronha => "America/Noronha",
            Self::AmericaNorthDakotaBeulah => "America/North_Dakota/Beulah",
            Self::AmericaNorthDakotaCenter => "America/North_Dakota/Center",
            Self::AmericaNorthDakotaNewSalem => "America/North_Dakota/New_Salem",
            Self::AmericaNuuk => "America/Nuuk",
            Self::AmericaOjinaga => "America/Ojinaga",
            Self::AmericaPanama => "America/Panama",
            Self::AmericaPangnirtung => "America/Pangnirtung",
            Self::AmericaParamaribo => "America/Paramaribo",
            Self::AmericaPhoenix => "America/Phoenix",
            Self::AmericaPortMinusauMinusPrince => "America/Port-au-Prince",
            Self::AmericaPortOfSpain => "America/Port_of_Spain",
            Self::AmericaPortoAcre => "America/Porto_Acre",
            Self::AmericaPortoVelho => "America/Porto_Velho",
            Self::AmericaPuertoRico => "America/Puerto_Rico",
            Self::AmericaPuntaArenas => "America/Punta_Arenas",
            Self::AmericaRainyRiver => "America/Rainy_River",
            Self::AmericaRankinInlet => "America/Rankin_Inlet",
            Self::AmericaRecife => "America/Recife",
            Self::AmericaRegina => "America/Regina",
            Self::AmericaResolute => "America/Resolute",
            Self::AmericaRioBranco => "America/Rio_Branco",
            Self::AmericaRosario => "America/Rosario",
            Self::AmericaSantaIsabel => "America/Santa_Isabel",
            Self::AmericaSantarem => "America/Santarem",
            Self::AmericaSantiago => "America/Santiago",
            Self::AmericaSantoDomingo => "America/Santo_Domingo",
            Self::AmericaSaoPaulo => "America/Sao_Paulo",
            Self::AmericaScoresbysund => "America/Scoresbysund",
            Self::AmericaShiprock => "America/Shiprock",
            Self::AmericaSitka => "America/Sitka",
            Self::AmericaStBarthelemy => "America/St_Barthelemy",
            Self::AmericaStJohns => "America/St_Johns",
            Self::AmericaStKitts => "America/St_Kitts",
            Self::AmericaStLucia => "America/St_Lucia",
            Self::AmericaStThomas => "America/St_Thomas",
            Self::AmericaStVincent => "America/St_Vincent",
            Self::AmericaSwiftCurrent => "America/Swift_Current",
            Self::AmericaTegucigalpa => "America/Tegucigalpa",
            Self::AmericaThule => "America/Thule",
            Self::AmericaThunderBay => "America/Thunder_Bay",
            Self::AmericaTijuana => "America/Tijuana",
            Self::AmericaToronto => "America/Toronto",
            Self::AmericaTortola => "America/Tortola",
            Self::AmericaVancouver => "America/Vancouver",
            Self::AmericaVirgin => "America/Virgin",
            Self::AmericaWhitehorse => "America/Whitehorse",
            Self::AmericaWinnipeg => "America/Winnipeg",
            Self::AmericaYakutat => "America/Yakutat",
            Self::AmericaYellowknife => "America/Yellowknife",
            Self::AntarcticaCasey => "Antarctica/Casey",
            Self::AntarcticaDavis => "Antarctica/Davis",
            Self::AntarcticaDumontDUrville => "Antarctica/DumontDUrville",
            Self::AntarcticaMacquarie => "Antarctica/Macquarie",
            Self::AntarcticaMawson => "Antarctica/Mawson",
            Self::AntarcticaMcMurdo => "Antarctica/McMurdo",
            Self::AntarcticaPalmer => "Antarctica/Palmer",
            Self::AntarcticaRothera => "Antarctica/Rothera",
            Self::AntarcticaSouthPole => "Antarctica/South_Pole",
            Self::AntarcticaSyowa => "Antarctica/Syowa",
            Self::AntarcticaTroll => "Antarctica/Troll",
            Self::AntarcticaVostok => "Antarctica/Vostok",
            Self::ArcticLongyearbyen => "Arctic/Longyearbyen",
            Self::AsiaAden => "Asia/Aden",
            Self::AsiaAlmaty => "Asia/Almaty",
            Self::AsiaAmman => "Asia/Amman",
            Self::AsiaAnadyr => "Asia/Anadyr",
            Self::AsiaAqtau => "Asia/Aqtau",
            Self::AsiaAqtobe => "Asia/Aqtobe",
            Self::AsiaAshgabat => "Asia/Ashgabat",
            Self::AsiaAshkhabad => "Asia/Ashkhabad",
            Self::AsiaAtyrau => "Asia/Atyrau",
            Self::AsiaBaghdad => "Asia/Baghdad",
            Self::AsiaBahrain => "Asia/Bahrain",
            Self::AsiaBaku => "Asia/Baku",
            Self::AsiaBangkok => "Asia/Bangkok",
            Self::AsiaBarnaul => "Asia/Barnaul",
            Self::AsiaBeirut => "Asia/Beirut",
            Self::AsiaBishkek => "Asia/Bishkek",
            Self::AsiaBrunei => "Asia/Brunei",
            Self::AsiaCalcutta => "Asia/Calcutta",
            Self::AsiaChita => "Asia/Chita",
            Self::AsiaChoibalsan => "Asia/Choibalsan",
            Self::AsiaChongqing => "Asia/Chongqing",
            Self::AsiaChungking => "Asia/Chungking",
            Self::AsiaColombo => "Asia/Colombo",
            Self::AsiaDacca => "Asia/Dacca",
            Self::AsiaDamascus => "Asia/Damascus",
            Self::AsiaDhaka => "Asia/Dhaka",
            Self::AsiaDili => "Asia/Dili",
            Self::AsiaDubai => "Asia/Dubai",
            Self::AsiaDushanbe => "Asia/Dushanbe",
            Self::AsiaFamagusta => "Asia/Famagusta",
            Self::AsiaGaza => "Asia/Gaza",
            Self::AsiaHarbin => "Asia/Harbin",
            Self::AsiaHebron => "Asia/Hebron",
            Self::AsiaHoChiMinh => "Asia/Ho_Chi_Minh",
            Self::AsiaHongKong => "Asia/Hong_Kong",
            Self::AsiaHovd => "Asia/Hovd",
            Self::AsiaIrkutsk => "Asia/Irkutsk",
            Self::AsiaIstanbul => "Asia/Istanbul",
            Self::AsiaJakarta => "Asia/Jakarta",
            Self::AsiaJayapura => "Asia/Jayapura",
            Self::AsiaJerusalem => "Asia/Jerusalem",
            Self::AsiaKabul => "Asia/Kabul",
            Self::AsiaKamchatka => "Asia/Kamchatka",
            Self::AsiaKarachi => "Asia/Karachi",
            Self::AsiaKashgar => "Asia/Kashgar",
            Self::AsiaKathmandu => "Asia/Kathmandu",
            Self::AsiaKatmandu => "Asia/Katmandu",
            Self::AsiaKhandyga => "Asia/Khandyga",
            Self::AsiaKolkata => "Asia/Kolkata",
            Self::AsiaKrasnoyarsk => "Asia/Krasnoyarsk",
            Self::AsiaKualaLumpur => "Asia/Kuala_Lumpur",
            Self::AsiaKuching => "Asia/Kuching",
            Self::AsiaKuwait => "Asia/Kuwait",
            Self::AsiaMacao => "Asia/Macao",
            Self::AsiaMacau => "Asia/Macau",
            Self::AsiaMagadan => "Asia/Magadan",
            Self::AsiaMakassar => "Asia/Makassar",
            Self::AsiaManila => "Asia/Manila",
            Self::AsiaMuscat => "Asia/Muscat",
            Self::AsiaNicosia => "Asia/Nicosia",
            Self::AsiaNovokuznetsk => "Asia/Novokuznetsk",
            Self::AsiaNovosibirsk => "Asia/Novosibirsk",
            Self::AsiaOmsk => "Asia/Omsk",
            Self::AsiaOral => "Asia/Oral",
            Self::AsiaPhnomPenh => "Asia/Phnom_Penh",
            Self::AsiaPontianak => "Asia/Pontianak",
            Self::AsiaPyongyang => "Asia/Pyongyang",
            Self::AsiaQatar => "Asia/Qatar",
            Self::AsiaQostanay => "Asia/Qostanay",
            Self::AsiaQyzylorda => "Asia/Qyzylorda",
            Self::AsiaRangoon => "Asia/Rangoon",
            Self::AsiaRiyadh => "Asia/Riyadh",
            Self::AsiaSaigon => "Asia/Saigon",
            Self::AsiaSakhalin => "Asia/Sakhalin",
            Self::AsiaSamarkand => "Asia/Samarkand",
            Self::AsiaSeoul => "Asia/Seoul",
            Self::AsiaShanghai => "Asia/Shanghai",
            Self::AsiaSingapore => "Asia/Singapore",
            Self::AsiaSrednekolymsk => "Asia/Srednekolymsk",
            Self::AsiaTaipei => "Asia/Taipei",
            Self::AsiaTashkent => "Asia/Tashkent",
            Self::AsiaTbilisi => "Asia/Tbilisi",
            Self::AsiaTehran => "Asia/Tehran",
            Self::AsiaTelAviv => "Asia/Tel_Aviv",
            Self::AsiaThimbu => "Asia/Thimbu",
            Self::AsiaThimphu => "Asia/Thimphu",
            Self::AsiaTokyo => "Asia/Tokyo",
            Self::AsiaTomsk => "Asia/Tomsk",
            Self::AsiaUjungPandang => "Asia/Ujung_Pandang",
            Self::AsiaUlaanbaatar => "Asia/Ulaanbaatar",
            Self::AsiaUlanBator => "Asia/Ulan_Bator",
            Self::AsiaUrumqi => "Asia/Urumqi",
            Self::AsiaUstMinusNera => "Asia/Ust-Nera",
            Self::AsiaVientiane => "Asia/Vientiane",
            Self::AsiaVladivostok => "Asia/Vladivostok",
            Self::AsiaYakutsk => "Asia/Yakutsk",
            Self::AsiaYangon => "Asia/Yangon",
            Self::AsiaYekaterinburg => "Asia/Yekaterinburg",
            Self::AsiaYerevan => "Asia/Yerevan",
            Self::AtlanticAzores => "Atlantic/Azores",
            Self::AtlanticBermuda => "Atlantic/Bermuda",
            Self::AtlanticCanary => "Atlantic/Canary",
            Self::AtlanticCapeVerde => "Atlantic/Cape_Verde",
            Self::AtlanticFaeroe => "Atlantic/Faeroe",
            Self::AtlanticFaroe => "Atlantic/Faroe",
            Self::AtlanticJanMayen => "Atlantic/Jan_Mayen",
            Self::AtlanticMadeira => "Atlantic/Madeira",
            Self::AtlanticReykjavik => "Atlantic/Reykjavik",
            Self::AtlanticSouthGeorgia => "Atlantic/South_Georgia",
            Self::AtlanticStHelena => "Atlantic/St_Helena",
            Self::AtlanticStanley => "Atlantic/Stanley",
            Self::AustraliaAct => "Australia/ACT",
            Self::AustraliaAdelaide => "Australia/Adelaide",
            Self::AustraliaBrisbane => "Australia/Brisbane",
            Self::AustraliaBrokenHill => "Australia/Broken_Hill",
            Self::AustraliaCanberra => "Australia/Canberra",
            Self::AustraliaCurrie => "Australia/Currie",
            Self::AustraliaDarwin => "Australia/Darwin",
            Self::AustraliaEucla => "Australia/Eucla",
            Self::AustraliaHobart => "Australia/Hobart",
            Self::AustraliaLhi => "Australia/LHI",
            Self::AustraliaLindeman => "Australia/Lindeman",
            Self::AustraliaLordHowe => "Australia/Lord_Howe",
            Self::AustraliaMelbourne => "Australia/Melbourne",
            Self::AustraliaNsw => "Australia/NSW",
            Self::AustraliaNorth => "Australia/North",
            Self::AustraliaPerth => "Australia/Perth",
            Self::AustraliaQueensland => "Australia/Queensland",
            Self::AustraliaSouth => "Australia/South",
            Self::AustraliaSydney => "Australia/Sydney",
            Self::AustraliaTasmania => "Australia/Tasmania",
            Self::AustraliaVictoria => "Australia/Victoria",
            Self::AustraliaWest => "Australia/West",
            Self::AustraliaYancowinna => "Australia/Yancowinna",
            Self::BrazilAcre => "Brazil/Acre",
            Self::BrazilDeNoronha => "Brazil/DeNoronha",
            Self::BrazilEast => "Brazil/East",
            Self::BrazilWest => "Brazil/West",
            Self::Cet => "CET",
            Self::Cst6cdt => "CST6CDT",
            Self::CanadaAtlantic => "Canada/Atlantic",
            Self::CanadaCentral => "Canada/Central",
            Self::CanadaEastern => "Canada/Eastern",
            Self::CanadaMountain => "Canada/Mountain",
            Self::CanadaNewfoundland => "Canada/Newfoundland",
            Self::CanadaPacific => "Canada/Pacific",
            Self::CanadaSaskatchewan => "Canada/Saskatchewan",
            Self::CanadaYukon => "Canada/Yukon",
            Self::ChileContinental => "Chile/Continental",
            Self::ChileEasterIsland => "Chile/EasterIsland",
            Self::Cuba => "Cuba",
            Self::Eet => "EET",
            Self::Est => "EST",
            Self::Est5edt => "EST5EDT",
            Self::Egypt => "Egypt",
            Self::Eire => "Eire",
            Self::EtcGmt => "Etc/GMT",
            Self::EtcGmtPlus0 => "Etc/GMT+0",
            Self::EtcGmtPlus1 => "Etc/GMT+1",
            Self::EtcGmtPlus10 => "Etc/GMT+10",
            Self::EtcGmtPlus11 => "Etc/GMT+11",
            Self::EtcGmtPlus12 => "Etc/GMT+12",
            Self::EtcGmtPlus2 => "Etc/GMT+2",
            Self::EtcGmtPlus3 => "Etc/GMT+3",
            Self::EtcGmtPlus4 => "Etc/GMT+4",
            Self::EtcGmtPlus5 => "Etc/GMT+5",
            Self::EtcGmtPlus6 => "Etc/GMT+6",
            Self::EtcGmtPlus7 => "Etc/GMT+7",
            Self::EtcGmtPlus8 => "Etc/GMT+8",
            Self::EtcGmtPlus9 => "Etc/GMT+9",
            Self::EtcGmtMinus0 => "Etc/GMT-0",
            Self::EtcGmtMinus1 => "Etc/GMT-1",
            Self::EtcGmtMinus10 => "Etc/GMT-10",
            Self::EtcGmtMinus11 => "Etc/GMT-11",
            Self::EtcGmtMinus12 => "Etc/GMT-12",
            Self::EtcGmtMinus13 => "Etc/GMT-13",
            Self::EtcGmtMinus14 => "Etc/GMT-14",
            Self::EtcGmtMinus2 => "Etc/GMT-2",
            Self::EtcGmtMinus3 => "Etc/GMT-3",
            Self::EtcGmtMinus4 => "Etc/GMT-4",
            Self::EtcGmtMinus5 => "Etc/GMT-5",
            Self::EtcGmtMinus6 => "Etc/GMT-6",
            Self::EtcGmtMinus7 => "Etc/GMT-7",
            Self::EtcGmtMinus8 => "Etc/GMT-8",
            Self::EtcGmtMinus9 => "Etc/GMT-9",
            Self::EtcGmt0 => "Etc/GMT0",
            Self::EtcGreenwich => "Etc/Greenwich",
            Self::EtcUct => "Etc/UCT",
            Self::EtcUtc => "Etc/UTC",
            Self::EtcUniversal => "Etc/Universal",
            Self::EtcZulu => "Etc/Zulu",
            Self::EuropeAmsterdam => "Europe/Amsterdam",
            Self::EuropeAndorra => "Europe/Andorra",
            Self::EuropeAstrakhan => "Europe/Astrakhan",
            Self::EuropeAthens => "Europe/Athens",
            Self::EuropeBelfast => "Europe/Belfast",
            Self::EuropeBelgrade => "Europe/Belgrade",
            Self::EuropeBerlin => "Europe/Berlin",
            Self::EuropeBratislava => "Europe/Bratislava",
            Self::EuropeBrussels => "Europe/Brussels",
            Self::EuropeBucharest => "Europe/Bucharest",
            Self::EuropeBudapest => "Europe/Budapest",
            Self::EuropeBusingen => "Europe/Busingen",
            Self::EuropeChisinau => "Europe/Chisinau",
            Self::EuropeCopenhagen => "Europe/Copenhagen",
            Self::EuropeDublin => "Europe/Dublin",
            Self::EuropeGibraltar => "Europe/Gibraltar",
            Self::EuropeGuernsey => "Europe/Guernsey",
            Self::EuropeHelsinki => "Europe/Helsinki",
            Self::EuropeIsleOfMan => "Europe/Isle_of_Man",
            Self::EuropeIstanbul => "Europe/Istanbul",
            Self::EuropeJersey => "Europe/Jersey",
            Self::EuropeKaliningrad => "Europe/Kaliningrad",
            Self::EuropeKiev => "Europe/Kiev",
            Self::EuropeKirov => "Europe/Kirov",
            Self::EuropeKyiv => "Europe/Kyiv",
            Self::EuropeLisbon => "Europe/Lisbon",
            Self::EuropeLjubljana => "Europe/Ljubljana",
            Self::EuropeLondon => "Europe/London",
            Self::EuropeLuxembourg => "Europe/Luxembourg",
            Self::EuropeMadrid => "Europe/Madrid",
            Self::EuropeMalta => "Europe/Malta",
            Self::EuropeMariehamn => "Europe/Mariehamn",
            Self::EuropeMinsk => "Europe/Minsk",
            Self::EuropeMonaco => "Europe/Monaco",
            Self::EuropeMoscow => "Europe/Moscow",
            Self::EuropeNicosia => "Europe/Nicosia",
            Self::EuropeOslo => "Europe/Oslo",
            Self::EuropeParis => "Europe/Paris",
            Self::EuropePodgorica => "Europe/Podgorica",
            Self::EuropePrague => "Europe/Prague",
            Self::EuropeRiga => "Europe/Riga",
            Self::EuropeRome => "Europe/Rome",
            Self::EuropeSamara => "Europe/Samara",
            Self::EuropeSanMarino => "Europe/San_Marino",
            Self::EuropeSarajevo => "Europe/Sarajevo",
            Self::EuropeSaratov => "Europe/Saratov",
            Self::EuropeSimferopol => "Europe/Simferopol",
            Self::EuropeSkopje => "Europe/Skopje",
            Self::EuropeSofia => "Europe/Sofia",
            Self::EuropeStockholm => "Europe/Stockholm",
            Self::EuropeTallinn => "Europe/Tallinn",
            Self::EuropeTirane => "Europe/Tirane",
            Self::EuropeTiraspol => "Europe/Tiraspol",
            Self::EuropeUlyanovsk => "Europe/Ulyanovsk",
            Self::EuropeUzhgorod => "Europe/Uzhgorod",
            Self::EuropeVaduz => "Europe/Vaduz",
            Self::EuropeVatican => "Europe/Vatican",
            Self::EuropeVienna => "Europe/Vienna",
            Self::EuropeVilnius => "Europe/Vilnius",
            Self::EuropeVolgograd => "Europe/Volgograd",
            Self::EuropeWarsaw => "Europe/Warsaw",
            Self::EuropeZagreb => "Europe/Zagreb",
            Self::EuropeZaporozhye => "Europe/Zaporozhye",
            Self::EuropeZurich => "Europe/Zurich",
            Self::Factory => "Factory",
            Self::Gb => "GB",
            Self::GbMinusEire => "GB-Eire",
            Self::Gmt => "GMT",
            Self::GmtPlus0 => "GMT+0",
            Self::GmtMinus0 => "GMT-0",
            Self::Gmt0 => "GMT0",
            Self::Greenwich => "Greenwich",
            Self::Hst => "HST",
            Self::Hongkong => "Hongkong",
            Self::Iceland => "Iceland",
            Self::IndianAntananarivo => "Indian/Antananarivo",
            Self::IndianChagos => "Indian/Chagos",
            Self::IndianChristmas => "Indian/Christmas",
            Self::IndianCocos => "Indian/Cocos",
            Self::IndianComoro => "Indian/Comoro",
            Self::IndianKerguelen => "Indian/Kerguelen",
            Self::IndianMahe => "Indian/Mahe",
            Self::IndianMaldives => "Indian/Maldives",
            Self::IndianMauritius => "Indian/Mauritius",
            Self::IndianMayotte => "Indian/Mayotte",
            Self::IndianReunion => "Indian/Reunion",
            Self::Iran => "Iran",
            Self::Israel => "Israel",
            Self::Jamaica => "Jamaica",
            Self::Japan => "Japan",
            Self::Kwajalein => "Kwajalein",
            Self::Libya => "Libya",
            Self::Met => "MET",
            Self::Mst => "MST",
            Self::Mst7mdt => "MST7MDT",
            Self::MexicoBajaNorte => "Mexico/BajaNorte",
            Self::MexicoBajaSur => "Mexico/BajaSur",
            Self::MexicoGeneral => "Mexico/General",
            Self::Nz => "NZ",
            Self::NzMinusChat => "NZ-CHAT",
            Self::Navajo => "Navajo",
            Self::Prc => "PRC",
            Self::Pst8pdt => "PST8PDT",
            Self::PacificApia => "Pacific/Apia",
            Self::PacificAuckland => "Pacific/Auckland",
            Self::PacificBougainville => "Pacific/Bougainville",
            Self::PacificChatham => "Pacific/Chatham",
            Self::PacificChuuk => "Pacific/Chuuk",
            Self::PacificEaster => "Pacific/Easter",
            Self::PacificEfate => "Pacific/Efate",
            Self::PacificEnderbury => "Pacific/Enderbury",
            Self::PacificFakaofo => "Pacific/Fakaofo",
            Self::PacificFiji => "Pacific/Fiji",
            Self::PacificFunafuti => "Pacific/Funafuti",
            Self::PacificGalapagos => "Pacific/Galapagos",
            Self::PacificGambier => "Pacific/Gambier",
            Self::PacificGuadalcanal => "Pacific/Guadalcanal",
            Self::PacificGuam => "Pacific/Guam",
            Self::PacificHonolulu => "Pacific/Honolulu",
            Self::PacificJohnston => "Pacific/Johnston",
            Self::PacificKanton => "Pacific/Kanton",
            Self::PacificKiritimati => "Pacific/Kiritimati",
            Self::PacificKosrae => "Pacific/Kosrae",
            Self::PacificKwajalein => "Pacific/Kwajalein",
            Self::PacificMajuro => "Pacific/Majuro",
            Self::PacificMarquesas => "Pacific/Marquesas",
            Self::PacificMidway => "Pacific/Midway",
            Self::PacificNauru => "Pacific/Nauru",
            Self::PacificNiue => "Pacific/Niue",
            Self::PacificNorfolk => "Pacific/Norfolk",
            Self::PacificNoumea => "Pacific/Noumea",
            Self::PacificPagoPago => "Pacific/Pago_Pago",
            Self::PacificPalau => "Pacific/Palau",
            Self::PacificPitcairn => "Pacific/Pitcairn",
            Self::PacificPohnpei => "Pacific/Pohnpei",
            Self::PacificPonape => "Pacific/Ponape",
            Self::PacificPortMoresby => "Pacific/Port_Moresby",
            Self::PacificRarotonga => "Pacific/Rarotonga",
            Self::PacificSaipan => "Pacific/Saipan",
            Self::PacificSamoa => "Pacific/Samoa",
            Self::PacificTahiti => "Pacific/Tahiti",
            Self::PacificTarawa => "Pacific/Tarawa",
            Self::PacificTongatapu => "Pacific/Tongatapu",
            Self::PacificTruk => "Pacific/Truk",
            Self::PacificWake => "Pacific/Wake",
            Self::PacificWallis => "Pacific/Wallis",
            Self::PacificYap => "Pacific/Yap",
            Self::Poland => "Poland",
            Self::Portugal => "Portugal",
            Self::Roc => "ROC",
            Self::Rok => "ROK",
            Self::Singapore => "Singapore",
            Self::Turkey => "Turkey",
            Self::Uct => "UCT",
            Self::UsAlaska => "US/Alaska",
            Self::UsAleutian => "US/Aleutian",
            Self::UsArizona => "US/Arizona",
            Self::UsCentral => "US/Central",
            Self::UsEastMinusIndiana => "US/East-Indiana",
            Self::UsEastern => "US/Eastern",
            Self::UsHawaii => "US/Hawaii",
            Self::UsIndianaMinusStarke => "US/Indiana-Starke",
            Self::UsMichigan => "US/Michigan",
            Self::UsMountain => "US/Mountain",
            Self::UsPacific => "US/Pacific",
            Self::UsPacificMinusNew => "US/Pacific-New",
            Self::UsSamoa => "US/Samoa",
            Self::Utc => "UTC",
            Self::Universal => "Universal",
            Self::WMinusSu => "W-SU",
            Self::Wet => "WET",
            Self::Zulu => "Zulu",
        }
    }
}

impl std::str::FromStr for CreateReportRunParametersTimezone {
    type Err = ();
    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "Africa/Abidjan" => Ok(Self::AfricaAbidjan),
            "Africa/Accra" => Ok(Self::AfricaAccra),
            "Africa/Addis_Ababa" => Ok(Self::AfricaAddisAbaba),
            "Africa/Algiers" => Ok(Self::AfricaAlgiers),
            "Africa/Asmara" => Ok(Self::AfricaAsmara),
            "Africa/Asmera" => Ok(Self::AfricaAsmera),
            "Africa/Bamako" => Ok(Self::AfricaBamako),
            "Africa/Bangui" => Ok(Self::AfricaBangui),
            "Africa/Banjul" => Ok(Self::AfricaBanjul),
            "Africa/Bissau" => Ok(Self::AfricaBissau),
            "Africa/Blantyre" => Ok(Self::AfricaBlantyre),
            "Africa/Brazzaville" => Ok(Self::AfricaBrazzaville),
            "Africa/Bujumbura" => Ok(Self::AfricaBujumbura),
            "Africa/Cairo" => Ok(Self::AfricaCairo),
            "Africa/Casablanca" => Ok(Self::AfricaCasablanca),
            "Africa/Ceuta" => Ok(Self::AfricaCeuta),
            "Africa/Conakry" => Ok(Self::AfricaConakry),
            "Africa/Dakar" => Ok(Self::AfricaDakar),
            "Africa/Dar_es_Salaam" => Ok(Self::AfricaDarEsSalaam),
            "Africa/Djibouti" => Ok(Self::AfricaDjibouti),
            "Africa/Douala" => Ok(Self::AfricaDouala),
            "Africa/El_Aaiun" => Ok(Self::AfricaElAaiun),
            "Africa/Freetown" => Ok(Self::AfricaFreetown),
            "Africa/Gaborone" => Ok(Self::AfricaGaborone),
            "Africa/Harare" => Ok(Self::AfricaHarare),
            "Africa/Johannesburg" => Ok(Self::AfricaJohannesburg),
            "Africa/Juba" => Ok(Self::AfricaJuba),
            "Africa/Kampala" => Ok(Self::AfricaKampala),
            "Africa/Khartoum" => Ok(Self::AfricaKhartoum),
            "Africa/Kigali" => Ok(Self::AfricaKigali),
            "Africa/Kinshasa" => Ok(Self::AfricaKinshasa),
            "Africa/Lagos" => Ok(Self::AfricaLagos),
            "Africa/Libreville" => Ok(Self::AfricaLibreville),
            "Africa/Lome" => Ok(Self::AfricaLome),
            "Africa/Luanda" => Ok(Self::AfricaLuanda),
            "Africa/Lubumbashi" => Ok(Self::AfricaLubumbashi),
            "Africa/Lusaka" => Ok(Self::AfricaLusaka),
            "Africa/Malabo" => Ok(Self::AfricaMalabo),
            "Africa/Maputo" => Ok(Self::AfricaMaputo),
            "Africa/Maseru" => Ok(Self::AfricaMaseru),
            "Africa/Mbabane" => Ok(Self::AfricaMbabane),
            "Africa/Mogadishu" => Ok(Self::AfricaMogadishu),
            "Africa/Monrovia" => Ok(Self::AfricaMonrovia),
            "Africa/Nairobi" => Ok(Self::AfricaNairobi),
            "Africa/Ndjamena" => Ok(Self::AfricaNdjamena),
            "Africa/Niamey" => Ok(Self::AfricaNiamey),
            "Africa/Nouakchott" => Ok(Self::AfricaNouakchott),
            "Africa/Ouagadougou" => Ok(Self::AfricaOuagadougou),
            "Africa/Porto-Novo" => Ok(Self::AfricaPortoMinusNovo),
            "Africa/Sao_Tome" => Ok(Self::AfricaSaoTome),
            "Africa/Timbuktu" => Ok(Self::AfricaTimbuktu),
            "Africa/Tripoli" => Ok(Self::AfricaTripoli),
            "Africa/Tunis" => Ok(Self::AfricaTunis),
            "Africa/Windhoek" => Ok(Self::AfricaWindhoek),
            "America/Adak" => Ok(Self::AmericaAdak),
            "America/Anchorage" => Ok(Self::AmericaAnchorage),
            "America/Anguilla" => Ok(Self::AmericaAnguilla),
            "America/Antigua" => Ok(Self::AmericaAntigua),
            "America/Araguaina" => Ok(Self::AmericaAraguaina),
            "America/Argentina/Buenos_Aires" => Ok(Self::AmericaArgentinaBuenosAires),
            "America/Argentina/Catamarca" => Ok(Self::AmericaArgentinaCatamarca),
            "America/Argentina/ComodRivadavia" => Ok(Self::AmericaArgentinaComodRivadavia),
            "America/Argentina/Cordoba" => Ok(Self::AmericaArgentinaCordoba),
            "America/Argentina/Jujuy" => Ok(Self::AmericaArgentinaJujuy),
            "America/Argentina/La_Rioja" => Ok(Self::AmericaArgentinaLaRioja),
            "America/Argentina/Mendoza" => Ok(Self::AmericaArgentinaMendoza),
            "America/Argentina/Rio_Gallegos" => Ok(Self::AmericaArgentinaRioGallegos),
            "America/Argentina/Salta" => Ok(Self::AmericaArgentinaSalta),
            "America/Argentina/San_Juan" => Ok(Self::AmericaArgentinaSanJuan),
            "America/Argentina/San_Luis" => Ok(Self::AmericaArgentinaSanLuis),
            "America/Argentina/Tucuman" => Ok(Self::AmericaArgentinaTucuman),
            "America/Argentina/Ushuaia" => Ok(Self::AmericaArgentinaUshuaia),
            "America/Aruba" => Ok(Self::AmericaAruba),
            "America/Asuncion" => Ok(Self::AmericaAsuncion),
            "America/Atikokan" => Ok(Self::AmericaAtikokan),
            "America/Atka" => Ok(Self::AmericaAtka),
            "America/Bahia" => Ok(Self::AmericaBahia),
            "America/Bahia_Banderas" => Ok(Self::AmericaBahiaBanderas),
            "America/Barbados" => Ok(Self::AmericaBarbados),
            "America/Belem" => Ok(Self::AmericaBelem),
            "America/Belize" => Ok(Self::AmericaBelize),
            "America/Blanc-Sablon" => Ok(Self::AmericaBlancMinusSablon),
            "America/Boa_Vista" => Ok(Self::AmericaBoaVista),
            "America/Bogota" => Ok(Self::AmericaBogota),
            "America/Boise" => Ok(Self::AmericaBoise),
            "America/Buenos_Aires" => Ok(Self::AmericaBuenosAires),
            "America/Cambridge_Bay" => Ok(Self::AmericaCambridgeBay),
            "America/Campo_Grande" => Ok(Self::AmericaCampoGrande),
            "America/Cancun" => Ok(Self::AmericaCancun),
            "America/Caracas" => Ok(Self::AmericaCaracas),
            "America/Catamarca" => Ok(Self::AmericaCatamarca),
            "America/Cayenne" => Ok(Self::AmericaCayenne),
            "America/Cayman" => Ok(Self::AmericaCayman),
            "America/Chicago" => Ok(Self::AmericaChicago),
            "America/Chihuahua" => Ok(Self::AmericaChihuahua),
            "America/Coral_Harbour" => Ok(Self::AmericaCoralHarbour),
            "America/Cordoba" => Ok(Self::AmericaCordoba),
            "America/Costa_Rica" => Ok(Self::AmericaCostaRica),
            "America/Creston" => Ok(Self::AmericaCreston),
            "America/Cuiaba" => Ok(Self::AmericaCuiaba),
            "America/Curacao" => Ok(Self::AmericaCuracao),
            "America/Danmarkshavn" => Ok(Self::AmericaDanmarkshavn),
            "America/Dawson" => Ok(Self::AmericaDawson),
            "America/Dawson_Creek" => Ok(Self::AmericaDawsonCreek),
            "America/Denver" => Ok(Self::AmericaDenver),
            "America/Detroit" => Ok(Self::AmericaDetroit),
            "America/Dominica" => Ok(Self::AmericaDominica),
            "America/Edmonton" => Ok(Self::AmericaEdmonton),
            "America/Eirunepe" => Ok(Self::AmericaEirunepe),
            "America/El_Salvador" => Ok(Self::AmericaElSalvador),
            "America/Ensenada" => Ok(Self::AmericaEnsenada),
            "America/Fort_Nelson" => Ok(Self::AmericaFortNelson),
            "America/Fort_Wayne" => Ok(Self::AmericaFortWayne),
            "America/Fortaleza" => Ok(Self::AmericaFortaleza),
            "America/Glace_Bay" => Ok(Self::AmericaGlaceBay),
            "America/Godthab" => Ok(Self::AmericaGodthab),
            "America/Goose_Bay" => Ok(Self::AmericaGooseBay),
            "America/Grand_Turk" => Ok(Self::AmericaGrandTurk),
            "America/Grenada" => Ok(Self::AmericaGrenada),
            "America/Guadeloupe" => Ok(Self::AmericaGuadeloupe),
            "America/Guatemala" => Ok(Self::AmericaGuatemala),
            "America/Guayaquil" => Ok(Self::AmericaGuayaquil),
            "America/Guyana" => Ok(Self::AmericaGuyana),
            "America/Halifax" => Ok(Self::AmericaHalifax),
            "America/Havana" => Ok(Self::AmericaHavana),
            "America/Hermosillo" => Ok(Self::AmericaHermosillo),
            "America/Indiana/Indianapolis" => Ok(Self::AmericaIndianaIndianapolis),
            "America/Indiana/Knox" => Ok(Self::AmericaIndianaKnox),
            "America/Indiana/Marengo" => Ok(Self::AmericaIndianaMarengo),
            "America/Indiana/Petersburg" => Ok(Self::AmericaIndianaPetersburg),
            "America/Indiana/Tell_City" => Ok(Self::AmericaIndianaTellCity),
            "America/Indiana/Vevay" => Ok(Self::AmericaIndianaVevay),
            "America/Indiana/Vincennes" => Ok(Self::AmericaIndianaVincennes),
            "America/Indiana/Winamac" => Ok(Self::AmericaIndianaWinamac),
            "America/Indianapolis" => Ok(Self::AmericaIndianapolis),
            "America/Inuvik" => Ok(Self::AmericaInuvik),
            "America/Iqaluit" => Ok(Self::AmericaIqaluit),
            "America/Jamaica" => Ok(Self::AmericaJamaica),
            "America/Jujuy" => Ok(Self::AmericaJujuy),
            "America/Juneau" => Ok(Self::AmericaJuneau),
            "America/Kentucky/Louisville" => Ok(Self::AmericaKentuckyLouisville),
            "America/Kentucky/Monticello" => Ok(Self::AmericaKentuckyMonticello),
            "America/Knox_IN" => Ok(Self::AmericaKnoxIn),
            "America/Kralendijk" => Ok(Self::AmericaKralendijk),
            "America/La_Paz" => Ok(Self::AmericaLaPaz),
            "America/Lima" => Ok(Self::AmericaLima),
            "America/Los_Angeles" => Ok(Self::AmericaLosAngeles),
            "America/Louisville" => Ok(Self::AmericaLouisville),
            "America/Lower_Princes" => Ok(Self::AmericaLowerPrinces),
            "America/Maceio" => Ok(Self::AmericaMaceio),
            "America/Managua" => Ok(Self::AmericaManagua),
            "America/Manaus" => Ok(Self::AmericaManaus),
            "America/Marigot" => Ok(Self::AmericaMarigot),
            "America/Martinique" => Ok(Self::AmericaMartinique),
            "America/Matamoros" => Ok(Self::AmericaMatamoros),
            "America/Mazatlan" => Ok(Self::AmericaMazatlan),
            "America/Mendoza" => Ok(Self::AmericaMendoza),
            "America/Menominee" => Ok(Self::AmericaMenominee),
            "America/Merida" => Ok(Self::AmericaMerida),
            "America/Metlakatla" => Ok(Self::AmericaMetlakatla),
            "America/Mexico_City" => Ok(Self::AmericaMexicoCity),
            "America/Miquelon" => Ok(Self::AmericaMiquelon),
            "America/Moncton" => Ok(Self::AmericaMoncton),
            "America/Monterrey" => Ok(Self::AmericaMonterrey),
            "America/Montevideo" => Ok(Self::AmericaMontevideo),
            "America/Montreal" => Ok(Self::AmericaMontreal),
            "America/Montserrat" => Ok(Self::AmericaMontserrat),
            "America/Nassau" => Ok(Self::AmericaNassau),
            "America/New_York" => Ok(Self::AmericaNewYork),
            "America/Nipigon" => Ok(Self::AmericaNipigon),
            "America/Nome" => Ok(Self::AmericaNome),
            "America/Noronha" => Ok(Self::AmericaNoronha),
            "America/North_Dakota/Beulah" => Ok(Self::AmericaNorthDakotaBeulah),
            "America/North_Dakota/Center" => Ok(Self::AmericaNorthDakotaCenter),
            "America/North_Dakota/New_Salem" => Ok(Self::AmericaNorthDakotaNewSalem),
            "America/Nuuk" => Ok(Self::AmericaNuuk),
            "America/Ojinaga" => Ok(Self::AmericaOjinaga),
            "America/Panama" => Ok(Self::AmericaPanama),
            "America/Pangnirtung" => Ok(Self::AmericaPangnirtung),
            "America/Paramaribo" => Ok(Self::AmericaParamaribo),
            "America/Phoenix" => Ok(Self::AmericaPhoenix),
            "America/Port-au-Prince" => Ok(Self::AmericaPortMinusauMinusPrince),
            "America/Port_of_Spain" => Ok(Self::AmericaPortOfSpain),
            "America/Porto_Acre" => Ok(Self::AmericaPortoAcre),
            "America/Porto_Velho" => Ok(Self::AmericaPortoVelho),
            "America/Puerto_Rico" => Ok(Self::AmericaPuertoRico),
            "America/Punta_Arenas" => Ok(Self::AmericaPuntaArenas),
            "America/Rainy_River" => Ok(Self::AmericaRainyRiver),
            "America/Rankin_Inlet" => Ok(Self::AmericaRankinInlet),
            "America/Recife" => Ok(Self::AmericaRecife),
            "America/Regina" => Ok(Self::AmericaRegina),
            "America/Resolute" => Ok(Self::AmericaResolute),
            "America/Rio_Branco" => Ok(Self::AmericaRioBranco),
            "America/Rosario" => Ok(Self::AmericaRosario),
            "America/Santa_Isabel" => Ok(Self::AmericaSantaIsabel),
            "America/Santarem" => Ok(Self::AmericaSantarem),
            "America/Santiago" => Ok(Self::AmericaSantiago),
            "America/Santo_Domingo" => Ok(Self::AmericaSantoDomingo),
            "America/Sao_Paulo" => Ok(Self::AmericaSaoPaulo),
            "America/Scoresbysund" => Ok(Self::AmericaScoresbysund),
            "America/Shiprock" => Ok(Self::AmericaShiprock),
            "America/Sitka" => Ok(Self::AmericaSitka),
            "America/St_Barthelemy" => Ok(Self::AmericaStBarthelemy),
            "America/St_Johns" => Ok(Self::AmericaStJohns),
            "America/St_Kitts" => Ok(Self::AmericaStKitts),
            "America/St_Lucia" => Ok(Self::AmericaStLucia),
            "America/St_Thomas" => Ok(Self::AmericaStThomas),
            "America/St_Vincent" => Ok(Self::AmericaStVincent),
            "America/Swift_Current" => Ok(Self::AmericaSwiftCurrent),
            "America/Tegucigalpa" => Ok(Self::AmericaTegucigalpa),
            "America/Thule" => Ok(Self::AmericaThule),
            "America/Thunder_Bay" => Ok(Self::AmericaThunderBay),
            "America/Tijuana" => Ok(Self::AmericaTijuana),
            "America/Toronto" => Ok(Self::AmericaToronto),
            "America/Tortola" => Ok(Self::AmericaTortola),
            "America/Vancouver" => Ok(Self::AmericaVancouver),
            "America/Virgin" => Ok(Self::AmericaVirgin),
            "America/Whitehorse" => Ok(Self::AmericaWhitehorse),
            "America/Winnipeg" => Ok(Self::AmericaWinnipeg),
            "America/Yakutat" => Ok(Self::AmericaYakutat),
            "America/Yellowknife" => Ok(Self::AmericaYellowknife),
            "Antarctica/Casey" => Ok(Self::AntarcticaCasey),
            "Antarctica/Davis" => Ok(Self::AntarcticaDavis),
            "Antarctica/DumontDUrville" => Ok(Self::AntarcticaDumontDUrville),
            "Antarctica/Macquarie" => Ok(Self::AntarcticaMacquarie),
            "Antarctica/Mawson" => Ok(Self::AntarcticaMawson),
            "Antarctica/McMurdo" => Ok(Self::AntarcticaMcMurdo),
            "Antarctica/Palmer" => Ok(Self::AntarcticaPalmer),
            "Antarctica/Rothera" => Ok(Self::AntarcticaRothera),
            "Antarctica/South_Pole" => Ok(Self::AntarcticaSouthPole),
            "Antarctica/Syowa" => Ok(Self::AntarcticaSyowa),
            "Antarctica/Troll" => Ok(Self::AntarcticaTroll),
            "Antarctica/Vostok" => Ok(Self::AntarcticaVostok),
            "Arctic/Longyearbyen" => Ok(Self::ArcticLongyearbyen),
            "Asia/Aden" => Ok(Self::AsiaAden),
            "Asia/Almaty" => Ok(Self::AsiaAlmaty),
            "Asia/Amman" => Ok(Self::AsiaAmman),
            "Asia/Anadyr" => Ok(Self::AsiaAnadyr),
            "Asia/Aqtau" => Ok(Self::AsiaAqtau),
            "Asia/Aqtobe" => Ok(Self::AsiaAqtobe),
            "Asia/Ashgabat" => Ok(Self::AsiaAshgabat),
            "Asia/Ashkhabad" => Ok(Self::AsiaAshkhabad),
            "Asia/Atyrau" => Ok(Self::AsiaAtyrau),
            "Asia/Baghdad" => Ok(Self::AsiaBaghdad),
            "Asia/Bahrain" => Ok(Self::AsiaBahrain),
            "Asia/Baku" => Ok(Self::AsiaBaku),
            "Asia/Bangkok" => Ok(Self::AsiaBangkok),
            "Asia/Barnaul" => Ok(Self::AsiaBarnaul),
            "Asia/Beirut" => Ok(Self::AsiaBeirut),
            "Asia/Bishkek" => Ok(Self::AsiaBishkek),
            "Asia/Brunei" => Ok(Self::AsiaBrunei),
            "Asia/Calcutta" => Ok(Self::AsiaCalcutta),
            "Asia/Chita" => Ok(Self::AsiaChita),
            "Asia/Choibalsan" => Ok(Self::AsiaChoibalsan),
            "Asia/Chongqing" => Ok(Self::AsiaChongqing),
            "Asia/Chungking" => Ok(Self::AsiaChungking),
            "Asia/Colombo" => Ok(Self::AsiaColombo),
            "Asia/Dacca" => Ok(Self::AsiaDacca),
            "Asia/Damascus" => Ok(Self::AsiaDamascus),
            "Asia/Dhaka" => Ok(Self::AsiaDhaka),
            "Asia/Dili" => Ok(Self::AsiaDili),
            "Asia/Dubai" => Ok(Self::AsiaDubai),
            "Asia/Dushanbe" => Ok(Self::AsiaDushanbe),
            "Asia/Famagusta" => Ok(Self::AsiaFamagusta),
            "Asia/Gaza" => Ok(Self::AsiaGaza),
            "Asia/Harbin" => Ok(Self::AsiaHarbin),
            "Asia/Hebron" => Ok(Self::AsiaHebron),
            "Asia/Ho_Chi_Minh" => Ok(Self::AsiaHoChiMinh),
            "Asia/Hong_Kong" => Ok(Self::AsiaHongKong),
            "Asia/Hovd" => Ok(Self::AsiaHovd),
            "Asia/Irkutsk" => Ok(Self::AsiaIrkutsk),
            "Asia/Istanbul" => Ok(Self::AsiaIstanbul),
            "Asia/Jakarta" => Ok(Self::AsiaJakarta),
            "Asia/Jayapura" => Ok(Self::AsiaJayapura),
            "Asia/Jerusalem" => Ok(Self::AsiaJerusalem),
            "Asia/Kabul" => Ok(Self::AsiaKabul),
            "Asia/Kamchatka" => Ok(Self::AsiaKamchatka),
            "Asia/Karachi" => Ok(Self::AsiaKarachi),
            "Asia/Kashgar" => Ok(Self::AsiaKashgar),
            "Asia/Kathmandu" => Ok(Self::AsiaKathmandu),
            "Asia/Katmandu" => Ok(Self::AsiaKatmandu),
            "Asia/Khandyga" => Ok(Self::AsiaKhandyga),
            "Asia/Kolkata" => Ok(Self::AsiaKolkata),
            "Asia/Krasnoyarsk" => Ok(Self::AsiaKrasnoyarsk),
            "Asia/Kuala_Lumpur" => Ok(Self::AsiaKualaLumpur),
            "Asia/Kuching" => Ok(Self::AsiaKuching),
            "Asia/Kuwait" => Ok(Self::AsiaKuwait),
            "Asia/Macao" => Ok(Self::AsiaMacao),
            "Asia/Macau" => Ok(Self::AsiaMacau),
            "Asia/Magadan" => Ok(Self::AsiaMagadan),
            "Asia/Makassar" => Ok(Self::AsiaMakassar),
            "Asia/Manila" => Ok(Self::AsiaManila),
            "Asia/Muscat" => Ok(Self::AsiaMuscat),
            "Asia/Nicosia" => Ok(Self::AsiaNicosia),
            "Asia/Novokuznetsk" => Ok(Self::AsiaNovokuznetsk),
            "Asia/Novosibirsk" => Ok(Self::AsiaNovosibirsk),
            "Asia/Omsk" => Ok(Self::AsiaOmsk),
            "Asia/Oral" => Ok(Self::AsiaOral),
            "Asia/Phnom_Penh" => Ok(Self::AsiaPhnomPenh),
            "Asia/Pontianak" => Ok(Self::AsiaPontianak),
            "Asia/Pyongyang" => Ok(Self::AsiaPyongyang),
            "Asia/Qatar" => Ok(Self::AsiaQatar),
            "Asia/Qostanay" => Ok(Self::AsiaQostanay),
            "Asia/Qyzylorda" => Ok(Self::AsiaQyzylorda),
            "Asia/Rangoon" => Ok(Self::AsiaRangoon),
            "Asia/Riyadh" => Ok(Self::AsiaRiyadh),
            "Asia/Saigon" => Ok(Self::AsiaSaigon),
            "Asia/Sakhalin" => Ok(Self::AsiaSakhalin),
            "Asia/Samarkand" => Ok(Self::AsiaSamarkand),
            "Asia/Seoul" => Ok(Self::AsiaSeoul),
            "Asia/Shanghai" => Ok(Self::AsiaShanghai),
            "Asia/Singapore" => Ok(Self::AsiaSingapore),
            "Asia/Srednekolymsk" => Ok(Self::AsiaSrednekolymsk),
            "Asia/Taipei" => Ok(Self::AsiaTaipei),
            "Asia/Tashkent" => Ok(Self::AsiaTashkent),
            "Asia/Tbilisi" => Ok(Self::AsiaTbilisi),
            "Asia/Tehran" => Ok(Self::AsiaTehran),
            "Asia/Tel_Aviv" => Ok(Self::AsiaTelAviv),
            "Asia/Thimbu" => Ok(Self::AsiaThimbu),
            "Asia/Thimphu" => Ok(Self::AsiaThimphu),
            "Asia/Tokyo" => Ok(Self::AsiaTokyo),
            "Asia/Tomsk" => Ok(Self::AsiaTomsk),
            "Asia/Ujung_Pandang" => Ok(Self::AsiaUjungPandang),
            "Asia/Ulaanbaatar" => Ok(Self::AsiaUlaanbaatar),
            "Asia/Ulan_Bator" => Ok(Self::AsiaUlanBator),
            "Asia/Urumqi" => Ok(Self::AsiaUrumqi),
            "Asia/Ust-Nera" => Ok(Self::AsiaUstMinusNera),
            "Asia/Vientiane" => Ok(Self::AsiaVientiane),
            "Asia/Vladivostok" => Ok(Self::AsiaVladivostok),
            "Asia/Yakutsk" => Ok(Self::AsiaYakutsk),
            "Asia/Yangon" => Ok(Self::AsiaYangon),
            "Asia/Yekaterinburg" => Ok(Self::AsiaYekaterinburg),
            "Asia/Yerevan" => Ok(Self::AsiaYerevan),
            "Atlantic/Azores" => Ok(Self::AtlanticAzores),
            "Atlantic/Bermuda" => Ok(Self::AtlanticBermuda),
            "Atlantic/Canary" => Ok(Self::AtlanticCanary),
            "Atlantic/Cape_Verde" => Ok(Self::AtlanticCapeVerde),
            "Atlantic/Faeroe" => Ok(Self::AtlanticFaeroe),
            "Atlantic/Faroe" => Ok(Self::AtlanticFaroe),
            "Atlantic/Jan_Mayen" => Ok(Self::AtlanticJanMayen),
            "Atlantic/Madeira" => Ok(Self::AtlanticMadeira),
            "Atlantic/Reykjavik" => Ok(Self::AtlanticReykjavik),
            "Atlantic/South_Georgia" => Ok(Self::AtlanticSouthGeorgia),
            "Atlantic/St_Helena" => Ok(Self::AtlanticStHelena),
            "Atlantic/Stanley" => Ok(Self::AtlanticStanley),
            "Australia/ACT" => Ok(Self::AustraliaAct),
            "Australia/Adelaide" => Ok(Self::AustraliaAdelaide),
            "Australia/Brisbane" => Ok(Self::AustraliaBrisbane),
            "Australia/Broken_Hill" => Ok(Self::AustraliaBrokenHill),
            "Australia/Canberra" => Ok(Self::AustraliaCanberra),
            "Australia/Currie" => Ok(Self::AustraliaCurrie),
            "Australia/Darwin" => Ok(Self::AustraliaDarwin),
            "Australia/Eucla" => Ok(Self::AustraliaEucla),
            "Australia/Hobart" => Ok(Self::AustraliaHobart),
            "Australia/LHI" => Ok(Self::AustraliaLhi),
            "Australia/Lindeman" => Ok(Self::AustraliaLindeman),
            "Australia/Lord_Howe" => Ok(Self::AustraliaLordHowe),
            "Australia/Melbourne" => Ok(Self::AustraliaMelbourne),
            "Australia/NSW" => Ok(Self::AustraliaNsw),
            "Australia/North" => Ok(Self::AustraliaNorth),
            "Australia/Perth" => Ok(Self::AustraliaPerth),
            "Australia/Queensland" => Ok(Self::AustraliaQueensland),
            "Australia/South" => Ok(Self::AustraliaSouth),
            "Australia/Sydney" => Ok(Self::AustraliaSydney),
            "Australia/Tasmania" => Ok(Self::AustraliaTasmania),
            "Australia/Victoria" => Ok(Self::AustraliaVictoria),
            "Australia/West" => Ok(Self::AustraliaWest),
            "Australia/Yancowinna" => Ok(Self::AustraliaYancowinna),
            "Brazil/Acre" => Ok(Self::BrazilAcre),
            "Brazil/DeNoronha" => Ok(Self::BrazilDeNoronha),
            "Brazil/East" => Ok(Self::BrazilEast),
            "Brazil/West" => Ok(Self::BrazilWest),
            "CET" => Ok(Self::Cet),
            "CST6CDT" => Ok(Self::Cst6cdt),
            "Canada/Atlantic" => Ok(Self::CanadaAtlantic),
            "Canada/Central" => Ok(Self::CanadaCentral),
            "Canada/Eastern" => Ok(Self::CanadaEastern),
            "Canada/Mountain" => Ok(Self::CanadaMountain),
            "Canada/Newfoundland" => Ok(Self::CanadaNewfoundland),
            "Canada/Pacific" => Ok(Self::CanadaPacific),
            "Canada/Saskatchewan" => Ok(Self::CanadaSaskatchewan),
            "Canada/Yukon" => Ok(Self::CanadaYukon),
            "Chile/Continental" => Ok(Self::ChileContinental),
            "Chile/EasterIsland" => Ok(Self::ChileEasterIsland),
            "Cuba" => Ok(Self::Cuba),
            "EET" => Ok(Self::Eet),
            "EST" => Ok(Self::Est),
            "EST5EDT" => Ok(Self::Est5edt),
            "Egypt" => Ok(Self::Egypt),
            "Eire" => Ok(Self::Eire),
            "Etc/GMT" => Ok(Self::EtcGmt),
            "Etc/GMT+0" => Ok(Self::EtcGmtPlus0),
            "Etc/GMT+1" => Ok(Self::EtcGmtPlus1),
            "Etc/GMT+10" => Ok(Self::EtcGmtPlus10),
            "Etc/GMT+11" => Ok(Self::EtcGmtPlus11),
            "Etc/GMT+12" => Ok(Self::EtcGmtPlus12),
            "Etc/GMT+2" => Ok(Self::EtcGmtPlus2),
            "Etc/GMT+3" => Ok(Self::EtcGmtPlus3),
            "Etc/GMT+4" => Ok(Self::EtcGmtPlus4),
            "Etc/GMT+5" => Ok(Self::EtcGmtPlus5),
            "Etc/GMT+6" => Ok(Self::EtcGmtPlus6),
            "Etc/GMT+7" => Ok(Self::EtcGmtPlus7),
            "Etc/GMT+8" => Ok(Self::EtcGmtPlus8),
            "Etc/GMT+9" => Ok(Self::EtcGmtPlus9),
            "Etc/GMT-0" => Ok(Self::EtcGmtMinus0),
            "Etc/GMT-1" => Ok(Self::EtcGmtMinus1),
            "Etc/GMT-10" => Ok(Self::EtcGmtMinus10),
            "Etc/GMT-11" => Ok(Self::EtcGmtMinus11),
            "Etc/GMT-12" => Ok(Self::EtcGmtMinus12),
            "Etc/GMT-13" => Ok(Self::EtcGmtMinus13),
            "Etc/GMT-14" => Ok(Self::EtcGmtMinus14),
            "Etc/GMT-2" => Ok(Self::EtcGmtMinus2),
            "Etc/GMT-3" => Ok(Self::EtcGmtMinus3),
            "Etc/GMT-4" => Ok(Self::EtcGmtMinus4),
            "Etc/GMT-5" => Ok(Self::EtcGmtMinus5),
            "Etc/GMT-6" => Ok(Self::EtcGmtMinus6),
            "Etc/GMT-7" => Ok(Self::EtcGmtMinus7),
            "Etc/GMT-8" => Ok(Self::EtcGmtMinus8),
            "Etc/GMT-9" => Ok(Self::EtcGmtMinus9),
            "Etc/GMT0" => Ok(Self::EtcGmt0),
            "Etc/Greenwich" => Ok(Self::EtcGreenwich),
            "Etc/UCT" => Ok(Self::EtcUct),
            "Etc/UTC" => Ok(Self::EtcUtc),
            "Etc/Universal" => Ok(Self::EtcUniversal),
            "Etc/Zulu" => Ok(Self::EtcZulu),
            "Europe/Amsterdam" => Ok(Self::EuropeAmsterdam),
            "Europe/Andorra" => Ok(Self::EuropeAndorra),
            "Europe/Astrakhan" => Ok(Self::EuropeAstrakhan),
            "Europe/Athens" => Ok(Self::EuropeAthens),
            "Europe/Belfast" => Ok(Self::EuropeBelfast),
            "Europe/Belgrade" => Ok(Self::EuropeBelgrade),
            "Europe/Berlin" => Ok(Self::EuropeBerlin),
            "Europe/Bratislava" => Ok(Self::EuropeBratislava),
            "Europe/Brussels" => Ok(Self::EuropeBrussels),
            "Europe/Bucharest" => Ok(Self::EuropeBucharest),
            "Europe/Budapest" => Ok(Self::EuropeBudapest),
            "Europe/Busingen" => Ok(Self::EuropeBusingen),
            "Europe/Chisinau" => Ok(Self::EuropeChisinau),
            "Europe/Copenhagen" => Ok(Self::EuropeCopenhagen),
            "Europe/Dublin" => Ok(Self::EuropeDublin),
            "Europe/Gibraltar" => Ok(Self::EuropeGibraltar),
            "Europe/Guernsey" => Ok(Self::EuropeGuernsey),
            "Europe/Helsinki" => Ok(Self::EuropeHelsinki),
            "Europe/Isle_of_Man" => Ok(Self::EuropeIsleOfMan),
            "Europe/Istanbul" => Ok(Self::EuropeIstanbul),
            "Europe/Jersey" => Ok(Self::EuropeJersey),
            "Europe/Kaliningrad" => Ok(Self::EuropeKaliningrad),
            "Europe/Kiev" => Ok(Self::EuropeKiev),
            "Europe/Kirov" => Ok(Self::EuropeKirov),
            "Europe/Kyiv" => Ok(Self::EuropeKyiv),
            "Europe/Lisbon" => Ok(Self::EuropeLisbon),
            "Europe/Ljubljana" => Ok(Self::EuropeLjubljana),
            "Europe/London" => Ok(Self::EuropeLondon),
            "Europe/Luxembourg" => Ok(Self::EuropeLuxembourg),
            "Europe/Madrid" => Ok(Self::EuropeMadrid),
            "Europe/Malta" => Ok(Self::EuropeMalta),
            "Europe/Mariehamn" => Ok(Self::EuropeMariehamn),
            "Europe/Minsk" => Ok(Self::EuropeMinsk),
            "Europe/Monaco" => Ok(Self::EuropeMonaco),
            "Europe/Moscow" => Ok(Self::EuropeMoscow),
            "Europe/Nicosia" => Ok(Self::EuropeNicosia),
            "Europe/Oslo" => Ok(Self::EuropeOslo),
            "Europe/Paris" => Ok(Self::EuropeParis),
            "Europe/Podgorica" => Ok(Self::EuropePodgorica),
            "Europe/Prague" => Ok(Self::EuropePrague),
            "Europe/Riga" => Ok(Self::EuropeRiga),
            "Europe/Rome" => Ok(Self::EuropeRome),
            "Europe/Samara" => Ok(Self::EuropeSamara),
            "Europe/San_Marino" => Ok(Self::EuropeSanMarino),
            "Europe/Sarajevo" => Ok(Self::EuropeSarajevo),
            "Europe/Saratov" => Ok(Self::EuropeSaratov),
            "Europe/Simferopol" => Ok(Self::EuropeSimferopol),
            "Europe/Skopje" => Ok(Self::EuropeSkopje),
            "Europe/Sofia" => Ok(Self::EuropeSofia),
            "Europe/Stockholm" => Ok(Self::EuropeStockholm),
            "Europe/Tallinn" => Ok(Self::EuropeTallinn),
            "Europe/Tirane" => Ok(Self::EuropeTirane),
            "Europe/Tiraspol" => Ok(Self::EuropeTiraspol),
            "Europe/Ulyanovsk" => Ok(Self::EuropeUlyanovsk),
            "Europe/Uzhgorod" => Ok(Self::EuropeUzhgorod),
            "Europe/Vaduz" => Ok(Self::EuropeVaduz),
            "Europe/Vatican" => Ok(Self::EuropeVatican),
            "Europe/Vienna" => Ok(Self::EuropeVienna),
            "Europe/Vilnius" => Ok(Self::EuropeVilnius),
            "Europe/Volgograd" => Ok(Self::EuropeVolgograd),
            "Europe/Warsaw" => Ok(Self::EuropeWarsaw),
            "Europe/Zagreb" => Ok(Self::EuropeZagreb),
            "Europe/Zaporozhye" => Ok(Self::EuropeZaporozhye),
            "Europe/Zurich" => Ok(Self::EuropeZurich),
            "Factory" => Ok(Self::Factory),
            "GB" => Ok(Self::Gb),
            "GB-Eire" => Ok(Self::GbMinusEire),
            "GMT" => Ok(Self::Gmt),
            "GMT+0" => Ok(Self::GmtPlus0),
            "GMT-0" => Ok(Self::GmtMinus0),
            "GMT0" => Ok(Self::Gmt0),
            "Greenwich" => Ok(Self::Greenwich),
            "HST" => Ok(Self::Hst),
            "Hongkong" => Ok(Self::Hongkong),
            "Iceland" => Ok(Self::Iceland),
            "Indian/Antananarivo" => Ok(Self::IndianAntananarivo),
            "Indian/Chagos" => Ok(Self::IndianChagos),
            "Indian/Christmas" => Ok(Self::IndianChristmas),
            "Indian/Cocos" => Ok(Self::IndianCocos),
            "Indian/Comoro" => Ok(Self::IndianComoro),
            "Indian/Kerguelen" => Ok(Self::IndianKerguelen),
            "Indian/Mahe" => Ok(Self::IndianMahe),
            "Indian/Maldives" => Ok(Self::IndianMaldives),
            "Indian/Mauritius" => Ok(Self::IndianMauritius),
            "Indian/Mayotte" => Ok(Self::IndianMayotte),
            "Indian/Reunion" => Ok(Self::IndianReunion),
            "Iran" => Ok(Self::Iran),
            "Israel" => Ok(Self::Israel),
            "Jamaica" => Ok(Self::Jamaica),
            "Japan" => Ok(Self::Japan),
            "Kwajalein" => Ok(Self::Kwajalein),
            "Libya" => Ok(Self::Libya),
            "MET" => Ok(Self::Met),
            "MST" => Ok(Self::Mst),
            "MST7MDT" => Ok(Self::Mst7mdt),
            "Mexico/BajaNorte" => Ok(Self::MexicoBajaNorte),
            "Mexico/BajaSur" => Ok(Self::MexicoBajaSur),
            "Mexico/General" => Ok(Self::MexicoGeneral),
            "NZ" => Ok(Self::Nz),
            "NZ-CHAT" => Ok(Self::NzMinusChat),
            "Navajo" => Ok(Self::Navajo),
            "PRC" => Ok(Self::Prc),
            "PST8PDT" => Ok(Self::Pst8pdt),
            "Pacific/Apia" => Ok(Self::PacificApia),
            "Pacific/Auckland" => Ok(Self::PacificAuckland),
            "Pacific/Bougainville" => Ok(Self::PacificBougainville),
            "Pacific/Chatham" => Ok(Self::PacificChatham),
            "Pacific/Chuuk" => Ok(Self::PacificChuuk),
            "Pacific/Easter" => Ok(Self::PacificEaster),
            "Pacific/Efate" => Ok(Self::PacificEfate),
            "Pacific/Enderbury" => Ok(Self::PacificEnderbury),
            "Pacific/Fakaofo" => Ok(Self::PacificFakaofo),
            "Pacific/Fiji" => Ok(Self::PacificFiji),
            "Pacific/Funafuti" => Ok(Self::PacificFunafuti),
            "Pacific/Galapagos" => Ok(Self::PacificGalapagos),
            "Pacific/Gambier" => Ok(Self::PacificGambier),
            "Pacific/Guadalcanal" => Ok(Self::PacificGuadalcanal),
            "Pacific/Guam" => Ok(Self::PacificGuam),
            "Pacific/Honolulu" => Ok(Self::PacificHonolulu),
            "Pacific/Johnston" => Ok(Self::PacificJohnston),
            "Pacific/Kanton" => Ok(Self::PacificKanton),
            "Pacific/Kiritimati" => Ok(Self::PacificKiritimati),
            "Pacific/Kosrae" => Ok(Self::PacificKosrae),
            "Pacific/Kwajalein" => Ok(Self::PacificKwajalein),
            "Pacific/Majuro" => Ok(Self::PacificMajuro),
            "Pacific/Marquesas" => Ok(Self::PacificMarquesas),
            "Pacific/Midway" => Ok(Self::PacificMidway),
            "Pacific/Nauru" => Ok(Self::PacificNauru),
            "Pacific/Niue" => Ok(Self::PacificNiue),
            "Pacific/Norfolk" => Ok(Self::PacificNorfolk),
            "Pacific/Noumea" => Ok(Self::PacificNoumea),
            "Pacific/Pago_Pago" => Ok(Self::PacificPagoPago),
            "Pacific/Palau" => Ok(Self::PacificPalau),
            "Pacific/Pitcairn" => Ok(Self::PacificPitcairn),
            "Pacific/Pohnpei" => Ok(Self::PacificPohnpei),
            "Pacific/Ponape" => Ok(Self::PacificPonape),
            "Pacific/Port_Moresby" => Ok(Self::PacificPortMoresby),
            "Pacific/Rarotonga" => Ok(Self::PacificRarotonga),
            "Pacific/Saipan" => Ok(Self::PacificSaipan),
            "Pacific/Samoa" => Ok(Self::PacificSamoa),
            "Pacific/Tahiti" => Ok(Self::PacificTahiti),
            "Pacific/Tarawa" => Ok(Self::PacificTarawa),
            "Pacific/Tongatapu" => Ok(Self::PacificTongatapu),
            "Pacific/Truk" => Ok(Self::PacificTruk),
            "Pacific/Wake" => Ok(Self::PacificWake),
            "Pacific/Wallis" => Ok(Self::PacificWallis),
            "Pacific/Yap" => Ok(Self::PacificYap),
            "Poland" => Ok(Self::Poland),
            "Portugal" => Ok(Self::Portugal),
            "ROC" => Ok(Self::Roc),
            "ROK" => Ok(Self::Rok),
            "Singapore" => Ok(Self::Singapore),
            "Turkey" => Ok(Self::Turkey),
            "UCT" => Ok(Self::Uct),
            "US/Alaska" => Ok(Self::UsAlaska),
            "US/Aleutian" => Ok(Self::UsAleutian),
            "US/Arizona" => Ok(Self::UsArizona),
            "US/Central" => Ok(Self::UsCentral),
            "US/East-Indiana" => Ok(Self::UsEastMinusIndiana),
            "US/Eastern" => Ok(Self::UsEastern),
            "US/Hawaii" => Ok(Self::UsHawaii),
            "US/Indiana-Starke" => Ok(Self::UsIndianaMinusStarke),
            "US/Michigan" => Ok(Self::UsMichigan),
            "US/Mountain" => Ok(Self::UsMountain),
            "US/Pacific" => Ok(Self::UsPacific),
            "US/Pacific-New" => Ok(Self::UsPacificMinusNew),
            "US/Samoa" => Ok(Self::UsSamoa),
            "UTC" => Ok(Self::Utc),
            "Universal" => Ok(Self::Universal),
            "W-SU" => Ok(Self::WMinusSu),
            "WET" => Ok(Self::Wet),
            "Zulu" => Ok(Self::Zulu),

            _ => Err(()),
        }
    }
}

impl AsRef<str> for CreateReportRunParametersTimezone {
    fn as_ref(&self) -> &str {
        self.as_str()
    }
}

impl std::fmt::Display for CreateReportRunParametersTimezone {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        self.as_str().fmt(f)
    }
}
impl serde::Serialize for CreateReportRunParametersTimezone {
    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
    where
        S: serde::Serializer,
    {
        serializer.serialize_str(self.as_str())
    }
}
#[derive(Clone, Debug, Default, serde::Serialize)]
pub struct ListReportRun<'a> {
    #[serde(skip_serializing_if = "Option::is_none")]
    pub created: Option<stripe_types::RangeQueryTs>,
    /// A cursor for use in pagination.
    ///
    /// `ending_before` is an object ID that defines your place in the list.
    /// For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub ending_before: Option<String>,
    /// Specifies which fields in the response should be expanded.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub expand: Option<&'a [&'a str]>,
    /// A limit on the number of objects to be returned.
    ///
    /// Limit can range between 1 and 100, and the default is 10.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub limit: Option<i64>,
    /// A cursor for use in pagination.
    ///
    /// `starting_after` is an object ID that defines your place in the list.
    /// For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    #[serde(skip_serializing_if = "Option::is_none")]
    pub starting_after: Option<String>,
}
impl<'a> ListReportRun<'a> {
    pub fn new() -> Self {
        Self::default()
    }
}
