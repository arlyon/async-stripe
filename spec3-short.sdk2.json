{
  "components": {
    "schemas": {
      "account": {
        "description": "This is an object representing a Stripe account. You can retrieve it to see\nproperties on the account like its current e-mail address or if the account is\nenabled yet to make live charges.\n\nSome properties, marked below, are available only to platforms that want to\n[create and manage Express or Custom accounts](https://stripe.com/docs/connect/accounts).",
        "properties": {
          "business_profile": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/account_business_profile"
              }
            ],
            "description": "Business information about the account.",
            "nullable": true
          },
          "business_type": {
            "description": "The business type.",
            "enum": [
              "company",
              "government_entity",
              "individual",
              "non_profit"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "capabilities": {
            "$ref": "#/components/schemas/account_capabilities"
          },
          "charges_enabled": {
            "description": "Whether the account can create live charges.",
            "type": "boolean"
          },
          "company": {
            "$ref": "#/components/schemas/legal_entity_company"
          },
          "controller": {
            "$ref": "#/components/schemas/account_unification_account_controller"
          },
          "country": {
            "description": "The account's country.",
            "maxLength": 5000,
            "type": "string"
          },
          "created": {
            "description": "Time at which the account was connected. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "default_currency": {
            "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
            "maxLength": 5000,
            "type": "string"
          },
          "details_submitted": {
            "description": "Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.",
            "type": "boolean"
          },
          "email": {
            "description": "An email address associated with the account. You can treat this as metadata: it is not used for authentication or messaging account holders.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "external_accounts": {
            "description": "External accounts (bank accounts and debit cards) currently attached to this account",
            "properties": {
              "data": {
                "description": "The list contains all external accounts that have been attached to the Stripe account. These may be bank accounts or cards.",
                "items": {
                  "$ref": "#/components/schemas/external_account"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "ExternalAccountList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "future_requirements": {
            "$ref": "#/components/schemas/account_future_requirements"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "individual": {
            "$ref": "#/components/schemas/person"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "account"
            ],
            "type": "string"
          },
          "payouts_enabled": {
            "description": "Whether Stripe can send payouts to this account.",
            "type": "boolean"
          },
          "requirements": {
            "$ref": "#/components/schemas/account_requirements"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/account_settings"
              }
            ],
            "description": "Options for customizing how the account functions within Stripe.",
            "nullable": true
          },
          "tos_acceptance": {
            "$ref": "#/components/schemas/account_tos_acceptance"
          },
          "type": {
            "description": "The Stripe account type. Can be `standard`, `express`, or `custom`.",
            "enum": [
              "custom",
              "express",
              "standard"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "object"
        ],
        "title": "Account",
        "type": "object",
        "x-expandableFields": [
          "business_profile",
          "capabilities",
          "company",
          "controller",
          "external_accounts",
          "future_requirements",
          "individual",
          "requirements",
          "settings",
          "tos_acceptance"
        ],
        "x-resourceId": "account",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/account"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/accounts/{account}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/accounts/{account}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/accounts"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/accounts"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/accounts/{account}"
          },
          {
            "method_name": "reject",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/accounts/{account}/reject"
          },
          {
            "method_name": "persons",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/accounts/{account}/persons"
          },
          {
            "method_name": "capabilities",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/accounts/{account}/capabilities"
          }
        ],
        "x-stripeResource": {
          "class_name": "Account",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "account_branding_settings",
            "account_business_profile",
            "account_capabilities",
            "account_card_payments_settings",
            "account_dashboard_settings",
            "account_decline_charge_on",
            "account_future_requirements",
            "account_payments_settings",
            "account_payout_settings",
            "account_requirements",
            "account_settings",
            "account_tos_acceptance",
            "account_unification_account_controller",
            "legal_entity_company",
            "transfer_schedule"
          ],
          "polymorphic_groups": [
            "deleted_payment_source",
            "payment_source"
          ]
        }
      },
      "account_bacs_debit_payments_settings": {
        "description": "",
        "properties": {
          "display_name": {
            "description": "The Bacs Direct Debit Display Name for this account. For payments made with Bacs Direct Debit, this will appear on the mandate, and as the statement descriptor.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "AccountBacsDebitPaymentsSettings",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BacsDebitPayments",
          "in_class": "account_settings"
        }
      },
      "account_branding_settings": {
        "description": "",
        "properties": {
          "icon": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An icon for the account. Must be square and at least 128px x 128px.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "logo": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for the account that will be used in Checkout instead of the icon and without the account's name next to it if provided. Must be at least 128px x 128px.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "primary_color": {
            "description": "A CSS hex color value representing the primary branding color for this account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "secondary_color": {
            "description": "A CSS hex color value representing the secondary branding color for this account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "icon",
          "logo",
          "primary_color",
          "secondary_color"
        ],
        "title": "AccountBrandingSettings",
        "type": "object",
        "x-expandableFields": [
          "icon",
          "logo"
        ],
        "x-stripeResource": {
          "class_name": "SettingsBranding",
          "in_class": "account"
        }
      },
      "account_business_profile": {
        "description": "",
        "properties": {
          "mcc": {
            "description": "[The merchant category code for the account](https://stripe.com/docs/connect/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The customer-facing business name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "product_description": {
            "description": "Internal-only description of the product sold or service provided by the business. It's used by Stripe for risk and underwriting purposes.",
            "maxLength": 40000,
            "nullable": true,
            "type": "string"
          },
          "support_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "A publicly available mailing address for sending support issues to.",
            "nullable": true
          },
          "support_email": {
            "description": "A publicly available email address for sending support issues to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "support_phone": {
            "description": "A publicly available phone number to call with support issues.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "support_url": {
            "description": "A publicly available website for handling support issues.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The business's publicly available website.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "mcc",
          "name",
          "support_address",
          "support_email",
          "support_phone",
          "support_url",
          "url"
        ],
        "title": "AccountBusinessProfile",
        "type": "object",
        "x-expandableFields": [
          "support_address"
        ],
        "x-stripeResource": {
          "class_name": "BusinessProfile",
          "in_class": "account"
        }
      },
      "account_capabilities": {
        "description": "",
        "properties": {
          "acss_debit_payments": {
            "description": "The status of the Canadian pre-authorized debits payments capability of the account, or whether the account can directly process Canadian pre-authorized debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "affirm_payments": {
            "description": "The status of the Affirm capability of the account, or whether the account can directly process Affirm charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "afterpay_clearpay_payments": {
            "description": "The status of the Afterpay Clearpay capability of the account, or whether the account can directly process Afterpay Clearpay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "au_becs_debit_payments": {
            "description": "The status of the BECS Direct Debit (AU) payments capability of the account, or whether the account can directly process BECS Direct Debit (AU) charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bacs_debit_payments": {
            "description": "The status of the Bacs Direct Debits payments capability of the account, or whether the account can directly process Bacs Direct Debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bancontact_payments": {
            "description": "The status of the Bancontact payments capability of the account, or whether the account can directly process Bancontact charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "bank_transfer_payments": {
            "description": "The status of the customer_balance payments capability of the account, or whether the account can directly process customer_balance charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "blik_payments": {
            "description": "The status of the blik payments capability of the account, or whether the account can directly process blik charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "boleto_payments": {
            "description": "The status of the boleto payments capability of the account, or whether the account can directly process boleto charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "card_issuing": {
            "description": "The status of the card issuing capability of the account, or whether you can use Issuing to distribute funds on cards",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "card_payments": {
            "description": "The status of the card payments capability of the account, or whether the account can directly process credit and debit card charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "cartes_bancaires_payments": {
            "description": "The status of the Cartes Bancaires payments capability of the account, or whether the account can directly process Cartes Bancaires card charges in EUR currency.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "eps_payments": {
            "description": "The status of the EPS payments capability of the account, or whether the account can directly process EPS charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "fpx_payments": {
            "description": "The status of the FPX payments capability of the account, or whether the account can directly process FPX charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "giropay_payments": {
            "description": "The status of the giropay payments capability of the account, or whether the account can directly process giropay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "grabpay_payments": {
            "description": "The status of the GrabPay payments capability of the account, or whether the account can directly process GrabPay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "ideal_payments": {
            "description": "The status of the iDEAL payments capability of the account, or whether the account can directly process iDEAL charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "jcb_payments": {
            "description": "The status of the JCB payments capability of the account, or whether the account (Japan only) can directly process JCB credit card charges in JPY currency.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "klarna_payments": {
            "description": "The status of the Klarna payments capability of the account, or whether the account can directly process Klarna charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "konbini_payments": {
            "description": "The status of the konbini payments capability of the account, or whether the account can directly process konbini charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "legacy_payments": {
            "description": "The status of the legacy payments capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "link_payments": {
            "description": "The status of the link_payments capability of the account, or whether the account can directly process Link charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "oxxo_payments": {
            "description": "The status of the OXXO payments capability of the account, or whether the account can directly process OXXO charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "p24_payments": {
            "description": "The status of the P24 payments capability of the account, or whether the account can directly process P24 charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "paynow_payments": {
            "description": "The status of the paynow payments capability of the account, or whether the account can directly process paynow charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "promptpay_payments": {
            "description": "The status of the promptpay payments capability of the account, or whether the account can directly process promptpay charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "sepa_debit_payments": {
            "description": "The status of the SEPA Direct Debits payments capability of the account, or whether the account can directly process SEPA Direct Debits charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "sofort_payments": {
            "description": "The status of the Sofort payments capability of the account, or whether the account can directly process Sofort charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "tax_reporting_us_1099_k": {
            "description": "The status of the tax reporting 1099-K (US) capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "tax_reporting_us_1099_misc": {
            "description": "The status of the tax reporting 1099-MISC (US) capability of the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "transfers": {
            "description": "The status of the transfers capability of the account, or whether your platform can transfer funds to the account.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "treasury": {
            "description": "The status of the banking capability, or whether the account can have bank accounts.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "us_bank_account_ach_payments": {
            "description": "The status of the US bank account ACH payments capability of the account, or whether the account can directly process US bank account charges.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          }
        },
        "title": "AccountCapabilities",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Capabilities",
          "in_class": "account"
        }
      },
      "account_capability_future_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on the capability's enablement state prior to transitioning.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the capability enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "disabled_reason": {
            "description": "This is typed as a string for consistency with `requirements.disabled_reason`, but it safe to assume `future_requirements.disabled_reason` is empty because fields in `future_requirements` will never disable the account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "alternatives",
          "current_deadline",
          "currently_due",
          "disabled_reason",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "AccountCapabilityFutureRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ],
        "x-stripeResource": {
          "class_name": "FutureRequirements",
          "in_class": "capability"
        }
      },
      "account_capability_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date by which the fields in `currently_due` must be collected to keep the capability enabled for the account. These fields may disable the capability sooner if the next threshold is reached before they are collected.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the capability enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the capability is disabled.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "disabled_reason": {
            "description": "If the capability is disabled, this string describes why. Can be `requirements.past_due`, `requirements.pending_verification`, `listed`, `platform_paused`, `rejected.fraud`, `rejected.listed`, `rejected.terms_of_service`, `rejected.other`, `under_review`, or `other`.\n\n`rejected.unsupported_business` means that the account's business is not supported by the capability. For example, payment methods may restrict the businesses they support in their terms of service:\n\n- [Afterpay Clearpay's terms of service](/afterpay-clearpay/legal#restricted-businesses)\n\nIf you believe that the rejection is in error, please contact support at https://support.stripe.com/contact/ for assistance.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the capability on the account.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "alternatives",
          "current_deadline",
          "currently_due",
          "disabled_reason",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "AccountCapabilityRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ],
        "x-stripeResource": {
          "class_name": "Requirements",
          "in_class": "capability"
        }
      },
      "account_card_issuing_settings": {
        "description": "",
        "properties": {
          "tos_acceptance": {
            "$ref": "#/components/schemas/card_issuing_account_terms_of_service"
          }
        },
        "title": "AccountCardIssuingSettings",
        "type": "object",
        "x-expandableFields": [
          "tos_acceptance"
        ],
        "x-stripeResource": {
          "class_name": "SettingsCardIssuing",
          "in_class": "account_settings",
          "inner_classes": [
            "card_issuing_account_terms_of_service"
          ]
        }
      },
      "account_card_payments_settings": {
        "description": "",
        "properties": {
          "decline_on": {
            "$ref": "#/components/schemas/account_decline_charge_on"
          },
          "statement_descriptor_prefix": {
            "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. `statement_descriptor_prefix` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kana": {
            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kanji": {
            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "statement_descriptor_prefix",
          "statement_descriptor_prefix_kana",
          "statement_descriptor_prefix_kanji"
        ],
        "title": "AccountCardPaymentsSettings",
        "type": "object",
        "x-expandableFields": [
          "decline_on"
        ],
        "x-stripeResource": {
          "class_name": "SettingsCardPayments",
          "in_class": "account"
        }
      },
      "account_dashboard_settings": {
        "description": "",
        "properties": {
          "display_name": {
            "description": "The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "timezone": {
            "description": "The timezone used in the Stripe Dashboard for this account. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "display_name",
          "timezone"
        ],
        "title": "AccountDashboardSettings",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SettingsDashboard",
          "in_class": "account"
        }
      },
      "account_decline_charge_on": {
        "description": "",
        "properties": {
          "avs_failure": {
            "description": "Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.",
            "type": "boolean"
          },
          "cvc_failure": {
            "description": "Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.",
            "type": "boolean"
          }
        },
        "required": [
          "avs_failure",
          "cvc_failure"
        ],
        "title": "AccountDeclineChargeOn",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DeclineChargeOn",
          "in_class": "account"
        }
      },
      "account_future_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date on which `future_requirements` merges with the main `requirements` hash and `future_requirements` becomes empty. After the transition, `currently_due` requirements may immediately become `past_due`, but the account may also be given a grace period depending on its enablement state prior to transitioning.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the account enabled. If not collected by `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "disabled_reason": {
            "description": "This is typed as a string for consistency with `requirements.disabled_reason`, but it safe to assume `future_requirements.disabled_reason` is empty because fields in `future_requirements` will never disable the account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "nullable": true,
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `requirements.current_deadline`. These fields need to be collected to enable the capability on the account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "alternatives",
          "current_deadline",
          "currently_due",
          "disabled_reason",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "AccountFutureRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ],
        "x-stripeResource": {
          "class_name": "FutureRequirements",
          "in_class": "account"
        }
      },
      "account_link": {
        "description": "Account Links are the means by which a Connect platform grants a connected account permission to access\nStripe-hosted applications, such as Connect Onboarding.\n\nRelated guide: [Connect Onboarding](https://stripe.com/docs/connect/connect-onboarding).",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "expires_at": {
            "description": "The timestamp at which this account link will expire.",
            "format": "unix-time",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "account_link"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL for the account link.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "created",
          "expires_at",
          "object",
          "url"
        ],
        "title": "AccountLink",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "account_link",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/account_links"
          }
        ],
        "x-stripeResource": {
          "class_name": "AccountLink",
          "in_package": ""
        }
      },
      "account_payments_settings": {
        "description": "",
        "properties": {
          "statement_descriptor": {
            "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_kana": {
            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_kanji": {
            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kana": {
            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_prefix_kanji": {
            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "statement_descriptor",
          "statement_descriptor_kana",
          "statement_descriptor_kanji",
          "statement_descriptor_prefix_kana",
          "statement_descriptor_prefix_kanji"
        ],
        "title": "AccountPaymentsSettings",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SettingsPayments",
          "in_class": "account"
        }
      },
      "account_payout_settings": {
        "description": "",
        "properties": {
          "debit_negative_balances": {
            "description": "A Boolean indicating if Stripe should try to reclaim negative balances from an attached bank account. See our [Understanding Connect Account Balances](https://stripe.com/docs/connect/account-balances) documentation for details. Default value is `false` for Custom accounts, otherwise `true`.",
            "type": "boolean"
          },
          "schedule": {
            "$ref": "#/components/schemas/transfer_schedule"
          },
          "statement_descriptor": {
            "description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "debit_negative_balances",
          "schedule",
          "statement_descriptor"
        ],
        "title": "AccountPayoutSettings",
        "type": "object",
        "x-expandableFields": [
          "schedule"
        ],
        "x-stripeResource": {
          "class_name": "SettingsPayouts",
          "in_class": "account"
        }
      },
      "account_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "current_deadline": {
            "description": "Date by which the fields in `currently_due` must be collected to keep the account enabled. These fields may disable the account sooner if the next threshold is reached before they are collected.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the account enabled. If not collected by `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "disabled_reason": {
            "description": "If the account is disabled, this string describes why. Can be `requirements.past_due`, `requirements.pending_verification`, `listed`, `platform_paused`, `rejected.fraud`, `rejected.listed`, `rejected.terms_of_service`, `rejected.other`, `under_review`, or `other`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "nullable": true,
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and `current_deadline` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by `current_deadline`. These fields need to be collected to enable the account.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "alternatives",
          "current_deadline",
          "currently_due",
          "disabled_reason",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "AccountRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ],
        "x-stripeResource": {
          "class_name": "Requirements",
          "in_class": "account",
          "inner_classes": [
            "account_requirements_alternative",
            "account_requirements_error"
          ]
        }
      },
      "account_requirements_alternative": {
        "description": "",
        "properties": {
          "alternative_fields_due": {
            "description": "Fields that can be provided to satisfy all fields in `original_fields_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "original_fields_due": {
            "description": "Fields that are due and can be satisfied by providing all fields in `alternative_fields_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "alternative_fields_due",
          "original_fields_due"
        ],
        "title": "AccountRequirementsAlternative",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Alternative",
          "in_class": "account_requirements"
        }
      },
      "account_requirements_error": {
        "description": "",
        "properties": {
          "code": {
            "description": "The code for the type of error.",
            "enum": [
              "invalid_address_city_state_postal_code",
              "invalid_dob_age_under_18",
              "invalid_representative_country",
              "invalid_street_address",
              "invalid_tos_acceptance",
              "invalid_value_other",
              "verification_document_address_mismatch",
              "verification_document_address_missing",
              "verification_document_corrupt",
              "verification_document_country_not_supported",
              "verification_document_dob_mismatch",
              "verification_document_duplicate_type",
              "verification_document_expired",
              "verification_document_failed_copy",
              "verification_document_failed_greyscale",
              "verification_document_failed_other",
              "verification_document_failed_test_mode",
              "verification_document_fraudulent",
              "verification_document_id_number_mismatch",
              "verification_document_id_number_missing",
              "verification_document_incomplete",
              "verification_document_invalid",
              "verification_document_issue_or_expiry_date_missing",
              "verification_document_manipulated",
              "verification_document_missing_back",
              "verification_document_missing_front",
              "verification_document_name_mismatch",
              "verification_document_name_missing",
              "verification_document_nationality_mismatch",
              "verification_document_not_readable",
              "verification_document_not_signed",
              "verification_document_not_uploaded",
              "verification_document_photo_mismatch",
              "verification_document_too_large",
              "verification_document_type_not_supported",
              "verification_failed_address_match",
              "verification_failed_business_iec_number",
              "verification_failed_document_match",
              "verification_failed_id_number_match",
              "verification_failed_keyed_identity",
              "verification_failed_keyed_match",
              "verification_failed_name_match",
              "verification_failed_other",
              "verification_failed_residential_address",
              "verification_failed_tax_id_match",
              "verification_failed_tax_id_not_issued",
              "verification_missing_executives",
              "verification_missing_owners",
              "verification_requires_additional_memorandum_of_associations"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "reason": {
            "description": "An informative message that indicates the error type and provides additional details about the error.",
            "maxLength": 5000,
            "type": "string"
          },
          "requirement": {
            "description": "The specific user onboarding requirement field (in the requirements hash) that needs to be resolved.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "code",
          "reason",
          "requirement"
        ],
        "title": "AccountRequirementsError",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Errors",
          "in_class": "account_requirements"
        }
      },
      "account_sepa_debit_payments_settings": {
        "description": "",
        "properties": {
          "creditor_id": {
            "description": "SEPA creditor identifier that identifies the company making the payment.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "AccountSepaDebitPaymentsSettings",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SepaDebitPayments",
          "in_class": "account_settings"
        }
      },
      "account_settings": {
        "description": "",
        "properties": {
          "bacs_debit_payments": {
            "$ref": "#/components/schemas/account_bacs_debit_payments_settings"
          },
          "branding": {
            "$ref": "#/components/schemas/account_branding_settings"
          },
          "card_issuing": {
            "$ref": "#/components/schemas/account_card_issuing_settings"
          },
          "card_payments": {
            "$ref": "#/components/schemas/account_card_payments_settings"
          },
          "dashboard": {
            "$ref": "#/components/schemas/account_dashboard_settings"
          },
          "payments": {
            "$ref": "#/components/schemas/account_payments_settings"
          },
          "payouts": {
            "$ref": "#/components/schemas/account_payout_settings"
          },
          "sepa_debit_payments": {
            "$ref": "#/components/schemas/account_sepa_debit_payments_settings"
          },
          "treasury": {
            "$ref": "#/components/schemas/account_treasury_settings"
          }
        },
        "required": [
          "branding",
          "card_payments",
          "dashboard",
          "payments"
        ],
        "title": "AccountSettings",
        "type": "object",
        "x-expandableFields": [
          "bacs_debit_payments",
          "branding",
          "card_issuing",
          "card_payments",
          "dashboard",
          "payments",
          "payouts",
          "sepa_debit_payments",
          "treasury"
        ],
        "x-stripeResource": {
          "class_name": "Settings",
          "in_class": "account",
          "inner_classes": [
            "account_bacs_debit_payments_settings",
            "account_card_issuing_settings",
            "account_sepa_debit_payments_settings",
            "account_treasury_settings"
          ]
        }
      },
      "account_terms_of_service": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the account representative accepted the service agreement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the account representative accepted the service agreement.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "date",
          "ip"
        ],
        "title": "AccountTermsOfService",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "TosAcceptance",
          "in_class": "account_treasury_settings"
        }
      },
      "account_tos_acceptance": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the account representative accepted their service agreement",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the account representative accepted their service agreement",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "service_agreement": {
            "description": "The user's service agreement type",
            "maxLength": 5000,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the account representative accepted their service agreement",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "AccountTOSAcceptance",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "TosAcceptance",
          "in_class": "account"
        }
      },
      "account_treasury_settings": {
        "description": "",
        "properties": {
          "tos_acceptance": {
            "$ref": "#/components/schemas/account_terms_of_service"
          }
        },
        "title": "AccountTreasurySettings",
        "type": "object",
        "x-expandableFields": [
          "tos_acceptance"
        ],
        "x-stripeResource": {
          "class_name": "SettingsTreasury",
          "in_class": "account_settings",
          "inner_classes": [
            "account_terms_of_service"
          ]
        }
      },
      "account_unification_account_controller": {
        "description": "",
        "properties": {
          "is_controller": {
            "description": "`true` if the Connect application retrieving the resource controls the account and can therefore exercise [platform controls](https://stripe.com/docs/connect/platform-controls-for-standard-accounts). Otherwise, this field is null.",
            "type": "boolean"
          },
          "type": {
            "description": "The controller type. Can be `application`, if a Connect application controls the account, or `account`, if the account controls itself.",
            "enum": [
              "account",
              "application"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "AccountUnificationAccountController",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Controller",
          "in_class": "account"
        }
      },
      "address": {
        "description": "",
        "properties": {
          "city": {
            "description": "City, district, suburb, town, or village.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Address line 1 (e.g., street, PO Box, or company name).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "State, county, province, or region.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "city",
          "country",
          "line1",
          "line2",
          "postal_code",
          "state"
        ],
        "title": "Address",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Address",
          "in_package": ""
        }
      },
      "alternate_statement_descriptors": {
        "description": "",
        "properties": {
          "kana": {
            "description": "The Kana variation of the descriptor.",
            "maxLength": 5000,
            "type": "string"
          },
          "kanji": {
            "description": "The Kanji variation of the descriptor.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "AlternateStatementDescriptors",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AlternateStatementDescriptors",
          "in_class": "charge"
        }
      },
      "api_errors": {
        "description": "",
        "properties": {
          "charge": {
            "description": "For card errors, the ID of the failed charge.",
            "maxLength": 5000,
            "type": "string"
          },
          "code": {
            "description": "For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.",
            "maxLength": 5000,
            "type": "string"
          },
          "decline_code": {
            "description": "For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.",
            "maxLength": 5000,
            "type": "string"
          },
          "doc_url": {
            "description": "A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.",
            "maxLength": 5000,
            "type": "string"
          },
          "message": {
            "description": "A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.",
            "maxLength": 40000,
            "type": "string"
          },
          "param": {
            "description": "If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.",
            "maxLength": 5000,
            "type": "string"
          },
          "payment_intent": {
            "$ref": "#/components/schemas/payment_intent"
          },
          "payment_method": {
            "$ref": "#/components/schemas/payment_method"
          },
          "payment_method_type": {
            "description": "If the error is specific to the type of payment method, the payment method type that had a problem. This field is only populated for invoice-related errors.",
            "maxLength": 5000,
            "type": "string"
          },
          "request_log_url": {
            "description": "A URL to the request log entry in your dashboard.",
            "maxLength": 5000,
            "type": "string"
          },
          "setup_intent": {
            "$ref": "#/components/schemas/setup_intent"
          },
          "source": {
            "$ref": "#/components/schemas/payment_source"
          },
          "type": {
            "description": "The type of error returned. One of `api_error`, `card_error`, `idempotency_error`, or `invalid_request_error`",
            "enum": [
              "api_error",
              "card_error",
              "idempotency_error",
              "invalid_request_error"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "APIErrors",
        "type": "object",
        "x-expandableFields": [
          "payment_intent",
          "payment_method",
          "setup_intent",
          "source"
        ],
        "x-stripeResource": {
          "class_name": "StripeError",
          "in_package": ""
        }
      },
      "apple_pay_domain": {
        "description": "",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "domain_name": {
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "apple_pay_domain"
            ],
            "type": "string"
          }
        },
        "required": [
          "created",
          "domain_name",
          "id",
          "livemode",
          "object"
        ],
        "title": "ApplePayDomain",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "apple_pay_domain",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/apple_pay/domains"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/apple_pay/domains"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/apple_pay/domains/{domain}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/apple_pay/domains/{domain}"
          }
        ],
        "x-stripeResource": {
          "class_name": "ApplePayDomain",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "application": {
        "description": "",
        "properties": {
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "name": {
            "description": "The name of the application.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "application"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "object"
        ],
        "title": "Application",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Application",
          "in_package": ""
        }
      },
      "application_fee": {
        "description": "",
        "properties": {
          "account": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "ID of the Stripe account this fee was taken from.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "amount": {
            "description": "Amount earned, in %s.",
            "type": "integer"
          },
          "amount_refunded": {
            "description": "Amount in %s refunded (can be less than the amount attribute on the fee if a partial refund was issued)",
            "type": "integer"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              }
            ],
            "description": "ID of the Connect application that earned the fee.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                }
              ]
            }
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the charge that the application fee was taken from.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "application_fee"
            ],
            "type": "string"
          },
          "originating_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the corresponding charge on the platform account, if this fee was the result of a charge using the `destination` parameter.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "refunded": {
            "description": "Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.",
            "type": "boolean"
          },
          "refunds": {
            "description": "A list of refunds that have been applied to the fee.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/fee_refund"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "FeeRefundList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          }
        },
        "required": [
          "account",
          "amount",
          "amount_refunded",
          "application",
          "balance_transaction",
          "charge",
          "created",
          "currency",
          "id",
          "livemode",
          "object",
          "originating_transaction",
          "refunded",
          "refunds"
        ],
        "title": "PlatformFee",
        "type": "object",
        "x-expandableFields": [
          "account",
          "application",
          "balance_transaction",
          "charge",
          "originating_transaction",
          "refunds"
        ],
        "x-resourceId": "application_fee",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/application_fees"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/application_fees/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "ApplicationFee",
          "has_collection_class": true,
          "in_package": "",
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "apps.secret": {
        "description": "Secret Store is an API that allows Stripe Apps developers to securely persist secrets for use by UI Extensions and app backends.\n\nThe primary resource in Secret Store is a `secret`. Other apps can't view secrets created by an app. Additionally, secrets are scoped to provide further permission control.\n\nAll Dashboard users and the app backend share `account` scoped secrets. Use the `account` scope for secrets that don't change per-user, like a third-party API key.\n\nA `user` scoped secret is accessible by the app backend and one specific Dashboard user. Use the `user` scope for per-user secrets like per-user OAuth tokens, where different users might have different permissions.\n\nRelated guide: [Store data between page reloads](https://stripe.com/docs/stripe-apps/store-auth-data-custom-objects).",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "deleted": {
            "description": "If true, indicates that this secret has been deleted",
            "type": "boolean"
          },
          "expires_at": {
            "description": "The Unix timestamp for the expiry time of the secret, after which the secret deletes.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "name": {
            "description": "A name for the secret that's unique within the scope.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "apps.secret"
            ],
            "type": "string"
          },
          "payload": {
            "description": "The plaintext secret value to be stored.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/secret_service_resource_scope"
          }
        },
        "required": [
          "created",
          "expires_at",
          "id",
          "livemode",
          "name",
          "object",
          "payload",
          "scope"
        ],
        "title": "SecretServiceResourceSecret",
        "type": "object",
        "x-expandableFields": [
          "scope"
        ],
        "x-resourceId": "apps.secret",
        "x-stripeOperations": [
          {
            "method_name": "find",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/apps/secrets/find"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/apps/secrets"
          },
          {
            "method_name": "delete_where",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/apps/secrets/delete"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/apps/secrets"
          }
        ],
        "x-stripeResource": {
          "class_name": "Secret",
          "has_collection_class": true,
          "in_package": "Apps",
          "inner_classes": [
            "secret_service_resource_scope"
          ]
        }
      },
      "automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Stripe automatically computes tax on this invoice. Note that incompatible invoice items (invoice items with manually specified [tax rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`) cannot be added to automatic tax invoices.",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the most recent automated tax calculation for this invoice.",
            "enum": [
              "complete",
              "failed",
              "requires_location_inputs"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "enabled",
          "status"
        ],
        "title": "AutomaticTax",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AutomaticTax",
          "in_class": "invoice"
        }
      },
      "balance": {
        "description": "This is an object representing your Stripe balance. You can retrieve it to see\nthe balance currently on your Stripe account.\n\nYou can also retrieve the balance history, which contains a list of\n[transactions](https://stripe.com/docs/reporting/balance-transaction-types) that contributed to the balance\n(charges, payouts, and so forth).\n\nThe available and pending amounts for each currency are broken down further by\npayment source types.\n\nRelated guide: [Understanding Connect Account Balances](https://stripe.com/docs/connect/account-balances).",
        "properties": {
          "available": {
            "description": "Funds that are available to be transferred or paid out, whether automatically by Stripe or explicitly via the [Transfers API](https://stripe.com/docs/api#transfers) or [Payouts API](https://stripe.com/docs/api#payouts). The available balance for each currency and payment type can be found in the `source_types` property.",
            "items": {
              "$ref": "#/components/schemas/balance_amount"
            },
            "type": "array"
          },
          "connect_reserved": {
            "description": "Funds held due to negative balances on connected Custom accounts. The connect reserve balance for each currency and payment type can be found in the `source_types` property.",
            "items": {
              "$ref": "#/components/schemas/balance_amount"
            },
            "type": "array"
          },
          "instant_available": {
            "description": "Funds that can be paid out using Instant Payouts.",
            "items": {
              "$ref": "#/components/schemas/balance_amount"
            },
            "type": "array"
          },
          "issuing": {
            "$ref": "#/components/schemas/balance_detail"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "balance"
            ],
            "type": "string"
          },
          "pending": {
            "description": "Funds that are not yet available in the balance, due to the 7-day rolling pay cycle. The pending balance for each currency, and for each payment type, can be found in the `source_types` property.",
            "items": {
              "$ref": "#/components/schemas/balance_amount"
            },
            "type": "array"
          }
        },
        "required": [
          "available",
          "livemode",
          "object",
          "pending"
        ],
        "title": "Balance",
        "type": "object",
        "x-expandableFields": [
          "available",
          "connect_reserved",
          "instant_available",
          "issuing",
          "pending"
        ],
        "x-resourceId": "balance",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/balance"
          }
        ],
        "x-stripeResource": {
          "class_name": "Balance",
          "in_package": "",
          "inner_classes": [
            "balance_amount",
            "balance_detail"
          ]
        }
      },
      "balance_amount": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Balance amount.",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "source_types": {
            "$ref": "#/components/schemas/balance_amount_by_source_type"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "title": "BalanceAmount",
        "type": "object",
        "x-expandableFields": [
          "source_types"
        ],
        "x-stripeResource": {
          "class_name": "Money",
          "in_class": "balance",
          "inner_classes": [
            "balance_amount_by_source_type"
          ]
        }
      },
      "balance_amount_by_source_type": {
        "description": "",
        "properties": {
          "bank_account": {
            "description": "Amount for bank account.",
            "type": "integer"
          },
          "card": {
            "description": "Amount for card.",
            "type": "integer"
          },
          "fpx": {
            "description": "Amount for FPX.",
            "type": "integer"
          }
        },
        "title": "BalanceAmountBySourceType",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SourceTypes",
          "in_class": "balance_amount"
        }
      },
      "balance_detail": {
        "description": "",
        "properties": {
          "available": {
            "description": "Funds that are available for use.",
            "items": {
              "$ref": "#/components/schemas/balance_amount"
            },
            "type": "array"
          }
        },
        "required": [
          "available"
        ],
        "title": "BalanceDetail",
        "type": "object",
        "x-expandableFields": [
          "available"
        ],
        "x-stripeResource": {
          "class_name": "Details",
          "in_class": "balance"
        }
      },
      "balance_transaction": {
        "description": "Balance transactions represent funds moving through your Stripe account.\nThey're created for every type of transaction that comes into or flows out of your Stripe account balance.\n\nRelated guide: [Balance Transaction Types](https://stripe.com/docs/reports/balance-transaction-types).",
        "properties": {
          "amount": {
            "description": "Gross amount of the transaction, in %s.",
            "type": "integer"
          },
          "available_on": {
            "description": "The date the transaction's net funds will become available in the Stripe balance.",
            "format": "unix-time",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exchange_rate": {
            "description": "The exchange rate used, if applicable, for this transaction. Specifically, if money was converted from currency A to currency B, then the `amount` in currency A, times `exchange_rate`, would be the `amount` in currency B. For example, suppose you charged a customer 10.00 EUR. Then the PaymentIntent's `amount` would be `1000` and `currency` would be `eur`. Suppose this was converted into 12.34 USD in your Stripe account. Then the BalanceTransaction's `amount` would be `1234`, `currency` would be `usd`, and `exchange_rate` would be `1.234`.",
            "nullable": true,
            "type": "number"
          },
          "fee": {
            "description": "Fees (in %s) paid for this transaction.",
            "type": "integer"
          },
          "fee_details": {
            "description": "Detailed breakdown of fees (in %s) paid for this transaction.",
            "items": {
              "$ref": "#/components/schemas/fee"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "net": {
            "description": "Net amount of the transaction, in %s.",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "balance_transaction"
            ],
            "type": "string"
          },
          "reporting_category": {
            "description": "[Learn more](https://stripe.com/docs/reports/reporting-categories) about how reporting categories can help you understand balance transactions from an accounting perspective.",
            "maxLength": 5000,
            "type": "string"
          },
          "source": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction_source"
              }
            ],
            "description": "The Stripe object to which this transaction is related.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction_source"
                }
              ]
            }
          },
          "status": {
            "description": "If the transaction's net funds are available in the Stripe balance yet. Either `available` or `pending`.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. [Learn more](https://stripe.com/docs/reports/balance-transaction-types) about balance transaction types and what they represent. If you are looking to classify transactions for accounting purposes, you might want to consider `reporting_category` instead.",
            "enum": [
              "adjustment",
              "advance",
              "advance_funding",
              "anticipation_repayment",
              "application_fee",
              "application_fee_refund",
              "charge",
              "connect_collection_transfer",
              "contribution",
              "issuing_authorization_hold",
              "issuing_authorization_release",
              "issuing_dispute",
              "issuing_transaction",
              "payment",
              "payment_failure_refund",
              "payment_refund",
              "payout",
              "payout_cancel",
              "payout_failure",
              "refund",
              "refund_failure",
              "reserve_transaction",
              "reserved_funds",
              "stripe_fee",
              "stripe_fx_fee",
              "tax_fee",
              "topup",
              "topup_reversal",
              "transfer",
              "transfer_cancel",
              "transfer_failure",
              "transfer_refund"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "available_on",
          "created",
          "currency",
          "description",
          "exchange_rate",
          "fee",
          "fee_details",
          "id",
          "net",
          "object",
          "reporting_category",
          "source",
          "status",
          "type"
        ],
        "title": "BalanceTransaction",
        "type": "object",
        "x-expandableFields": [
          "fee_details",
          "source"
        ],
        "x-resourceId": "balance_transaction",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/balance_transactions"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/balance_transactions/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "BalanceTransaction",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "fee"
          ]
        }
      },
      "balance_transaction_source": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/application_fee"
          },
          {
            "$ref": "#/components/schemas/charge"
          },
          {
            "$ref": "#/components/schemas/connect_collection_transfer"
          },
          {
            "$ref": "#/components/schemas/dispute"
          },
          {
            "$ref": "#/components/schemas/fee_refund"
          },
          {
            "$ref": "#/components/schemas/issuing.authorization"
          },
          {
            "$ref": "#/components/schemas/issuing.dispute"
          },
          {
            "$ref": "#/components/schemas/issuing.transaction"
          },
          {
            "$ref": "#/components/schemas/payout"
          },
          {
            "$ref": "#/components/schemas/platform_tax_fee"
          },
          {
            "$ref": "#/components/schemas/refund"
          },
          {
            "$ref": "#/components/schemas/reserve_transaction"
          },
          {
            "$ref": "#/components/schemas/tax_deducted_at_source"
          },
          {
            "$ref": "#/components/schemas/topup"
          },
          {
            "$ref": "#/components/schemas/transfer"
          },
          {
            "$ref": "#/components/schemas/transfer_reversal"
          }
        ],
        "title": "Polymorphic",
        "x-stripeBypassValidation": true,
        "x-stripeResource": {
          "class_name": "BalanceTransactionSource"
        }
      },
      "bank_account": {
        "description": "These bank accounts are payment methods on `Customer` objects.\n\nOn the other hand [External Accounts](https://stripe.com/docs/api#external_accounts) are transfer\ndestinations on `Account` objects for [Custom accounts](https://stripe.com/docs/connect/custom-accounts).\nThey can be bank accounts or debit cards as well, and are documented in the links above.\n\nRelated guide: [Bank Debits and Transfers](https://stripe.com/docs/payments/bank-debits-transfers).",
        "properties": {
          "account": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The ID of the account that the bank account is associated with.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "account_holder_name": {
            "description": "The name of the person or business that owns the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_holder_type": {
            "description": "The type of entity that holds the account. This can be either `individual` or `company`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "The bank account type. This can only be `checking` or `savings` in most countries. In Japan, this can only be `futsu` or `toza`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "available_payout_methods": {
            "description": "A set of available payout methods for this bank account. Only values from this set should be passed as the `method` when creating a payout.",
            "items": {
              "enum": [
                "instant",
                "standard"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "bank_name": {
            "description": "Name of the bank associated with the routing number (e.g., `WELLS FARGO`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "type": "string"
          },
          "currency": {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The ID of the customer that the bank account is associated with.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "default_for_currency": {
            "description": "Whether this bank account is the default external account for its currency.",
            "nullable": true,
            "type": "boolean"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the bank account number.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "bank_account"
            ],
            "type": "string"
          },
          "routing_number": {
            "description": "The routing transit number for the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "For bank accounts, possible values are `new`, `validated`, `verified`, `verification_failed`, or `errored`. A bank account that hasn't had any activity or validation performed is `new`. If Stripe can determine that the bank account exists, its status will be `validated`. Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run. If customer bank account verification has succeeded, the bank account status will be `verified`. If the verification failed for any reason, such as microdeposit failure, the status will be `verification_failed`. If a transfer sent to this bank account fails, we'll set the status to `errored` and will not continue to send transfers until the bank details are updated.\n\nFor external accounts, possible values are `new` and `errored`. Validations aren't run against external accounts because they're only used for payouts. This means the other statuses don't apply. If a transfer fails, the status is set to `errored` and transfers are stopped until account details are updated.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "account_holder_name",
          "account_holder_type",
          "account_type",
          "bank_name",
          "country",
          "currency",
          "fingerprint",
          "id",
          "last4",
          "object",
          "routing_number",
          "status"
        ],
        "title": "BankAccount",
        "type": "object",
        "x-expandableFields": [
          "account",
          "customer"
        ],
        "x-resourceId": "bank_account",
        "x-stripeOperations": [
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/customers/{customer}/sources/{id}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/customers/{customer}/sources/{id}"
          },
          {
            "method_name": "verify",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/customers/{customer}/sources/{id}/verify"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/accounts/{account}/external_accounts/{id}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/accounts/{account}/external_accounts/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "BankAccount",
          "in_package": "",
          "polymorphic_groups": [
            "deleted_external_account",
            "deleted_payment_source",
            "external_account",
            "payment_source"
          ]
        }
      },
      "bank_connections_resource_accountholder": {
        "description": "",
        "properties": {
          "account": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The ID of the Stripe account this account belongs to. Should only be present if `account_holder.type` is `account`.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              }
            ],
            "description": "ID of the Stripe customer this account belongs to. Present if and only if `account_holder.type` is `customer`.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                }
              ]
            }
          },
          "type": {
            "description": "Type of account holder that this account belongs to.",
            "enum": [
              "account",
              "customer"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "BankConnectionsResourceAccountholder",
        "type": "object",
        "x-expandableFields": [
          "account",
          "customer"
        ],
        "x-stripeResource": {
          "class_name": "AccountHolder",
          "in_class": "financial_connections.account"
        }
      },
      "bank_connections_resource_balance": {
        "description": "",
        "properties": {
          "as_of": {
            "description": "The time that the external institution calculated this balance. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "cash": {
            "$ref": "#/components/schemas/bank_connections_resource_balance_api_resource_cash_balance"
          },
          "credit": {
            "$ref": "#/components/schemas/bank_connections_resource_balance_api_resource_credit_balance"
          },
          "current": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The balances owed to (or by) the account holder.\n\nEach key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.\n\nEach value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.",
            "type": "object"
          },
          "type": {
            "description": "The `type` of the balance. An additional hash is included on the balance with a name matching this value.",
            "enum": [
              "cash",
              "credit"
            ],
            "type": "string"
          }
        },
        "required": [
          "as_of",
          "current",
          "type"
        ],
        "title": "BankConnectionsResourceBalance",
        "type": "object",
        "x-expandableFields": [
          "cash",
          "credit"
        ],
        "x-stripeResource": {
          "class_name": "Balance",
          "in_class": "financial_connections.account",
          "inner_classes": [
            "bank_connections_resource_balance_api_resource_cash_balance",
            "bank_connections_resource_balance_api_resource_credit_balance"
          ]
        }
      },
      "bank_connections_resource_balance_api_resource_cash_balance": {
        "description": "",
        "properties": {
          "available": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The funds available to the account holder. Typically this is the current balance less any holds.\n\nEach key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.\n\nEach value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.",
            "nullable": true,
            "type": "object"
          }
        },
        "required": [
          "available"
        ],
        "title": "BankConnectionsResourceBalanceAPIResourceCashBalance",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CashBalance",
          "in_class": "bank_connections_resource_balance"
        }
      },
      "bank_connections_resource_balance_api_resource_credit_balance": {
        "description": "",
        "properties": {
          "used": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The credit that has been used by the account holder.\n\nEach key is a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.\n\nEach value is a integer amount. A positive amount indicates money owed to the account holder. A negative amount indicates money owed by the account holder.",
            "nullable": true,
            "type": "object"
          }
        },
        "required": [
          "used"
        ],
        "title": "BankConnectionsResourceBalanceAPIResourceCreditBalance",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CreditBalance",
          "in_class": "bank_connections_resource_balance"
        }
      },
      "bank_connections_resource_balance_refresh": {
        "description": "",
        "properties": {
          "last_attempted_at": {
            "description": "The time at which the last refresh attempt was initiated. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "status": {
            "description": "The status of the last refresh attempt.",
            "enum": [
              "failed",
              "pending",
              "succeeded"
            ],
            "type": "string"
          }
        },
        "required": [
          "last_attempted_at",
          "status"
        ],
        "title": "BankConnectionsResourceBalanceRefresh",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BalanceRefresh",
          "in_class": "financial_connections.account"
        }
      },
      "bank_connections_resource_link_account_session_filters": {
        "description": "",
        "properties": {
          "countries": {
            "description": "List of countries from which to filter accounts.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "countries"
        ],
        "title": "BankConnectionsResourceLinkAccountSessionFilters",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Filters",
          "in_class": "financial_connections.session"
        }
      },
      "bank_connections_resource_ownership_refresh": {
        "description": "",
        "properties": {
          "last_attempted_at": {
            "description": "The time at which the last refresh attempt was initiated. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "status": {
            "description": "The status of the last refresh attempt.",
            "enum": [
              "failed",
              "pending",
              "succeeded"
            ],
            "type": "string"
          }
        },
        "required": [
          "last_attempted_at",
          "status"
        ],
        "title": "BankConnectionsResourceOwnershipRefresh",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "OwnershipRefresh",
          "in_class": "financial_connections.account"
        }
      },
      "billing_details": {
        "description": "",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Billing address.",
            "nullable": true
          },
          "email": {
            "description": "Email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Full name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "Billing phone number (including extension).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "email",
          "name",
          "phone"
        ],
        "title": "billing_details",
        "type": "object",
        "x-expandableFields": [
          "address"
        ],
        "x-stripeResource": {
          "class_name": "BillingDetails",
          "in_class": "payment_method"
        }
      },
      "billing_portal.configuration": {
        "description": "A portal configuration describes the functionality and behavior of a portal session.",
        "properties": {
          "active": {
            "description": "Whether the configuration is active and can be used to create portal sessions.",
            "type": "boolean"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              },
              {
                "$ref": "#/components/schemas/deleted_application"
              }
            ],
            "description": "ID of the Connect Application that created the configuration.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ]
            }
          },
          "business_profile": {
            "$ref": "#/components/schemas/portal_business_profile"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "default_return_url": {
            "description": "The default URL to redirect customers to when they click on the portal's link to return to your website. This can be [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url) when creating the session.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "features": {
            "$ref": "#/components/schemas/portal_features"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "is_default": {
            "description": "Whether the configuration is the default. If `true`, this configuration can be managed in the Dashboard and portal sessions will use this configuration unless it is overriden when creating the session.",
            "type": "boolean"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "login_page": {
            "$ref": "#/components/schemas/portal_login_page"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "billing_portal.configuration"
            ],
            "type": "string"
          },
          "updated": {
            "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          }
        },
        "required": [
          "active",
          "application",
          "business_profile",
          "created",
          "default_return_url",
          "features",
          "id",
          "is_default",
          "livemode",
          "login_page",
          "metadata",
          "object",
          "updated"
        ],
        "title": "PortalConfiguration",
        "type": "object",
        "x-expandableFields": [
          "application",
          "business_profile",
          "features",
          "login_page"
        ],
        "x-resourceId": "billing_portal.configuration",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/billing_portal/configurations"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/billing_portal/configurations"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/billing_portal/configurations/{configuration}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/billing_portal/configurations/{configuration}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Configuration",
          "has_collection_class": true,
          "in_package": "BillingPortal",
          "inner_classes": [
            "portal_business_profile",
            "portal_features",
            "portal_login_page"
          ]
        }
      },
      "billing_portal.session": {
        "description": "The Billing customer portal is a Stripe-hosted UI for subscription and\nbilling management.\n\nA portal configuration describes the functionality and features that you\nwant to provide to your customers through the portal.\n\nA portal session describes the instantiation of the customer portal for\na particular customer. By visiting the session's URL, the customer\ncan manage their subscriptions and billing details. For security reasons,\nsessions are short-lived and will expire if the customer does not visit the URL.\nCreate sessions on-demand when customers intend to manage their subscriptions\nand billing details.\n\nLearn more in the [integration guide](https://stripe.com/docs/billing/subscriptions/integrating-customer-portal).",
        "properties": {
          "configuration": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/billing_portal.configuration"
              }
            ],
            "description": "The configuration used by this session, describing the features available.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/billing_portal.configuration"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "description": "The ID of the customer for this session.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "locale": {
            "description": "The IETF language tag of the locale Customer Portal is displayed in. If blank or auto, the customer’s `preferred_locales` or browser’s locale is used.",
            "enum": [
              "auto",
              "bg",
              "cs",
              "da",
              "de",
              "el",
              "en",
              "en-AU",
              "en-CA",
              "en-GB",
              "en-IE",
              "en-IN",
              "en-NZ",
              "en-SG",
              "es",
              "es-419",
              "et",
              "fi",
              "fil",
              "fr",
              "fr-CA",
              "hr",
              "hu",
              "id",
              "it",
              "ja",
              "ko",
              "lt",
              "lv",
              "ms",
              "mt",
              "nb",
              "nl",
              "pl",
              "pt",
              "pt-BR",
              "ro",
              "ru",
              "sk",
              "sl",
              "sv",
              "th",
              "tr",
              "vi",
              "zh",
              "zh-HK",
              "zh-TW"
            ],
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "billing_portal.session"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "description": "The account for which the session was created on behalf of. When specified, only subscriptions and invoices with this `on_behalf_of` account appear in the portal. For more information, see the [docs](https://stripe.com/docs/connect/charges-transfers#on-behalf-of). Use the [Accounts API](https://stripe.com/docs/api/accounts/object#account_object-settings-branding) to modify the `on_behalf_of` account's branding settings, which the portal displays.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "return_url": {
            "description": "The URL to redirect customers to when they click on the portal's link to return to your website.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The short-lived URL of the session that gives customers access to the customer portal.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "configuration",
          "created",
          "customer",
          "id",
          "livemode",
          "locale",
          "object",
          "on_behalf_of",
          "return_url",
          "url"
        ],
        "title": "PortalSession",
        "type": "object",
        "x-expandableFields": [
          "configuration"
        ],
        "x-resourceId": "billing_portal.session",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/billing_portal/sessions"
          }
        ],
        "x-stripeResource": {
          "class_name": "Session",
          "in_package": "BillingPortal"
        }
      },
      "cash_balance": {
        "description": "A customer's `Cash balance` represents real funds. Customers can add funds to their cash balance by sending a bank transfer. These funds can be used for payment and can eventually be paid out to your bank account.",
        "properties": {
          "available": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "A hash of all cash balances available to this customer. You cannot delete a customer with any cash balances, even if the balance is 0. Amounts are represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "nullable": true,
            "type": "object"
          },
          "customer": {
            "description": "The ID of the customer whose cash balance this object represents.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "cash_balance"
            ],
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/customer_balance_customer_balance_settings"
          }
        },
        "required": [
          "available",
          "customer",
          "livemode",
          "object",
          "settings"
        ],
        "title": "cash_balance",
        "type": "object",
        "x-expandableFields": [
          "settings"
        ],
        "x-resourceId": "cash_balance",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/customers/{customer}/cash_balance"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/customers/{customer}/cash_balance"
          }
        ],
        "x-stripeResource": {
          "class_name": "CashBalance",
          "in_package": "",
          "inner_classes": [
            "customer_balance_customer_balance_settings"
          ]
        }
      },
      "charge": {
        "description": "To charge a credit or a debit card, you create a `Charge` object. You can\nretrieve and refund individual charges as well as list all charges. Charges\nare identified by a unique, random ID.\n\nRelated guide: [Accept a payment with the Charges API](https://stripe.com/docs/payments/accept-a-payment-charges).",
        "properties": {
          "alternate_statement_descriptors": {
            "$ref": "#/components/schemas/alternate_statement_descriptors"
          },
          "amount": {
            "description": "Amount intended to be collected by this payment. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
            "type": "integer"
          },
          "amount_captured": {
            "description": "Amount in %s captured (can be less than the amount attribute on the charge if a partial capture was made).",
            "type": "integer"
          },
          "amount_refunded": {
            "description": "Amount in %s refunded (can be less than the amount attribute on the charge if a partial refund was issued).",
            "type": "integer"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              }
            ],
            "description": "ID of the Connect application that created the charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                }
              ]
            }
          },
          "application_fee": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application_fee"
              }
            ],
            "description": "The application fee (if any) for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ]
            }
          },
          "application_fee_amount": {
            "description": "The amount of the application fee (if any) requested for the charge. [See the Connect documentation](https://stripe.com/docs/connect/direct-charges#collecting-fees) for details.",
            "nullable": true,
            "type": "integer"
          },
          "authorization_code": {
            "description": "Authorization code on the charge.",
            "maxLength": 5000,
            "type": "string"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "ID of the balance transaction that describes the impact of this charge on your account balance (not including refunds or disputes).",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "billing_details": {
            "$ref": "#/components/schemas/billing_details"
          },
          "calculated_statement_descriptor": {
            "description": "The full statement descriptor that is passed to card networks, and that is displayed on your customers' credit card and bank statements. Allows you to see what the statement descriptor looks like after the static and dynamic portions are combined.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "captured": {
            "description": "If the charge was created without capturing, this Boolean represents whether it is still uncaptured or has since been captured.",
            "type": "boolean"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "ID of the customer this charge is for if one exists.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 40000,
            "nullable": true,
            "type": "string"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "dispute": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/dispute"
              }
            ],
            "description": "Details about the dispute if the charge has been disputed.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/dispute"
                }
              ]
            }
          },
          "disputed": {
            "description": "Whether the charge has been disputed.",
            "type": "boolean"
          },
          "failure_balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "ID of the balance transaction that describes the reversal of the balance on your account due to payment failure.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "failure_code": {
            "description": "Error code explaining reason for charge failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "failure_message": {
            "description": "Message to user further explaining reason for charge failure if available.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fraud_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/charge_fraud_details"
              }
            ],
            "description": "Information on fraud assessments for the charge.",
            "nullable": true
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "ID of the invoice this charge is for if one exists.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          },
          "level3": {
            "$ref": "#/components/schemas/level3"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "charge"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) the charge was made on behalf of without triggering an automatic transfer. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers) for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "outcome": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/charge_outcome"
              }
            ],
            "description": "Details about whether the payment was accepted, and why. See [understanding declines](https://stripe.com/docs/declines) for details.",
            "nullable": true
          },
          "paid": {
            "description": "`true` if the charge succeeded, or was successfully authorized for later capture.",
            "type": "boolean"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "ID of the PaymentIntent associated with this charge, if one exists.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "payment_method": {
            "description": "ID of the payment method used in this charge.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payment_method_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details"
              }
            ],
            "description": "Details about the payment method at the time of the transaction.",
            "nullable": true
          },
          "radar_options": {
            "$ref": "#/components/schemas/radar_radar_options"
          },
          "receipt_email": {
            "description": "This is the email address that the receipt for this charge was sent to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "receipt_number": {
            "description": "This is the transaction number that appears on email receipts sent for this charge. This attribute will be `null` until a receipt has been sent.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "receipt_url": {
            "description": "This is the URL to view the receipt for this charge. The receipt is kept up-to-date to the latest state of the charge, including any refunds. If the charge is for an Invoice, the receipt will be stylized as an Invoice receipt.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "refunded": {
            "description": "Whether the charge has been fully refunded. If the charge is only partially refunded, this attribute will still be false.",
            "type": "boolean"
          },
          "refunds": {
            "description": "A list of refunds that have been applied to the charge.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/refund"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "RefundList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "review": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/review"
              }
            ],
            "description": "ID of the review associated with this charge if one exists.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/review"
                }
              ]
            }
          },
          "shipping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping"
              }
            ],
            "description": "Shipping information for the charge.",
            "nullable": true
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_source"
              }
            ],
            "description": "This is a legacy field that will be removed in the future. It contains the Source, Card, or BankAccount object used for the charge. For details about the payment method used for this charge, refer to `payment_method` or `payment_method_details` instead.",
            "nullable": true
          },
          "source_transfer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/transfer"
              }
            ],
            "description": "The transfer ID which created this charge. Only present if the charge came from another Stripe account. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ]
            }
          },
          "statement_descriptor": {
            "description": "For card charges, use `statement_descriptor_suffix` instead. Otherwise, you can use this value as the complete description of a charge on your customers’ statements. Must contain at least one letter, maximum 22 characters.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_suffix": {
            "description": "Provides information about the charge that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the payment is either `succeeded`, `pending`, or `failed`.",
            "enum": [
              "failed",
              "pending",
              "succeeded"
            ],
            "type": "string"
          },
          "transfer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/transfer"
              }
            ],
            "description": "ID of the transfer to the `destination` account (only applicable if the charge was created using the `destination` parameter).",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ]
            }
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/charge_transfer_data"
              }
            ],
            "description": "An optional dictionary including the account to automatically transfer to as part of a destination charge. [See the Connect documentation](https://stripe.com/docs/connect/destination-charges) for details.",
            "nullable": true
          },
          "transfer_group": {
            "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "amount_captured",
          "amount_refunded",
          "application",
          "application_fee",
          "application_fee_amount",
          "balance_transaction",
          "billing_details",
          "calculated_statement_descriptor",
          "captured",
          "created",
          "currency",
          "customer",
          "description",
          "destination",
          "dispute",
          "disputed",
          "failure_balance_transaction",
          "failure_code",
          "failure_message",
          "fraud_details",
          "id",
          "invoice",
          "livemode",
          "metadata",
          "object",
          "on_behalf_of",
          "outcome",
          "paid",
          "payment_intent",
          "payment_method",
          "payment_method_details",
          "receipt_email",
          "receipt_number",
          "receipt_url",
          "refunded",
          "review",
          "shipping",
          "source",
          "source_transfer",
          "statement_descriptor",
          "statement_descriptor_suffix",
          "status",
          "transfer_data",
          "transfer_group"
        ],
        "title": "Charge",
        "type": "object",
        "x-expandableFields": [
          "alternate_statement_descriptors",
          "application",
          "application_fee",
          "balance_transaction",
          "billing_details",
          "customer",
          "destination",
          "dispute",
          "failure_balance_transaction",
          "fraud_details",
          "invoice",
          "level3",
          "on_behalf_of",
          "outcome",
          "payment_intent",
          "payment_method_details",
          "radar_options",
          "refunds",
          "review",
          "shipping",
          "source",
          "source_transfer",
          "transfer",
          "transfer_data"
        ],
        "x-resourceId": "charge",
        "x-stripeOperations": [
          {
            "method_name": "search",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/charges/search"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/charges"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/charges"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/charges/{charge}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/charges/{charge}"
          },
          {
            "method_name": "capture",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/charges/{charge}/capture"
          }
        ],
        "x-stripeResource": {
          "class_name": "Charge",
          "has_collection_class": true,
          "has_search_result_class": true,
          "in_package": "",
          "inner_classes": [
            "alternate_statement_descriptors",
            "charge_fraud_details",
            "charge_outcome",
            "charge_transfer_data",
            "level3",
            "payment_method_details",
            "radar_radar_options"
          ],
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "charge_fraud_details": {
        "description": "",
        "properties": {
          "stripe_report": {
            "description": "Assessments from Stripe. If set, the value is `fraudulent`.",
            "maxLength": 5000,
            "type": "string"
          },
          "user_report": {
            "description": "Assessments reported by you. If set, possible values of are `safe` and `fraudulent`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "ChargeFraudDetails",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "FraudDetails",
          "in_class": "charge"
        }
      },
      "charge_outcome": {
        "description": "",
        "properties": {
          "network_status": {
            "description": "Possible values are `approved_by_network`, `declined_by_network`, `not_sent_to_network`, and `reversed_after_approval`. The value `reversed_after_approval` indicates the payment was [blocked by Stripe](https://stripe.com/docs/declines#blocked-payments) after bank authorization, and may temporarily appear as \"pending\" on a cardholder's statement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "reason": {
            "description": "An enumerated value providing a more detailed explanation of the outcome's `type`. Charges blocked by Radar's default block rule have the value `highest_risk_level`. Charges placed in review by Radar's default review rule have the value `elevated_risk_level`. Charges authorized, blocked, or placed in review by custom rules have the value `rule`. See [understanding declines](https://stripe.com/docs/declines) for more details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "risk_level": {
            "description": "Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are `normal`, `elevated`, `highest`. For non-card payments, and card-based payments predating the public assignment of risk levels, this field will have the value `not_assessed`. In the event of an error in the evaluation, this field will have the value `unknown`. This field is only available with Radar.",
            "maxLength": 5000,
            "type": "string"
          },
          "risk_score": {
            "description": "Stripe Radar's evaluation of the riskiness of the payment. Possible values for evaluated payments are between 0 and 100. For non-card payments, card-based payments predating the public assignment of risk scores, or in the event of an error during evaluation, this field will not be present. This field is only available with Radar for Fraud Teams.",
            "type": "integer"
          },
          "rule": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/rule"
              }
            ],
            "description": "The ID of the Radar rule that matched the payment, if applicable.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/rule"
                }
              ]
            }
          },
          "seller_message": {
            "description": "A human-readable description of the outcome type and reason, designed for you (the recipient of the payment), not your customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Possible values are `authorized`, `manual_review`, `issuer_declined`, `blocked`, and `invalid`. See [understanding declines](https://stripe.com/docs/declines) and [Radar reviews](https://stripe.com/docs/radar/reviews) for details.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "network_status",
          "reason",
          "seller_message",
          "type"
        ],
        "title": "ChargeOutcome",
        "type": "object",
        "x-expandableFields": [
          "rule"
        ],
        "x-stripeResource": {
          "class_name": "Outcome",
          "in_class": "charge"
        }
      },
      "charge_transfer_data": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount transferred to the destination account, if specified. By default, the entire charge amount is transferred to the destination account.",
            "nullable": true,
            "type": "integer"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "ID of an existing, connected Stripe account to transfer funds to if `transfer_data` was specified in the charge request.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "destination"
        ],
        "title": "ChargeTransferData",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ],
        "x-stripeResource": {
          "class_name": "TransferData",
          "in_class": "charge"
        }
      },
      "connect_collection_transfer": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount transferred, in %s.",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "ID of the account that funds are being collected for.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "connect_collection_transfer"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "destination",
          "id",
          "livemode",
          "object"
        ],
        "title": "ConnectCollectionTransfer",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ],
        "x-stripeResource": {
          "class_name": "ConnectCollectionTransfer",
          "in_package": "",
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "country_spec": {
        "description": "Stripe needs to collect certain pieces of information about each account\ncreated. These requirements can differ depending on the account's country. The\nCountry Specs API makes these rules available to your integration.\n\nYou can also view the information from this API call as [an online\nguide](/docs/connect/required-verification-information).",
        "properties": {
          "default_currency": {
            "description": "The default currency for this country. This applies to both payment methods and bank accounts.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object. Represented as the ISO country code for this country.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "country_spec"
            ],
            "type": "string"
          },
          "supported_bank_account_currencies": {
            "additionalProperties": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "description": "Currencies that can be accepted in the specific country (for transfers).",
            "type": "object"
          },
          "supported_payment_currencies": {
            "description": "Currencies that can be accepted in the specified country (for payments).",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "supported_payment_methods": {
            "description": "Payment methods available in the specified country. You may need to enable some payment methods (e.g., [ACH](https://stripe.com/docs/ach)) on your account before they appear in this list. The `stripe` payment method refers to [charging through your platform](https://stripe.com/docs/connect/destination-charges).",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "supported_transfer_countries": {
            "description": "Countries that can accept transfers from the specified country.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "verification_fields": {
            "$ref": "#/components/schemas/country_spec_verification_fields"
          }
        },
        "required": [
          "default_currency",
          "id",
          "object",
          "supported_bank_account_currencies",
          "supported_payment_currencies",
          "supported_payment_methods",
          "supported_transfer_countries",
          "verification_fields"
        ],
        "title": "CountrySpec",
        "type": "object",
        "x-expandableFields": [
          "verification_fields"
        ],
        "x-resourceId": "country_spec",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/country_specs"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/country_specs/{country}"
          }
        ],
        "x-stripeResource": {
          "class_name": "CountrySpec",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "country_spec_verification_fields"
          ]
        }
      },
      "country_spec_verification_field_details": {
        "description": "",
        "properties": {
          "additional": {
            "description": "Additional fields which are only required for some users.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "minimum": {
            "description": "Fields which every account must eventually provide.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "additional",
          "minimum"
        ],
        "title": "CountrySpecVerificationFieldDetails",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Details",
          "in_class": "country_spec_verification_fields"
        }
      },
      "country_spec_verification_fields": {
        "description": "",
        "properties": {
          "company": {
            "$ref": "#/components/schemas/country_spec_verification_field_details"
          },
          "individual": {
            "$ref": "#/components/schemas/country_spec_verification_field_details"
          }
        },
        "required": [
          "company",
          "individual"
        ],
        "title": "CountrySpecVerificationFields",
        "type": "object",
        "x-expandableFields": [
          "company",
          "individual"
        ],
        "x-stripeResource": {
          "class_name": "VerificationFields",
          "in_class": "country_spec",
          "inner_classes": [
            "country_spec_verification_field_details"
          ]
        }
      },
      "coupon": {
        "description": "A coupon contains information about a percent-off or amount-off discount you\nmight want to apply to a customer. Coupons may be applied to [subscriptions](https://stripe.com/docs/api#subscriptions), [invoices](https://stripe.com/docs/api#invoices),\n[checkout sessions](https://stripe.com/docs/api/checkout/sessions), [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not work with conventional one-off [charges](https://stripe.com/docs/api#create_charge) or [payment intents](https://stripe.com/docs/api/payment_intents).",
        "properties": {
          "amount_off": {
            "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
            "nullable": true,
            "type": "integer"
          },
          "applies_to": {
            "$ref": "#/components/schemas/coupon_applies_to"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "If `amount_off` has been set, the three-letter [ISO code for the currency](https://stripe.com/docs/currencies) of the amount to take off.",
            "nullable": true,
            "type": "string"
          },
          "currency_options": {
            "additionalProperties": {
              "$ref": "#/components/schemas/coupon_currency_option"
            },
            "description": "Coupons defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "type": "object"
          },
          "duration": {
            "description": "One of `forever`, `once`, and `repeating`. Describes how long a customer who applies this coupon will get the discount.",
            "enum": [
              "forever",
              "once",
              "repeating"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "duration_in_months": {
            "description": "If `duration` is `repeating`, the number of months the coupon applies. Null if coupon `duration` is `forever` or `once`.",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "max_redemptions": {
            "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "name": {
            "description": "Name of the coupon displayed to customers on for instance invoices or receipts.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "coupon"
            ],
            "type": "string"
          },
          "percent_off": {
            "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For example, a coupon with percent_off of 50 will make a %s100 invoice %s50 instead.",
            "nullable": true,
            "type": "number"
          },
          "redeem_by": {
            "description": "Date after which the coupon can no longer be redeemed.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "times_redeemed": {
            "description": "Number of times this coupon has been applied to a customer.",
            "type": "integer"
          },
          "valid": {
            "description": "Taking account of the above properties, whether this coupon can still be applied to a customer.",
            "type": "boolean"
          }
        },
        "required": [
          "amount_off",
          "created",
          "currency",
          "duration",
          "duration_in_months",
          "id",
          "livemode",
          "max_redemptions",
          "metadata",
          "name",
          "object",
          "percent_off",
          "redeem_by",
          "times_redeemed",
          "valid"
        ],
        "title": "Coupon",
        "type": "object",
        "x-expandableFields": [
          "applies_to",
          "currency_options"
        ],
        "x-resourceId": "coupon",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/coupons"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/coupons"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/coupons/{coupon}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/coupons/{coupon}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/coupons/{coupon}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Coupon",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "coupon_applies_to",
            "coupon_currency_option"
          ]
        }
      },
      "coupon_applies_to": {
        "description": "",
        "properties": {
          "products": {
            "description": "A list of product IDs this coupon applies to",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "products"
        ],
        "title": "CouponAppliesTo",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AppliesTo",
          "in_class": "coupon"
        }
      },
      "coupon_currency_option": {
        "description": "",
        "properties": {
          "amount_off": {
            "description": "Amount (in the `currency` specified) that will be taken off the subtotal of any invoices for this customer.",
            "type": "integer"
          }
        },
        "required": [
          "amount_off"
        ],
        "title": "CouponCurrencyOption",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CurrencyOption",
          "in_class": "coupon"
        }
      },
      "credit_note": {
        "description": "Issue a credit note to adjust an invoice's amount after the invoice is finalized.\n\nRelated guide: [Credit Notes](https://stripe.com/docs/billing/invoices/credit-notes).",
        "properties": {
          "amount": {
            "description": "The integer amount in %s representing the total amount of the credit note, including tax.",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "ID of the customer.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "customer_balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer_balance_transaction"
              }
            ],
            "description": "Customer balance transaction related to this credit note.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer_balance_transaction"
                }
              ]
            }
          },
          "discount_amount": {
            "description": "The integer amount in %s representing the total amount of discount that was credited.",
            "type": "integer"
          },
          "discount_amounts": {
            "description": "The aggregate amounts calculated per discount for all line items.",
            "items": {
              "$ref": "#/components/schemas/discounts_resource_discount_amount"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "ID of the invoice.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          },
          "lines": {
            "description": "Line items that make up the credit note",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/credit_note_line_item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "CreditNoteLinesList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "memo": {
            "description": "Customer-facing text that appears on the credit note PDF.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "number": {
            "description": "A unique number that identifies this particular credit note and appears on the PDF of the credit note and its associated invoice.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "credit_note"
            ],
            "type": "string"
          },
          "out_of_band_amount": {
            "description": "Amount that was credited outside of Stripe.",
            "nullable": true,
            "type": "integer"
          },
          "pdf": {
            "description": "The link to download the PDF of the credit note.",
            "maxLength": 5000,
            "type": "string"
          },
          "reason": {
            "description": "Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`",
            "enum": [
              "duplicate",
              "fraudulent",
              "order_change",
              "product_unsatisfactory"
            ],
            "nullable": true,
            "type": "string"
          },
          "refund": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/refund"
              }
            ],
            "description": "Refund related to this credit note.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/refund"
                }
              ]
            }
          },
          "status": {
            "description": "Status of this credit note, one of `issued` or `void`. Learn more about [voiding credit notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).",
            "enum": [
              "issued",
              "void"
            ],
            "type": "string"
          },
          "subtotal": {
            "description": "The integer amount in %s representing the amount of the credit note, excluding exclusive tax and invoice level discounts.",
            "type": "integer"
          },
          "subtotal_excluding_tax": {
            "description": "The integer amount in %s representing the amount of the credit note, excluding all tax and invoice level discounts.",
            "nullable": true,
            "type": "integer"
          },
          "tax_amounts": {
            "description": "The aggregate amounts calculated per tax rate for all line items.",
            "items": {
              "$ref": "#/components/schemas/credit_note_tax_amount"
            },
            "type": "array"
          },
          "total": {
            "description": "The integer amount in %s representing the total amount of the credit note, including tax and all discount.",
            "type": "integer"
          },
          "total_excluding_tax": {
            "description": "The integer amount in %s representing the total amount of the credit note, excluding tax, but including discounts.",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "Type of this credit note, one of `pre_payment` or `post_payment`. A `pre_payment` credit note means it was issued when the invoice was open. A `post_payment` credit note means it was issued when the invoice was paid.",
            "enum": [
              "post_payment",
              "pre_payment"
            ],
            "type": "string"
          },
          "voided_at": {
            "description": "The time that the credit note was voided.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "customer",
          "customer_balance_transaction",
          "discount_amount",
          "discount_amounts",
          "id",
          "invoice",
          "lines",
          "livemode",
          "memo",
          "metadata",
          "number",
          "object",
          "out_of_band_amount",
          "pdf",
          "reason",
          "refund",
          "status",
          "subtotal",
          "subtotal_excluding_tax",
          "tax_amounts",
          "total",
          "total_excluding_tax",
          "type",
          "voided_at"
        ],
        "title": "CreditNote",
        "type": "object",
        "x-expandableFields": [
          "customer",
          "customer_balance_transaction",
          "discount_amounts",
          "invoice",
          "lines",
          "refund",
          "tax_amounts"
        ],
        "x-resourceId": "credit_note",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/credit_notes"
          },
          {
            "method_name": "preview",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/credit_notes/preview"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/credit_notes/{id}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/credit_notes"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/credit_notes/{id}"
          },
          {
            "method_name": "void_credit_note",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/credit_notes/{id}/void"
          },
          {
            "method_name": "preview_lines",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/credit_notes/preview/lines"
          }
        ],
        "x-stripeResource": {
          "class_name": "CreditNote",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "credit_note_tax_amount"
          ]
        }
      },
      "credit_note_line_item": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The integer amount in %s representing the gross amount being credited for this line item, excluding (exclusive) tax and discounts.",
            "type": "integer"
          },
          "amount_excluding_tax": {
            "description": "The integer amount in %s representing the amount being credited for this line item, excluding all tax and discounts.",
            "nullable": true,
            "type": "integer"
          },
          "description": {
            "description": "Description of the item being credited.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discount_amount": {
            "description": "The integer amount in %s representing the discount being credited for this line item.",
            "type": "integer"
          },
          "discount_amounts": {
            "description": "The amount of discount calculated per discount for this line item",
            "items": {
              "$ref": "#/components/schemas/discounts_resource_discount_amount"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice_line_item": {
            "description": "ID of the invoice line item being credited",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "credit_note_line_item"
            ],
            "type": "string"
          },
          "quantity": {
            "description": "The number of units of product being credited.",
            "nullable": true,
            "type": "integer"
          },
          "tax_amounts": {
            "description": "The amount of tax calculated per tax rate for this line item",
            "items": {
              "$ref": "#/components/schemas/credit_note_tax_amount"
            },
            "type": "array"
          },
          "tax_rates": {
            "description": "The tax rates which apply to the line item.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "type": "array"
          },
          "type": {
            "description": "The type of the credit note line item, one of `invoice_line_item` or `custom_line_item`. When the type is `invoice_line_item` there is an additional `invoice_line_item` property on the resource the value of which is the id of the credited line item on the invoice.",
            "enum": [
              "custom_line_item",
              "invoice_line_item"
            ],
            "type": "string"
          },
          "unit_amount": {
            "description": "The cost of each unit of product being credited.",
            "nullable": true,
            "type": "integer"
          },
          "unit_amount_decimal": {
            "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          },
          "unit_amount_excluding_tax": {
            "description": "The amount in %s representing the unit amount being credited for this line item, excluding all tax and discounts.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "amount_excluding_tax",
          "description",
          "discount_amount",
          "discount_amounts",
          "id",
          "livemode",
          "object",
          "quantity",
          "tax_amounts",
          "tax_rates",
          "type",
          "unit_amount",
          "unit_amount_decimal",
          "unit_amount_excluding_tax"
        ],
        "title": "CreditNoteLineItem",
        "type": "object",
        "x-expandableFields": [
          "discount_amounts",
          "tax_amounts",
          "tax_rates"
        ],
        "x-resourceId": "credit_note_line_item",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/credit_notes/{credit_note}/lines"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/credit_notes/{credit_note}/lines"
          }
        ],
        "x-stripeResource": {
          "class_name": "CreditNoteLineItem",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "credit_note_tax_amount": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount, in %s, of the tax.",
            "type": "integer"
          },
          "inclusive": {
            "description": "Whether this tax amount is inclusive or exclusive.",
            "type": "boolean"
          },
          "tax_rate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/tax_rate"
              }
            ],
            "description": "The tax rate that was applied to get this tax amount.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/tax_rate"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "inclusive",
          "tax_rate"
        ],
        "title": "CreditNoteTaxAmount",
        "type": "object",
        "x-expandableFields": [
          "tax_rate"
        ],
        "x-stripeResource": {
          "class_name": "TaxAmount",
          "in_class": "credit_note"
        }
      },
      "currency_option": {
        "description": "",
        "properties": {
          "custom_unit_amount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/custom_unit_amount"
              }
            ],
            "description": "When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.",
            "nullable": true
          },
          "tax_behavior": {
            "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "nullable": true,
            "type": "string"
          },
          "tiers": {
            "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
            "items": {
              "$ref": "#/components/schemas/price_tier"
            },
            "type": "array"
          },
          "unit_amount": {
            "description": "The unit amount in %s to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
            "nullable": true,
            "type": "integer"
          },
          "unit_amount_decimal": {
            "description": "The unit amount in %s to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "custom_unit_amount",
          "tax_behavior",
          "unit_amount",
          "unit_amount_decimal"
        ],
        "title": "CurrencyOption",
        "type": "object",
        "x-expandableFields": [
          "custom_unit_amount",
          "tiers"
        ],
        "x-stripeResource": {
          "class_name": "CurrencyOption",
          "in_class": "price"
        }
      },
      "custom_unit_amount": {
        "description": "",
        "properties": {
          "maximum": {
            "description": "The maximum unit amount the customer can specify for this item.",
            "nullable": true,
            "type": "integer"
          },
          "minimum": {
            "description": "The minimum unit amount the customer can specify for this item. Must be at least the minimum charge amount.",
            "nullable": true,
            "type": "integer"
          },
          "preset": {
            "description": "The starting unit amount which can be updated by the customer.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "maximum",
          "minimum",
          "preset"
        ],
        "title": "CustomUnitAmount",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CustomUnitAmount",
          "in_class": "price"
        }
      },
      "customer": {
        "description": "This object represents a customer of your business. It lets you create recurring charges and track payments that belong to the same customer.\n\nRelated guide: [Save a card during payment](https://stripe.com/docs/payments/save-during-payment).",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "The customer's address.",
            "nullable": true
          },
          "balance": {
            "description": "Current balance, if any, being stored on the customer. If negative, the customer has credit to apply to their next invoice. If positive, the customer has an amount owed that will be added to their next invoice. The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice. This balance is only taken into account as invoices are finalized.",
            "type": "integer"
          },
          "cash_balance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/cash_balance"
              }
            ],
            "description": "The current funds being held by Stripe on behalf of the customer. These funds can be applied towards payment intents with source \"cash_balance\". The settings[reconciliation_mode] field describes whether these funds are applied to such payment intents manually or automatically.",
            "nullable": true
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) the customer can be charged in for recurring billing purposes.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "default_source": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_source"
              }
            ],
            "description": "ID of the default payment source for the customer.\n\nIf you are using payment methods created via the PaymentMethods API, see the [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) field instead.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_source"
                }
              ]
            }
          },
          "delinquent": {
            "description": "When the customer's latest invoice is billed by charging automatically, `delinquent` is `true` if the invoice's latest charge failed. When the customer's latest invoice is billed by sending an invoice, `delinquent` is `true` if the invoice isn't paid by its due date.\n\nIf an invoice is marked uncollectible by [dunning](https://stripe.com/docs/billing/automatic-collection), `delinquent` doesn't get reset to `false`.",
            "nullable": true,
            "type": "boolean"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/discount"
              }
            ],
            "description": "Describes the current discount active on the customer, if there is one.",
            "nullable": true
          },
          "email": {
            "description": "The customer's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice_credit_balance": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "The current multi-currency balances, if any, being stored on the customer. If positive in a currency, the customer has a credit to apply to their next invoice denominated in that currency. If negative, the customer has an amount owed that will be added to their next invoice denominated in that currency. These balances do not refer to any unpaid invoices. They solely track amounts that have yet to be successfully applied to any invoice. A balance in a particular currency is only applied to any invoice as an invoice in that currency is finalized.",
            "type": "object"
          },
          "invoice_prefix": {
            "description": "The prefix for the customer used to generate unique invoice numbers.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "invoice_settings": {
            "$ref": "#/components/schemas/invoice_setting_customer_setting"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "name": {
            "description": "The customer's full name or business name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "next_invoice_sequence": {
            "description": "The suffix of the customer's next invoice number, e.g., 0001.",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "customer"
            ],
            "type": "string"
          },
          "phone": {
            "description": "The customer's phone number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_locales": {
            "description": "The customer's preferred locales (languages), ordered by preference.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "shipping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping"
              }
            ],
            "description": "Mailing and shipping address for the customer. Appears on invoices emailed to this customer.",
            "nullable": true
          },
          "sources": {
            "description": "The customer's payment sources, if any.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/payment_source"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "ApmsSourcesSourceList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "subscriptions": {
            "description": "The customer's current subscriptions, if any.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/subscription"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "SubscriptionList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "tax": {
            "$ref": "#/components/schemas/customer_tax"
          },
          "tax_exempt": {
            "description": "Describes the customer's tax exemption status. One of `none`, `exempt`, or `reverse`. When set to `reverse`, invoice and receipt PDFs include the text **\"Reverse charge\"**.",
            "enum": [
              "exempt",
              "none",
              "reverse"
            ],
            "nullable": true,
            "type": "string"
          },
          "tax_ids": {
            "description": "The customer's tax IDs.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/tax_id"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "TaxIDsList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "test_clock": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/test_helpers.test_clock"
              }
            ],
            "description": "ID of the test clock this customer belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ]
            }
          }
        },
        "required": [
          "created",
          "default_source",
          "description",
          "email",
          "id",
          "livemode",
          "object",
          "shipping"
        ],
        "title": "Customer",
        "type": "object",
        "x-expandableFields": [
          "address",
          "cash_balance",
          "default_source",
          "discount",
          "invoice_settings",
          "shipping",
          "sources",
          "subscriptions",
          "tax",
          "tax_ids",
          "test_clock"
        ],
        "x-resourceId": "customer",
        "x-stripeOperations": [
          {
            "method_name": "search",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/customers/search"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/customers"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/customers"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/customers/{customer}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/customers/{customer}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/customers/{customer}"
          },
          {
            "method_name": "list_payment_methods",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/customers/{customer}/payment_methods"
          },
          {
            "method_name": "retrieve_payment_method",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/customers/{customer}/payment_methods/{payment_method}"
          },
          {
            "method_name": "balance_transactions",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/customers/{customer}/balance_transactions"
          },
          {
            "method_name": "fund_cash_balance",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/customers/{customer}/fund_cash_balance"
          },
          {
            "method_name": "create_funding_instructions",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/customers/{customer}/funding_instructions"
          },
          {
            "method_name": "delete_discount",
            "method_on": "service",
            "method_type": "custom",
            "operation": "delete",
            "path": "/v1/customers/{customer}/discount"
          }
        ],
        "x-stripeResource": {
          "class_name": "Customer",
          "has_collection_class": true,
          "has_search_result_class": true,
          "in_package": "",
          "inner_classes": [
            "customer_tax",
            "invoice_setting_customer_setting"
          ]
        }
      },
      "customer_acceptance": {
        "description": "",
        "properties": {
          "accepted_at": {
            "description": "The time at which the customer accepted the Mandate.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "offline": {
            "$ref": "#/components/schemas/offline_acceptance"
          },
          "online": {
            "$ref": "#/components/schemas/online_acceptance"
          },
          "type": {
            "description": "The type of customer acceptance information included with the Mandate. One of `online` or `offline`.",
            "enum": [
              "offline",
              "online"
            ],
            "type": "string"
          }
        },
        "required": [
          "accepted_at",
          "type"
        ],
        "title": "customer_acceptance",
        "type": "object",
        "x-expandableFields": [
          "offline",
          "online"
        ],
        "x-stripeResource": {
          "class_name": "CustomerAcceptance",
          "in_class": "mandate",
          "inner_classes": [
            "offline_acceptance",
            "online_acceptance"
          ]
        }
      },
      "customer_balance_customer_balance_settings": {
        "description": "",
        "properties": {
          "reconciliation_mode": {
            "description": "The configuration for how funds that land in the customer cash balance are reconciled.",
            "enum": [
              "automatic",
              "manual"
            ],
            "type": "string"
          }
        },
        "required": [
          "reconciliation_mode"
        ],
        "title": "CustomerBalanceCustomerBalanceSettings",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BalanceSettings",
          "in_class": "cash_balance"
        }
      },
      "customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction": {
        "description": "",
        "properties": {
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "The [Payment Intent](https://stripe.com/docs/api/payment_intents/object) that funds were applied to.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          }
        },
        "required": [
          "payment_intent"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceAppliedToPaymentTransaction",
        "type": "object",
        "x-expandableFields": [
          "payment_intent"
        ],
        "x-stripeResource": {
          "class_name": "AppliedToPayment",
          "in_class": "customer_cash_balance_transaction"
        }
      },
      "customer_balance_resource_cash_balance_transaction_resource_funded_transaction": {
        "description": "",
        "properties": {
          "bank_transfer": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer"
          }
        },
        "required": [
          "bank_transfer"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransaction",
        "type": "object",
        "x-expandableFields": [
          "bank_transfer"
        ],
        "x-stripeResource": {
          "class_name": "Funded",
          "in_class": "customer_cash_balance_transaction",
          "inner_classes": [
            "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer"
          ]
        }
      },
      "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer": {
        "description": "",
        "properties": {
          "eu_bank_transfer": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer"
          },
          "reference": {
            "description": "The user-supplied reference field on the bank transfer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The funding method type used to fund the customer balance. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, or `mx_bank_transfer`.",
            "enum": [
              "eu_bank_transfer",
              "gb_bank_transfer",
              "jp_bank_transfer",
              "mx_bank_transfer"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "reference",
          "type"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransfer",
        "type": "object",
        "x-expandableFields": [
          "eu_bank_transfer"
        ],
        "x-stripeResource": {
          "class_name": "BankTransfer",
          "in_class": "customer_balance_resource_cash_balance_transaction_resource_funded_transaction",
          "inner_classes": [
            "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer"
          ]
        }
      },
      "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer_resource_eu_bank_transfer": {
        "description": "",
        "properties": {
          "bic": {
            "description": "The BIC of the bank of the sender of the funding.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "iban_last4": {
            "description": "The last 4 digits of the IBAN of the sender of the funding.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sender_name": {
            "description": "The full name of the sender, as supplied by the sending bank.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bic",
          "iban_last4",
          "sender_name"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceEuBankTransfer",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "EuBankTransfer",
          "in_class": "customer_balance_resource_cash_balance_transaction_resource_funded_transaction_resource_bank_transfer"
        }
      },
      "customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction": {
        "description": "",
        "properties": {
          "refund": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/refund"
              }
            ],
            "description": "The [Refund](https://stripe.com/docs/api/refunds/object) that moved these funds into the customer's cash balance.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/refund"
                }
              ]
            }
          }
        },
        "required": [
          "refund"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceRefundedFromPaymentTransaction",
        "type": "object",
        "x-expandableFields": [
          "refund"
        ],
        "x-stripeResource": {
          "class_name": "RefundedFromPayment",
          "in_class": "customer_cash_balance_transaction"
        }
      },
      "customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction": {
        "description": "",
        "properties": {
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "The [Payment Intent](https://stripe.com/docs/api/payment_intents/object) that funds were unapplied from.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          }
        },
        "required": [
          "payment_intent"
        ],
        "title": "CustomerBalanceResourceCashBalanceTransactionResourceUnappliedFromPaymentTransaction",
        "type": "object",
        "x-expandableFields": [
          "payment_intent"
        ],
        "x-stripeResource": {
          "class_name": "UnappliedFromPayment",
          "in_class": "customer_cash_balance_transaction"
        }
      },
      "customer_balance_transaction": {
        "description": "Each customer has a [`balance`](https://stripe.com/docs/api/customers/object#customer_object-balance) value,\nwhich denotes a debit or credit that's automatically applied to their next invoice upon finalization.\nYou may modify the value directly by using the [update customer API](https://stripe.com/docs/api/customers/update),\nor by creating a Customer Balance Transaction, which increments or decrements the customer's `balance` by the specified `amount`.\n\nRelated guide: [Customer Balance](https://stripe.com/docs/billing/customer/balance) to learn more.",
        "properties": {
          "amount": {
            "description": "The amount of the transaction. A negative value is a credit for the customer's balance, and a positive value is a debit to the customer's `balance`.",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "credit_note": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/credit_note"
              }
            ],
            "description": "The ID of the credit note (if any) related to the transaction.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/credit_note"
                }
              ]
            }
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              }
            ],
            "description": "The ID of the customer the transaction belongs to.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                }
              ]
            }
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "ending_balance": {
            "description": "The customer's `balance` after the transaction was applied. A negative value decreases the amount due on the customer's next invoice. A positive value increases the amount due on the customer's next invoice.",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "The ID of the invoice (if any) related to the transaction.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "customer_balance_transaction"
            ],
            "type": "string"
          },
          "type": {
            "description": "Transaction type: `adjustment`, `applied_to_invoice`, `credit_note`, `initial`, `invoice_too_large`, `invoice_too_small`, `unspent_receiver_credit`, or `unapplied_from_invoice`. See the [Customer Balance page](https://stripe.com/docs/billing/customer/balance#types) to learn more about transaction types.",
            "enum": [
              "adjustment",
              "applied_to_invoice",
              "credit_note",
              "initial",
              "invoice_too_large",
              "invoice_too_small",
              "migration",
              "unapplied_from_invoice",
              "unspent_receiver_credit"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "created",
          "credit_note",
          "currency",
          "customer",
          "description",
          "ending_balance",
          "id",
          "invoice",
          "livemode",
          "metadata",
          "object",
          "type"
        ],
        "title": "CustomerBalanceTransaction",
        "type": "object",
        "x-expandableFields": [
          "credit_note",
          "customer",
          "invoice"
        ],
        "x-resourceId": "customer_balance_transaction",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "collection",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/customers/{customer}/balance_transactions/{transaction}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/customers/{customer}/balance_transactions/{transaction}"
          },
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/customers/{customer}/balance_transactions"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/customers/{customer}/balance_transactions"
          },
          {
            "method_name": "create",
            "method_on": "collection",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/customers/{customer}/balance_transactions"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/customers/{customer}/balance_transactions"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/customers/{customer}/balance_transactions/{transaction}"
          }
        ],
        "x-stripeResource": {
          "class_name": "CustomerBalanceTransaction",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "customer_cash_balance_transaction": {
        "description": "Customers with certain payments enabled have a cash balance, representing funds that were paid\nby the customer to a merchant, but have not yet been allocated to a payment. Cash Balance Transactions\nrepresent when funds are moved into or out of this balance. This includes funding by the customer, allocation\nto payments, and refunds to the customer.",
        "properties": {
          "applied_to_payment": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "maxLength": 5000,
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              }
            ],
            "description": "The customer whose available cash balance changed as a result of this transaction.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                }
              ]
            }
          },
          "ending_balance": {
            "description": "The total available cash balance for the specified currency after this transaction was applied. Represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "funded": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_funded_transaction"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "net_amount": {
            "description": "The amount by which the cash balance changed, represented in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). A positive value represents funds being added to the cash balance, a negative value represents funds being removed from the cash balance.",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "customer_cash_balance_transaction"
            ],
            "type": "string"
          },
          "refunded_from_payment": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction"
          },
          "type": {
            "description": "The type of the cash balance transaction. One of `applied_to_payment`, `unapplied_from_payment`, `refunded_from_payment`, `funded`, `return_initiated`, or `return_canceled`. New types may be added in future. See [Customer Balance](https://stripe.com/docs/payments/customer-balance#types) to learn more about these types.",
            "enum": [
              "applied_to_payment",
              "funded",
              "refunded_from_payment",
              "return_canceled",
              "return_initiated",
              "unapplied_from_payment"
            ],
            "type": "string"
          },
          "unapplied_from_payment": {
            "$ref": "#/components/schemas/customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction"
          }
        },
        "required": [
          "created",
          "currency",
          "customer",
          "ending_balance",
          "id",
          "livemode",
          "net_amount",
          "object",
          "type"
        ],
        "title": "CustomerCashBalanceTransaction",
        "type": "object",
        "x-expandableFields": [
          "applied_to_payment",
          "customer",
          "funded",
          "refunded_from_payment",
          "unapplied_from_payment"
        ],
        "x-resourceId": "customer_cash_balance_transaction",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "collection",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/customers/{customer}/cash_balance_transactions/{transaction}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/customers/{customer}/cash_balance_transactions/{transaction}"
          },
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/customers/{customer}/cash_balance_transactions"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/customers/{customer}/cash_balance_transactions"
          }
        ],
        "x-stripeResource": {
          "class_name": "CustomerCashBalanceTransaction",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "customer_balance_resource_cash_balance_transaction_resource_applied_to_payment_transaction",
            "customer_balance_resource_cash_balance_transaction_resource_funded_transaction",
            "customer_balance_resource_cash_balance_transaction_resource_refunded_from_payment_transaction",
            "customer_balance_resource_cash_balance_transaction_resource_unapplied_from_payment_transaction"
          ]
        }
      },
      "customer_tax": {
        "description": "",
        "properties": {
          "automatic_tax": {
            "description": "Surfaces if automatic tax computation is possible given the current customer location information.",
            "enum": [
              "failed",
              "not_collecting",
              "supported",
              "unrecognized_location"
            ],
            "type": "string"
          },
          "ip_address": {
            "description": "A recent IP address of the customer used for tax reporting and tax location inference.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/customer_tax_location"
              }
            ],
            "description": "The customer's location as identified by Stripe Tax.",
            "nullable": true
          }
        },
        "required": [
          "automatic_tax",
          "ip_address",
          "location"
        ],
        "title": "CustomerTax",
        "type": "object",
        "x-expandableFields": [
          "location"
        ],
        "x-stripeResource": {
          "class_name": "Tax",
          "in_class": "customer",
          "inner_classes": [
            "customer_tax_location"
          ]
        }
      },
      "customer_tax_location": {
        "description": "",
        "properties": {
          "country": {
            "description": "The customer's country as identified by Stripe Tax.",
            "maxLength": 5000,
            "type": "string"
          },
          "source": {
            "description": "The data source used to infer the customer's location.",
            "enum": [
              "billing_address",
              "ip_address",
              "payment_method",
              "shipping_destination"
            ],
            "type": "string"
          },
          "state": {
            "description": "The customer's state, county, province, or region as identified by Stripe Tax.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "country",
          "source",
          "state"
        ],
        "title": "CustomerTaxLocation",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Location",
          "in_class": "customer_tax"
        }
      },
      "deleted_account": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "account"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedAccount",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_account",
        "x-stripeResource": {
          "class_name": "DeletedAccount",
          "in_package": ""
        }
      },
      "deleted_apple_pay_domain": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "apple_pay_domain"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedApplePayDomain",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_apple_pay_domain",
        "x-stripeResource": {
          "class_name": "DeletedApplePayDomain",
          "in_package": ""
        }
      },
      "deleted_application": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "name": {
            "description": "The name of the application.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "application"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "name",
          "object"
        ],
        "title": "DeletedApplication",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DeletedApplication",
          "in_package": ""
        }
      },
      "deleted_bank_account": {
        "description": "",
        "properties": {
          "currency": {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "bank_account"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedBankAccount",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DeletedBankAccount",
          "in_package": ""
        }
      },
      "deleted_card": {
        "description": "",
        "properties": {
          "currency": {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/payouts) paid out to the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "card"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedCard",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DeletedCard",
          "in_package": ""
        }
      },
      "deleted_coupon": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "coupon"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedCoupon",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_coupon",
        "x-stripeResource": {
          "class_name": "DeletedCoupon",
          "in_package": ""
        }
      },
      "deleted_customer": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "customer"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedCustomer",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_customer",
        "x-stripeResource": {
          "class_name": "DeletedCustomer",
          "in_package": ""
        }
      },
      "deleted_discount": {
        "description": "",
        "properties": {
          "checkout_session": {
            "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "coupon": {
            "$ref": "#/components/schemas/coupon"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The ID of the customer associated with this discount.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "invoice_item": {
            "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "discount"
            ],
            "type": "string"
          },
          "promotion_code": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/promotion_code"
              }
            ],
            "description": "The promotion code applied to create this discount.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/promotion_code"
                }
              ]
            }
          },
          "start": {
            "description": "Date that the coupon was applied.",
            "format": "unix-time",
            "type": "integer"
          },
          "subscription": {
            "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "checkout_session",
          "coupon",
          "customer",
          "deleted",
          "id",
          "invoice",
          "invoice_item",
          "object",
          "promotion_code",
          "start",
          "subscription"
        ],
        "title": "DeletedDiscount",
        "type": "object",
        "x-expandableFields": [
          "coupon",
          "customer",
          "promotion_code"
        ],
        "x-resourceId": "deleted_discount",
        "x-stripeResource": {
          "class_name": "DeletedDiscount",
          "in_package": ""
        }
      },
      "deleted_external_account": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/deleted_bank_account"
          },
          {
            "$ref": "#/components/schemas/deleted_card"
          }
        ],
        "title": "Polymorphic",
        "x-resourceId": "deleted_external_account",
        "x-stripeBypassValidation": true,
        "x-stripeResource": {
          "class_name": "DeletedExternalAccount"
        }
      },
      "deleted_invoice": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "invoice"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedInvoice",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_invoice",
        "x-stripeResource": {
          "class_name": "DeletedInvoice",
          "in_package": ""
        }
      },
      "deleted_invoiceitem": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "invoiceitem"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedInvoiceItem",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_invoiceitem",
        "x-stripeResource": {
          "class_name": "DeletedInvoiceItem",
          "in_package": ""
        }
      },
      "deleted_payment_source": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/deleted_bank_account"
          },
          {
            "$ref": "#/components/schemas/deleted_card"
          }
        ],
        "title": "Polymorphic",
        "x-resourceId": "deleted_payment_source",
        "x-stripeBypassValidation": true,
        "x-stripeResource": {
          "class_name": "DeletedPaymentSource"
        }
      },
      "deleted_person": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "person"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedPerson",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_person",
        "x-stripeResource": {
          "class_name": "DeletedPerson",
          "in_package": ""
        }
      },
      "deleted_plan": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "plan"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedPlan",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_plan",
        "x-stripeResource": {
          "class_name": "DeletedPlan",
          "in_package": ""
        }
      },
      "deleted_price": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "price"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedPrice",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DeletedPrice",
          "in_package": ""
        }
      },
      "deleted_product": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "product"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedProduct",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_product",
        "x-stripeResource": {
          "class_name": "DeletedProduct",
          "in_package": ""
        }
      },
      "deleted_radar.value_list": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "radar.value_list"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "RadarListDeletedList",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_radar.value_list",
        "x-stripeResource": {
          "class_name": "DeletedValueList",
          "in_package": "Radar"
        }
      },
      "deleted_radar.value_list_item": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "radar.value_list_item"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "RadarListDeletedListItem",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_radar.value_list_item",
        "x-stripeResource": {
          "class_name": "DeletedValueListItem",
          "in_package": "Radar"
        }
      },
      "deleted_sku": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "sku"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedSku",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_sku",
        "x-stripeResource": {
          "class_name": "DeletedSku",
          "in_package": ""
        }
      },
      "deleted_subscription_item": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "subscription_item"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedSubscriptionItem",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_subscription_item",
        "x-stripeResource": {
          "class_name": "DeletedSubscriptionItem",
          "in_package": ""
        }
      },
      "deleted_tax_id": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "tax_id"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "deleted_tax_id",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_tax_id",
        "x-stripeResource": {
          "class_name": "DeletedTaxId",
          "in_package": ""
        }
      },
      "deleted_terminal.configuration": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "terminal.configuration"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "TerminalConfigurationDeletedConfiguration",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_terminal.configuration",
        "x-stripeResource": {
          "class_name": "DeletedConfiguration",
          "in_package": "Terminal"
        }
      },
      "deleted_terminal.location": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "terminal.location"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "TerminalLocationDeletedLocation",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_terminal.location",
        "x-stripeResource": {
          "class_name": "DeletedLocation",
          "in_package": "Terminal"
        }
      },
      "deleted_terminal.reader": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "terminal.reader"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "TerminalReaderDeletedReader",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_terminal.reader",
        "x-stripeResource": {
          "class_name": "DeletedReader",
          "in_package": "Terminal"
        }
      },
      "deleted_test_helpers.test_clock": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "test_helpers.test_clock"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "DeletedTestClock",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_test_helpers.test_clock",
        "x-stripeResource": {
          "class_name": "DeletedTestClock",
          "in_package": "TestHelpers"
        }
      },
      "deleted_webhook_endpoint": {
        "description": "",
        "properties": {
          "deleted": {
            "description": "Always true for a deleted object",
            "enum": [
              true
            ],
            "type": "boolean"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "webhook_endpoint"
            ],
            "type": "string"
          }
        },
        "required": [
          "deleted",
          "id",
          "object"
        ],
        "title": "NotificationWebhookEndpointDeleted",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "deleted_webhook_endpoint",
        "x-stripeResource": {
          "class_name": "DeletedWebhookEndpoint",
          "in_package": ""
        }
      },
      "discount": {
        "description": "A discount represents the actual application of a [coupon](https://stripe.com/docs/api#coupons) or [promotion code](https://stripe.com/docs/api#promotion_codes).\nIt contains information about when the discount began, when it will end, and what it is applied to.\n\nRelated guide: [Applying Discounts to Subscriptions](https://stripe.com/docs/billing/subscriptions/discounts).",
        "properties": {
          "checkout_session": {
            "description": "The Checkout session that this coupon is applied to, if it is applied to a particular session in payment mode. Will not be present for subscription mode.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "coupon": {
            "$ref": "#/components/schemas/coupon"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The ID of the customer associated with this discount.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "end": {
            "description": "If the coupon has a duration of `repeating`, the date that this discount will end. If the coupon has a duration of `once` or `forever`, this attribute will be null.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "The ID of the discount object. Discounts cannot be fetched by ID. Use `expand[]=discounts` in API calls to expand discount IDs in an array.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "description": "The invoice that the discount's coupon was applied to, if it was applied directly to a particular invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "invoice_item": {
            "description": "The invoice item `id` (or invoice line item `id` for invoice line items of type='subscription') that the discount's coupon was applied to, if it was applied directly to a particular invoice item or invoice line item.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "discount"
            ],
            "type": "string"
          },
          "promotion_code": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/promotion_code"
              }
            ],
            "description": "The promotion code applied to create this discount.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/promotion_code"
                }
              ]
            }
          },
          "start": {
            "description": "Date that the coupon was applied.",
            "format": "unix-time",
            "type": "integer"
          },
          "subscription": {
            "description": "The subscription that this coupon is applied to, if it is applied to a particular subscription.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "checkout_session",
          "coupon",
          "customer",
          "end",
          "id",
          "invoice",
          "invoice_item",
          "object",
          "promotion_code",
          "start",
          "subscription"
        ],
        "title": "Discount",
        "type": "object",
        "x-expandableFields": [
          "coupon",
          "customer",
          "promotion_code"
        ],
        "x-stripeResource": {
          "class_name": "Discount",
          "in_package": ""
        }
      },
      "discounts_resource_discount_amount": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount, in %s, of the discount.",
            "type": "integer"
          },
          "discount": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/discount"
              },
              {
                "$ref": "#/components/schemas/deleted_discount"
              }
            ],
            "description": "The discount that was applied to get this discount amount.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/discount"
                },
                {
                  "$ref": "#/components/schemas/deleted_discount"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "discount"
        ],
        "title": "DiscountsResourceDiscountAmount",
        "type": "object",
        "x-expandableFields": [
          "discount"
        ],
        "x-stripeResource": {
          "class_name": "DiscountAmount",
          "in_package": ""
        }
      },
      "dispute": {
        "description": "A dispute occurs when a customer questions your charge with their card issuer.\nWhen this happens, you're given the opportunity to respond to the dispute with\nevidence that shows that the charge is legitimate. You can find more\ninformation about the dispute process in our [Disputes and\nFraud](/docs/disputes) documentation.\n\nRelated guide: [Disputes and Fraud](https://stripe.com/docs/disputes).",
        "properties": {
          "amount": {
            "description": "Disputed amount. Usually the amount of the charge, but can differ (usually because of currency fluctuation or because only part of the order is disputed).",
            "type": "integer"
          },
          "balance_transactions": {
            "description": "List of zero, one, or two balance transactions that show funds withdrawn and reinstated to your Stripe account as a result of this dispute.",
            "items": {
              "$ref": "#/components/schemas/balance_transaction"
            },
            "type": "array"
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the charge that was disputed.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "evidence": {
            "$ref": "#/components/schemas/dispute_evidence"
          },
          "evidence_details": {
            "$ref": "#/components/schemas/dispute_evidence_details"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "is_charge_refundable": {
            "description": "If true, it is still possible to refund the disputed payment. Once the payment has been fully refunded, no further funds will be withdrawn from your Stripe account as a result of this dispute.",
            "type": "boolean"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "network_reason_code": {
            "description": "Network-dependent reason code for the dispute.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "dispute"
            ],
            "type": "string"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "ID of the PaymentIntent that was disputed.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "reason": {
            "description": "Reason given by cardholder for dispute. Possible values are `bank_cannot_process`, `check_returned`, `credit_not_processed`, `customer_initiated`, `debit_not_authorized`, `duplicate`, `fraudulent`, `general`, `incorrect_account_details`, `insufficient_funds`, `product_not_received`, `product_unacceptable`, `subscription_canceled`, or `unrecognized`. Read more about [dispute reasons](https://stripe.com/docs/disputes/categories).",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "Current status of dispute. Possible values are `warning_needs_response`, `warning_under_review`, `warning_closed`, `needs_response`, `under_review`, `charge_refunded`, `won`, or `lost`.",
            "enum": [
              "charge_refunded",
              "lost",
              "needs_response",
              "under_review",
              "warning_closed",
              "warning_needs_response",
              "warning_under_review",
              "won"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "balance_transactions",
          "charge",
          "created",
          "currency",
          "evidence",
          "evidence_details",
          "id",
          "is_charge_refundable",
          "livemode",
          "metadata",
          "object",
          "payment_intent",
          "reason",
          "status"
        ],
        "title": "Dispute",
        "type": "object",
        "x-expandableFields": [
          "balance_transactions",
          "charge",
          "evidence",
          "evidence_details",
          "payment_intent"
        ],
        "x-resourceId": "dispute",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/disputes"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/disputes/{dispute}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/disputes/{dispute}"
          },
          {
            "method_name": "close",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/disputes/{dispute}/close"
          }
        ],
        "x-stripeResource": {
          "class_name": "Dispute",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "dispute_evidence",
            "dispute_evidence_details"
          ],
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "dispute_evidence": {
        "description": "",
        "properties": {
          "access_activity_log": {
            "description": "Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "billing_address": {
            "description": "The billing address provided by the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cancellation_policy": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your subscription cancellation policy, as shown to the customer.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "cancellation_policy_disclosure": {
            "description": "An explanation of how and when the customer was shown your refund policy prior to purchase.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "cancellation_rebuttal": {
            "description": "A justification for why the customer's subscription was not canceled.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "customer_communication": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "customer_email_address": {
            "description": "The email address of the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_name": {
            "description": "The name of the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_purchase_ip": {
            "description": "The IP address that the customer used when making the purchase.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_signature": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant document or contract showing the customer's signature.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "duplicate_charge_documentation": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "duplicate_charge_explanation": {
            "description": "An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "duplicate_charge_id": {
            "description": "The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "product_description": {
            "description": "A description of the product or service that was sold.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "receipt": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any receipt or message sent to the customer notifying them of the charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "refund_policy": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "refund_policy_disclosure": {
            "description": "Documentation demonstrating that the customer was shown your refund policy prior to purchase.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "refund_refusal_explanation": {
            "description": "A justification for why the customer is not entitled to a refund.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          },
          "service_date": {
            "description": "The date on which the customer received or began receiving the purchased service, in a clear human-readable format.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "service_documentation": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "shipping_address": {
            "description": "The address to which a physical product was shipped. You should try to include as complete address information as possible.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_carrier": {
            "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_date": {
            "description": "The date on which a physical product began its route to the shipping address, in a clear human-readable format.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_documentation": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "shipping_tracking_number": {
            "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "uncategorized_file": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "uncategorized_text": {
            "description": "Any additional evidence or statements.",
            "maxLength": 150000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "access_activity_log",
          "billing_address",
          "cancellation_policy",
          "cancellation_policy_disclosure",
          "cancellation_rebuttal",
          "customer_communication",
          "customer_email_address",
          "customer_name",
          "customer_purchase_ip",
          "customer_signature",
          "duplicate_charge_documentation",
          "duplicate_charge_explanation",
          "duplicate_charge_id",
          "product_description",
          "receipt",
          "refund_policy",
          "refund_policy_disclosure",
          "refund_refusal_explanation",
          "service_date",
          "service_documentation",
          "shipping_address",
          "shipping_carrier",
          "shipping_date",
          "shipping_documentation",
          "shipping_tracking_number",
          "uncategorized_file",
          "uncategorized_text"
        ],
        "title": "DisputeEvidence",
        "type": "object",
        "x-expandableFields": [
          "cancellation_policy",
          "customer_communication",
          "customer_signature",
          "duplicate_charge_documentation",
          "receipt",
          "refund_policy",
          "service_documentation",
          "shipping_documentation",
          "uncategorized_file"
        ],
        "x-stripeResource": {
          "class_name": "Evidence",
          "in_class": "dispute"
        }
      },
      "dispute_evidence_details": {
        "description": "",
        "properties": {
          "due_by": {
            "description": "Date by which evidence must be submitted in order to successfully challenge dispute. Will be null if the customer's bank or credit card company doesn't allow a response for this particular dispute.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "has_evidence": {
            "description": "Whether evidence has been staged for this dispute.",
            "type": "boolean"
          },
          "past_due": {
            "description": "Whether the last evidence submission was submitted past the due date. Defaults to `false` if no evidence submissions have occurred. If `true`, then delivery of the latest evidence is *not* guaranteed.",
            "type": "boolean"
          },
          "submission_count": {
            "description": "The number of times evidence has been submitted. Typically, you may only submit evidence once.",
            "type": "integer"
          }
        },
        "required": [
          "due_by",
          "has_evidence",
          "past_due",
          "submission_count"
        ],
        "title": "DisputeEvidenceDetails",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "EvidenceDetails",
          "in_class": "dispute"
        }
      },
      "email_sent": {
        "description": "",
        "properties": {
          "email_sent_at": {
            "description": "The timestamp when the email was sent.",
            "format": "unix-time",
            "type": "integer"
          },
          "email_sent_to": {
            "description": "The recipient's email address.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "email_sent_at",
          "email_sent_to"
        ],
        "title": "EmailSent",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "EmailSent",
          "in_class": "refund_next_action_display_details"
        }
      },
      "ephemeral_key": {
        "description": "",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "expires": {
            "description": "Time at which the key will expire. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "ephemeral_key"
            ],
            "type": "string"
          },
          "secret": {
            "description": "The key's secret. You can use this value to make authorized requests to the Stripe API.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "created",
          "expires",
          "id",
          "livemode",
          "object"
        ],
        "title": "EphemeralKey",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "ephemeral_key",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/ephemeral_keys"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/ephemeral_keys/{key}"
          }
        ],
        "x-stripeResource": {
          "class_name": "EphemeralKey",
          "in_package": ""
        }
      },
      "error": {
        "description": "An error response from the Stripe API",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/api_errors"
          }
        },
        "required": [
          "error"
        ],
        "type": "object",
        "x-stripeResource": {
          "class_name": "StripeErrorResponse",
          "in_package": ""
        }
      },
      "event": {
        "description": "Events are our way of letting you know when something interesting happens in\nyour account. When an interesting event occurs, we create a new `Event`\nobject. For example, when a charge succeeds, we create a `charge.succeeded`\nevent; and when an invoice payment attempt fails, we create an\n`invoice.payment_failed` event. Note that many API requests may cause multiple\nevents to be created. For example, if you create a new subscription for a\ncustomer, you will receive both a `customer.subscription.created` event and a\n`charge.succeeded` event.\n\nEvents occur when the state of another API resource changes. The state of that\nresource at the time of the change is embedded in the event's data field. For\nexample, a `charge.succeeded` event will contain a charge, and an\n`invoice.payment_failed` event will contain an invoice.\n\nAs with other API resources, you can use endpoints to retrieve an\n[individual event](https://stripe.com/docs/api#retrieve_event) or a [list of events](https://stripe.com/docs/api#list_events)\nfrom the API. We also have a separate\n[webhooks](http://en.wikipedia.org/wiki/Webhook) system for sending the\n`Event` objects directly to an endpoint on your server. Webhooks are managed\nin your\n[account settings](https://dashboard.stripe.com/account/webhooks),\nand our [Using Webhooks](https://stripe.com/docs/webhooks) guide will help you get set up.\n\nWhen using [Connect](https://stripe.com/docs/connect), you can also receive notifications of\nevents that occur in connected accounts. For these events, there will be an\nadditional `account` attribute in the received `Event` object.\n\n**NOTE:** Right now, access to events through the [Retrieve Event API](https://stripe.com/docs/api#retrieve_event) is\nguaranteed only for 30 days.",
        "properties": {
          "account": {
            "description": "The connected account that originated the event.",
            "maxLength": 5000,
            "type": "string"
          },
          "api_version": {
            "description": "The Stripe API version used to render `data`. *Note: This property is populated only for events on or after October 31, 2014*.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/notification_event_data"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "event"
            ],
            "type": "string"
          },
          "pending_webhooks": {
            "description": "Number of webhooks that have yet to be successfully delivered (i.e., to return a 20x response) to the URLs you've specified.",
            "type": "integer"
          },
          "request": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/notification_event_request"
              }
            ],
            "description": "Information on the API request that instigated the event.",
            "nullable": true
          },
          "type": {
            "description": "Description of the event (e.g., `invoice.created` or `charge.refunded`).",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "api_version",
          "created",
          "data",
          "id",
          "livemode",
          "object",
          "pending_webhooks",
          "request",
          "type"
        ],
        "title": "NotificationEvent",
        "type": "object",
        "x-expandableFields": [
          "data",
          "request"
        ],
        "x-resourceId": "event",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/events"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/events/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Event",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "exchange_rate": {
        "description": "`Exchange Rate` objects allow you to determine the rates that Stripe is\ncurrently using to convert from one currency to another. Since this number is\nvariable throughout the day, there are various reasons why you might want to\nknow the current rate (for example, to dynamically price an item for a user\nwith a default payment in a foreign currency).\n\nIf you want a guarantee that the charge is made with a certain exchange rate\nyou expect is current, you can pass in `exchange_rate` to charges endpoints.\nIf the value is no longer up to date, the charge won't go through. Please\nrefer to our [Exchange Rates API](https://stripe.com/docs/exchange-rates) guide for more\ndetails.",
        "properties": {
          "id": {
            "description": "Unique identifier for the object. Represented as the three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) in lowercase.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "exchange_rate"
            ],
            "type": "string"
          },
          "rates": {
            "additionalProperties": {
              "type": "number"
            },
            "description": "Hash where the keys are supported currencies and the values are the exchange rate at which the base id currency converts to the key currency.",
            "type": "object"
          }
        },
        "required": [
          "id",
          "object",
          "rates"
        ],
        "title": "ExchangeRate",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "exchange_rate",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/exchange_rates"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/exchange_rates/{rate_id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "ExchangeRate",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "external_account": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/bank_account"
          },
          {
            "$ref": "#/components/schemas/card"
          }
        ],
        "title": "Polymorphic",
        "x-resourceId": "external_account",
        "x-stripeBypassValidation": true,
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/accounts/{account}/external_accounts"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/accounts/{account}/external_accounts"
          },
          {
            "method_name": "retrieve",
            "method_on": "collection",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/accounts/{account}/external_accounts/{id}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/accounts/{account}/external_accounts/{id}"
          },
          {
            "method_name": "create",
            "method_on": "collection",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/accounts/{account}/external_accounts"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/accounts/{account}/external_accounts"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/accounts/{account}/external_accounts/{id}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/accounts/{account}/external_accounts/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "ExternalAccount",
          "has_collection_class": true
        }
      },
      "fee": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount of the fee, in cents.",
            "type": "integer"
          },
          "application": {
            "description": "ID of the Connect application that earned the fee.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of the fee, one of: `application_fee`, `stripe_fee` or `tax`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "application",
          "currency",
          "description",
          "type"
        ],
        "title": "Fee",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Fee",
          "in_class": "balance_transaction"
        }
      },
      "fee_refund": {
        "description": "`Application Fee Refund` objects allow you to refund an application fee that\nhas previously been created but not yet refunded. Funds will be refunded to\nthe Stripe account from which the fee was originally collected.\n\nRelated guide: [Refunding Application Fees](https://stripe.com/docs/connect/destination-charges#refunding-app-fee).",
        "properties": {
          "amount": {
            "description": "Amount, in %s.",
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "Balance transaction that describes the impact on your account balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "fee": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application_fee"
              }
            ],
            "description": "ID of the application fee that was refunded.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application_fee"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "fee_refund"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "balance_transaction",
          "created",
          "currency",
          "fee",
          "id",
          "metadata",
          "object"
        ],
        "title": "FeeRefund",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "fee"
        ],
        "x-resourceId": "fee_refund",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "collection",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/application_fees/{id}/refunds"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/application_fees/{id}/refunds"
          },
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/application_fees/{id}/refunds"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/application_fees/{id}/refunds"
          },
          {
            "method_name": "retrieve",
            "method_on": "collection",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/application_fees/{fee}/refunds/{id}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/application_fees/{fee}/refunds/{id}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/application_fees/{fee}/refunds/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "FeeRefund",
          "has_collection_class": true,
          "in_package": "",
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "file": {
        "description": "This is an object representing a file hosted on Stripe's servers. The\nfile may have been uploaded by yourself using the [create file](https://stripe.com/docs/api#create_file)\nrequest (for example, when uploading dispute evidence) or it may have\nbeen created by Stripe (for example, the results of a [Sigma scheduled\nquery](#scheduled_queries)).\n\nRelated guide: [File Upload Guide](https://stripe.com/docs/file-upload).",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "expires_at": {
            "description": "The time at which the file expires and is no longer available in epoch seconds.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "filename": {
            "description": "A filename for the file, suitable for saving to a filesystem.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "links": {
            "description": "A list of [file links](https://stripe.com/docs/api#file_links) that point at this file.",
            "nullable": true,
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/file_link"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "pattern": "^/v1/file_links",
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "FileFileLinkList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "file"
            ],
            "type": "string"
          },
          "purpose": {
            "description": "The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the uploaded file.",
            "enum": [
              "account_requirement",
              "additional_verification",
              "business_icon",
              "business_logo",
              "customer_signature",
              "dispute_evidence",
              "document_provider_identity_document",
              "finance_report_run",
              "identity_document",
              "identity_document_downloadable",
              "pci_document",
              "selfie",
              "sigma_scheduled_query",
              "tax_document_user_upload",
              "terminal_reader_splashscreen"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "size": {
            "description": "The size in bytes of the file object.",
            "type": "integer"
          },
          "title": {
            "description": "A user friendly title for the document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the file returned (e.g., `csv`, `pdf`, `jpg`, or `png`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The URL from which the file can be downloaded using your live secret API key.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "expires_at",
          "filename",
          "id",
          "object",
          "purpose",
          "size",
          "title",
          "type",
          "url"
        ],
        "title": "File",
        "type": "object",
        "x-expandableFields": [
          "links"
        ],
        "x-resourceId": "file",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/files"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/files/{file}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/files"
          }
        ],
        "x-stripeResource": {
          "class_name": "File",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "file_link": {
        "description": "To share the contents of a `File` object with non-Stripe users, you can\ncreate a `FileLink`. `FileLink`s contain a URL that can be used to\nretrieve the contents of the file without authentication.",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "expired": {
            "description": "Whether this link is already expired.",
            "type": "boolean"
          },
          "expires_at": {
            "description": "Time at which the link expires.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "file": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The file object this link points to.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "file_link"
            ],
            "type": "string"
          },
          "url": {
            "description": "The publicly accessible URL to download the file.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "expired",
          "expires_at",
          "file",
          "id",
          "livemode",
          "metadata",
          "object",
          "url"
        ],
        "title": "FileLink",
        "type": "object",
        "x-expandableFields": [
          "file"
        ],
        "x-resourceId": "file_link",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/file_links/{link}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/file_links"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/file_links/{link}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/file_links"
          }
        ],
        "x-stripeResource": {
          "class_name": "FileLink",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "financial_connections.account": {
        "description": "A Financial Connections Account represents an account that exists outside of Stripe, to which you have been granted some degree of access.",
        "properties": {
          "account_holder": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/bank_connections_resource_accountholder"
              }
            ],
            "description": "The account holder that this account belongs to.",
            "nullable": true
          },
          "balance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/bank_connections_resource_balance"
              }
            ],
            "description": "The most recent information about the account's balance.",
            "nullable": true
          },
          "balance_refresh": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/bank_connections_resource_balance_refresh"
              }
            ],
            "description": "The state of the most recent attempt to refresh the account balance.",
            "nullable": true
          },
          "category": {
            "description": "The type of the account. Account category is further divided in `subcategory`.",
            "enum": [
              "cash",
              "credit",
              "investment",
              "other"
            ],
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "display_name": {
            "description": "A human-readable name that has been assigned to this account, either by the account holder or by the institution.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "institution_name": {
            "description": "The name of the institution that holds this account.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "The last 4 digits of the account number. If present, this will be 4 numeric characters.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "financial_connections.account"
            ],
            "type": "string"
          },
          "ownership": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/financial_connections.account_ownership"
              }
            ],
            "description": "The most recent information about the account's owners.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/financial_connections.account_ownership"
                }
              ]
            }
          },
          "ownership_refresh": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/bank_connections_resource_ownership_refresh"
              }
            ],
            "description": "The state of the most recent attempt to refresh the account owners.",
            "nullable": true
          },
          "permissions": {
            "description": "The list of permissions granted by this account.",
            "items": {
              "enum": [
                "balances",
                "ownership",
                "payment_method",
                "transactions"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "status": {
            "description": "The status of the link to the account.",
            "enum": [
              "active",
              "disconnected",
              "inactive"
            ],
            "type": "string"
          },
          "subcategory": {
            "description": "If `category` is `cash`, one of:\n\n - `checking`\n - `savings`\n - `other`\n\nIf `category` is `credit`, one of:\n\n - `mortgage`\n - `line_of_credit`\n - `credit_card`\n - `other`\n\nIf `category` is `investment` or `other`, this will be `other`.",
            "enum": [
              "checking",
              "credit_card",
              "line_of_credit",
              "mortgage",
              "other",
              "savings"
            ],
            "type": "string"
          },
          "supported_payment_method_types": {
            "description": "The [PaymentMethod type](https://stripe.com/docs/api/payment_methods/object#payment_method_object-type)(s) that can be created from this account.",
            "items": {
              "enum": [
                "link",
                "us_bank_account"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "account_holder",
          "balance",
          "balance_refresh",
          "category",
          "created",
          "display_name",
          "id",
          "institution_name",
          "last4",
          "livemode",
          "object",
          "ownership",
          "ownership_refresh",
          "permissions",
          "status",
          "subcategory",
          "supported_payment_method_types"
        ],
        "title": "BankConnectionsResourceLinkedAccount",
        "type": "object",
        "x-expandableFields": [
          "account_holder",
          "balance",
          "balance_refresh",
          "ownership",
          "ownership_refresh"
        ],
        "x-resourceId": "financial_connections.account",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/financial_connections/accounts"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/financial_connections/accounts/{account}"
          },
          {
            "method_name": "list_owners",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/financial_connections/accounts/{account}/owners"
          },
          {
            "method_name": "refresh",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/financial_connections/accounts/{account}/refresh"
          },
          {
            "method_name": "disconnect",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/financial_connections/accounts/{account}/disconnect"
          }
        ],
        "x-stripeResource": {
          "class_name": "Account",
          "has_collection_class": true,
          "in_package": "FinancialConnections",
          "inner_classes": [
            "bank_connections_resource_accountholder",
            "bank_connections_resource_balance",
            "bank_connections_resource_balance_refresh",
            "bank_connections_resource_ownership_refresh"
          ]
        }
      },
      "financial_connections.account_owner": {
        "description": "",
        "properties": {
          "email": {
            "description": "The email address of the owner.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "name": {
            "description": "The full name of the owner.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "financial_connections.account_owner"
            ],
            "type": "string"
          },
          "ownership": {
            "description": "The ownership object that this owner belongs to.",
            "maxLength": 5000,
            "type": "string"
          },
          "phone": {
            "description": "The raw phone number of the owner.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "raw_address": {
            "description": "The raw physical address of the owner.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "refreshed_at": {
            "description": "The timestamp of the refresh that updated this owner.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "email",
          "id",
          "name",
          "object",
          "ownership",
          "phone",
          "raw_address",
          "refreshed_at"
        ],
        "title": "BankConnectionsResourceOwner",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "financial_connections.account_owner",
        "x-stripeResource": {
          "class_name": "AccountOwner",
          "has_collection_class": true,
          "in_package": "FinancialConnections"
        }
      },
      "financial_connections.account_ownership": {
        "description": "Describes a snapshot of the owners of an account at a particular point in time.",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "financial_connections.account_ownership"
            ],
            "type": "string"
          },
          "owners": {
            "description": "A paginated list of owners for this account.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/financial_connections.account_owner"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "BankConnectionsResourceOwnerList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          }
        },
        "required": [
          "created",
          "id",
          "object",
          "owners"
        ],
        "title": "BankConnectionsResourceOwnership",
        "type": "object",
        "x-expandableFields": [
          "owners"
        ],
        "x-stripeResource": {
          "class_name": "AccountOwnership",
          "in_package": "FinancialConnections"
        }
      },
      "financial_connections.session": {
        "description": "A Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.",
        "properties": {
          "account_holder": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/bank_connections_resource_accountholder"
              }
            ],
            "description": "The account holder for whom accounts are collected in this session.",
            "nullable": true
          },
          "accounts": {
            "description": "The accounts that were collected as part of this Session.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/financial_connections.account"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "pattern": "^/v1/financial_connections/accounts",
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "BankConnectionsResourceLinkedAccountList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "client_secret": {
            "description": "A value that will be passed to the client to launch the authentication flow.",
            "maxLength": 5000,
            "type": "string"
          },
          "filters": {
            "$ref": "#/components/schemas/bank_connections_resource_link_account_session_filters"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "financial_connections.session"
            ],
            "type": "string"
          },
          "permissions": {
            "description": "Permissions requested for accounts collected during this session.",
            "items": {
              "enum": [
                "balances",
                "ownership",
                "payment_method",
                "transactions"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          },
          "return_url": {
            "description": "For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "account_holder",
          "accounts",
          "client_secret",
          "id",
          "livemode",
          "object",
          "permissions"
        ],
        "title": "BankConnectionsResourceLinkAccountSession",
        "type": "object",
        "x-expandableFields": [
          "account_holder",
          "accounts",
          "filters"
        ],
        "x-resourceId": "financial_connections.session",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/financial_connections/sessions"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/financial_connections/sessions/{session}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Session",
          "in_package": "FinancialConnections",
          "inner_classes": [
            "bank_connections_resource_link_account_session_filters"
          ]
        }
      },
      "financial_reporting_finance_report_run_run_parameters": {
        "description": "",
        "properties": {
          "columns": {
            "description": "The set of output columns requested for inclusion in the report run.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "connected_account": {
            "description": "Connected account ID by which to filter the report run.",
            "maxLength": 5000,
            "type": "string"
          },
          "currency": {
            "description": "Currency of objects to be included in the report run.",
            "type": "string"
          },
          "interval_end": {
            "description": "Ending timestamp of data to be included in the report run (exclusive).",
            "format": "unix-time",
            "type": "integer"
          },
          "interval_start": {
            "description": "Starting timestamp of data to be included in the report run.",
            "format": "unix-time",
            "type": "integer"
          },
          "payout": {
            "description": "Payout ID by which to filter the report run.",
            "maxLength": 5000,
            "type": "string"
          },
          "reporting_category": {
            "description": "Category of balance transactions to be included in the report run.",
            "maxLength": 5000,
            "type": "string"
          },
          "timezone": {
            "description": "Defaults to `Etc/UTC`. The output timezone for all timestamps in the report. A list of possible time zone values is maintained at the [IANA Time Zone Database](http://www.iana.org/time-zones). Has no effect on `interval_start` or `interval_end`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "FinancialReportingFinanceReportRunRunParameters",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Parameters",
          "in_class": "reporting.report_run"
        }
      },
      "funding_instructions": {
        "description": "Each customer has a [`balance`](https://stripe.com/docs/api/customers/object#customer_object-balance) that is\nautomatically applied to future invoices and payments using the `customer_balance` payment method.\nCustomers can fund this balance by initiating a bank transfer to any account in the\n`financial_addresses` field.\nRelated guide: [Customer Balance - Funding Instructions](https://stripe.com/docs/payments/customer-balance/funding-instructions) to learn more",
        "properties": {
          "bank_transfer": {
            "$ref": "#/components/schemas/funding_instructions_bank_transfer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "maxLength": 5000,
            "type": "string"
          },
          "funding_type": {
            "description": "The `funding_type` of the returned instructions",
            "enum": [
              "bank_transfer"
            ],
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "funding_instructions"
            ],
            "type": "string"
          }
        },
        "required": [
          "bank_transfer",
          "currency",
          "funding_type",
          "livemode",
          "object"
        ],
        "title": "CustomerBalanceFundingInstructionsCustomerBalanceFundingInstructions",
        "type": "object",
        "x-expandableFields": [
          "bank_transfer"
        ],
        "x-resourceId": "funding_instructions",
        "x-stripeResource": {
          "class_name": "FundingInstructions",
          "in_package": "",
          "inner_classes": [
            "funding_instructions_bank_transfer"
          ]
        }
      },
      "funding_instructions_bank_transfer": {
        "description": "",
        "properties": {
          "country": {
            "description": "The country of the bank account to fund",
            "maxLength": 5000,
            "type": "string"
          },
          "financial_addresses": {
            "description": "A list of financial addresses that can be used to fund a particular balance",
            "items": {
              "$ref": "#/components/schemas/funding_instructions_bank_transfer_financial_address"
            },
            "type": "array"
          },
          "type": {
            "description": "The bank_transfer type",
            "enum": [
              "eu_bank_transfer",
              "jp_bank_transfer"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "country",
          "financial_addresses",
          "type"
        ],
        "title": "FundingInstructionsBankTransfer",
        "type": "object",
        "x-expandableFields": [
          "financial_addresses"
        ],
        "x-stripeResource": {
          "class_name": "BankTransfer",
          "in_class": "funding_instructions",
          "inner_classes": [
            "funding_instructions_bank_transfer_financial_address"
          ]
        }
      },
      "funding_instructions_bank_transfer_financial_address": {
        "description": "FinancialAddresses contain identifying information that resolves to a FinancialAccount.",
        "properties": {
          "iban": {
            "$ref": "#/components/schemas/funding_instructions_bank_transfer_iban_record"
          },
          "sort_code": {
            "$ref": "#/components/schemas/funding_instructions_bank_transfer_sort_code_record"
          },
          "spei": {
            "$ref": "#/components/schemas/funding_instructions_bank_transfer_spei_record"
          },
          "supported_networks": {
            "description": "The payment networks supported by this FinancialAddress",
            "items": {
              "enum": [
                "bacs",
                "fps",
                "sepa",
                "spei",
                "zengin"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          },
          "type": {
            "description": "The type of financial address",
            "enum": [
              "iban",
              "sort_code",
              "spei",
              "zengin"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "zengin": {
            "$ref": "#/components/schemas/funding_instructions_bank_transfer_zengin_record"
          }
        },
        "required": [
          "type"
        ],
        "title": "FundingInstructionsBankTransferFinancialAddress",
        "type": "object",
        "x-expandableFields": [
          "iban",
          "sort_code",
          "spei",
          "zengin"
        ],
        "x-stripeResource": {
          "class_name": "FinancialAddress",
          "in_class": "funding_instructions_bank_transfer",
          "inner_classes": [
            "funding_instructions_bank_transfer_iban_record",
            "funding_instructions_bank_transfer_sort_code_record",
            "funding_instructions_bank_transfer_spei_record",
            "funding_instructions_bank_transfer_zengin_record"
          ]
        }
      },
      "funding_instructions_bank_transfer_iban_record": {
        "description": "Iban Records contain E.U. bank account details per the SEPA format.",
        "properties": {
          "account_holder_name": {
            "description": "The name of the person or business that owns the bank account",
            "maxLength": 5000,
            "type": "string"
          },
          "bic": {
            "description": "The BIC/SWIFT code of the account.",
            "maxLength": 5000,
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "type": "string"
          },
          "iban": {
            "description": "The IBAN of the account.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "account_holder_name",
          "bic",
          "country",
          "iban"
        ],
        "title": "FundingInstructionsBankTransferIbanRecord",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Iban",
          "in_class": "funding_instructions_bank_transfer_financial_address"
        }
      },
      "funding_instructions_bank_transfer_sort_code_record": {
        "description": "Sort Code Records contain U.K. bank account details per the sort code format.",
        "properties": {
          "account_holder_name": {
            "description": "The name of the person or business that owns the bank account",
            "maxLength": 5000,
            "type": "string"
          },
          "account_number": {
            "description": "The account number",
            "maxLength": 5000,
            "type": "string"
          },
          "sort_code": {
            "description": "The six-digit sort code",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "account_holder_name",
          "account_number",
          "sort_code"
        ],
        "title": "FundingInstructionsBankTransferSortCodeRecord",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SortCode",
          "in_class": "funding_instructions_bank_transfer_financial_address"
        }
      },
      "funding_instructions_bank_transfer_spei_record": {
        "description": "SPEI Records contain Mexico bank account details per the SPEI format.",
        "properties": {
          "bank_code": {
            "description": "The three-digit bank code",
            "maxLength": 5000,
            "type": "string"
          },
          "bank_name": {
            "description": "The short banking institution name",
            "maxLength": 5000,
            "type": "string"
          },
          "clabe": {
            "description": "The CLABE number",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "bank_code",
          "bank_name",
          "clabe"
        ],
        "title": "FundingInstructionsBankTransferSpeiRecord",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Spei",
          "in_class": "funding_instructions_bank_transfer_financial_address"
        }
      },
      "funding_instructions_bank_transfer_zengin_record": {
        "description": "Zengin Records contain Japan bank account details per the Zengin format.",
        "properties": {
          "account_holder_name": {
            "description": "The account holder name",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_number": {
            "description": "The account number",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "The bank account type. In Japan, this can only be `futsu` or `toza`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_code": {
            "description": "The bank code of the account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "The bank name of the account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "branch_code": {
            "description": "The branch code of the account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "branch_name": {
            "description": "The branch name of the account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "account_holder_name",
          "account_number",
          "account_type",
          "bank_code",
          "bank_name",
          "branch_code",
          "branch_name"
        ],
        "title": "FundingInstructionsBankTransferZenginRecord",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Zengin",
          "in_class": "funding_instructions_bank_transfer_financial_address"
        }
      },
      "gelato_data_document_report_date_of_birth": {
        "description": "Point in Time",
        "properties": {
          "day": {
            "description": "Numerical day between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "Numerical month between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "day",
          "month",
          "year"
        ],
        "title": "GelatoDataDocumentReportDateOfBirth",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DateOfBirth",
          "in_class": "gelato_document_report"
        }
      },
      "gelato_data_document_report_expiration_date": {
        "description": "Point in Time",
        "properties": {
          "day": {
            "description": "Numerical day between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "Numerical month between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "day",
          "month",
          "year"
        ],
        "title": "GelatoDataDocumentReportExpirationDate",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ExpirationDate",
          "in_class": "gelato_document_report"
        }
      },
      "gelato_data_document_report_issued_date": {
        "description": "Point in Time",
        "properties": {
          "day": {
            "description": "Numerical day between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "Numerical month between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "day",
          "month",
          "year"
        ],
        "title": "GelatoDataDocumentReportIssuedDate",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "IssuedDate",
          "in_class": "gelato_document_report"
        }
      },
      "gelato_data_id_number_report_date": {
        "description": "Point in Time",
        "properties": {
          "day": {
            "description": "Numerical day between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "Numerical month between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "day",
          "month",
          "year"
        ],
        "title": "GelatoDataIdNumberReportDate",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DateOfBirth",
          "in_class": "gelato_id_number_report"
        }
      },
      "gelato_data_verified_outputs_date": {
        "description": "Point in Time",
        "properties": {
          "day": {
            "description": "Numerical day between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "Numerical month between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "day",
          "month",
          "year"
        ],
        "title": "GelatoDataVerifiedOutputsDate",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DateOfBirth",
          "in_class": "gelato_verified_outputs"
        }
      },
      "gelato_document_report": {
        "description": "Result from a document check",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Address as it appears in the document.",
            "nullable": true
          },
          "dob": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/gelato_data_document_report_date_of_birth"
              }
            ],
            "description": "Date of birth as it appears in the document.",
            "nullable": true
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/gelato_document_report_error"
              }
            ],
            "description": "Details on the verification error. Present when status is `unverified`.",
            "nullable": true
          },
          "expiration_date": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/gelato_data_document_report_expiration_date"
              }
            ],
            "description": "Expiration date of the document.",
            "nullable": true
          },
          "files": {
            "description": "Array of [File](https://stripe.com/docs/api/files) ids containing images for this document.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "first_name": {
            "description": "First name as it appears in the document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issued_date": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/gelato_data_document_report_issued_date"
              }
            ],
            "description": "Issued date of the document.",
            "nullable": true
          },
          "issuing_country": {
            "description": "Issuing country of the document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "Last name as it appears in the document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "number": {
            "description": "Document ID number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of this `document` check.",
            "enum": [
              "unverified",
              "verified"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "type": {
            "description": "Type of the document.",
            "enum": [
              "driving_license",
              "id_card",
              "passport"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "dob",
          "error",
          "expiration_date",
          "files",
          "first_name",
          "issued_date",
          "issuing_country",
          "last_name",
          "number",
          "status",
          "type"
        ],
        "title": "GelatoDocumentReport",
        "type": "object",
        "x-expandableFields": [
          "address",
          "dob",
          "error",
          "expiration_date",
          "issued_date"
        ],
        "x-stripeResource": {
          "class_name": "Document",
          "in_class": "identity.verification_report",
          "inner_classes": [
            "gelato_data_document_report_date_of_birth",
            "gelato_data_document_report_expiration_date",
            "gelato_data_document_report_issued_date",
            "gelato_document_report_error"
          ]
        }
      },
      "gelato_document_report_error": {
        "description": "",
        "properties": {
          "code": {
            "description": "A short machine-readable string giving the reason for the verification failure.",
            "enum": [
              "document_expired",
              "document_type_not_supported",
              "document_unverified_other"
            ],
            "nullable": true,
            "type": "string"
          },
          "reason": {
            "description": "A human-readable message giving the reason for the failure. These messages can be shown to your users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "code",
          "reason"
        ],
        "title": "GelatoDocumentReportError",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DocumentCheckError",
          "in_class": "gelato_document_report"
        }
      },
      "gelato_id_number_report": {
        "description": "Result from an id_number check",
        "properties": {
          "dob": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/gelato_data_id_number_report_date"
              }
            ],
            "description": "Date of birth.",
            "nullable": true
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/gelato_id_number_report_error"
              }
            ],
            "description": "Details on the verification error. Present when status is `unverified`.",
            "nullable": true
          },
          "first_name": {
            "description": "First name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id_number": {
            "description": "ID number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id_number_type": {
            "description": "Type of ID number.",
            "enum": [
              "br_cpf",
              "sg_nric",
              "us_ssn"
            ],
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "Last name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of this `id_number` check.",
            "enum": [
              "unverified",
              "verified"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "dob",
          "error",
          "first_name",
          "id_number",
          "id_number_type",
          "last_name",
          "status"
        ],
        "title": "GelatoIdNumberReport",
        "type": "object",
        "x-expandableFields": [
          "dob",
          "error"
        ],
        "x-stripeResource": {
          "class_name": "IdNumber",
          "in_class": "identity.verification_report",
          "inner_classes": [
            "gelato_data_id_number_report_date",
            "gelato_id_number_report_error"
          ]
        }
      },
      "gelato_id_number_report_error": {
        "description": "",
        "properties": {
          "code": {
            "description": "A short machine-readable string giving the reason for the verification failure.",
            "enum": [
              "id_number_insufficient_document_data",
              "id_number_mismatch",
              "id_number_unverified_other"
            ],
            "nullable": true,
            "type": "string"
          },
          "reason": {
            "description": "A human-readable message giving the reason for the failure. These messages can be shown to your users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "code",
          "reason"
        ],
        "title": "GelatoIdNumberReportError",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "IdNumberCheckError",
          "in_class": "gelato_id_number_report"
        }
      },
      "gelato_report_document_options": {
        "description": "",
        "properties": {
          "allowed_types": {
            "description": "Array of strings of allowed identity document types. If the provided identity document isn’t one of the allowed types, the verification check will fail with a document_type_not_allowed error code.",
            "items": {
              "enum": [
                "driving_license",
                "id_card",
                "passport"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "require_id_number": {
            "description": "Collect an ID number and perform an [ID number check](https://stripe.com/docs/identity/verification-checks?type=id-number) with the document’s extracted name and date of birth.",
            "type": "boolean"
          },
          "require_live_capture": {
            "description": "Disable image uploads, identity document images have to be captured using the device’s camera.",
            "type": "boolean"
          },
          "require_matching_selfie": {
            "description": "Capture a face image and perform a [selfie check](https://stripe.com/docs/identity/verification-checks?type=selfie) comparing a photo ID and a picture of your user’s face. [Learn more](https://stripe.com/docs/identity/selfie).",
            "type": "boolean"
          }
        },
        "title": "GelatoReportDocumentOptions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Document",
          "in_class": "gelato_verification_report_options"
        }
      },
      "gelato_report_id_number_options": {
        "description": "",
        "properties": {},
        "title": "GelatoReportIdNumberOptions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "IdNumber",
          "in_class": "gelato_verification_report_options"
        }
      },
      "gelato_selfie_report": {
        "description": "Result from a selfie check",
        "properties": {
          "document": {
            "description": "ID of the [File](https://stripe.com/docs/api/files) holding the image of the identity document used in this check.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/gelato_selfie_report_error"
              }
            ],
            "description": "Details on the verification error. Present when status is `unverified`.",
            "nullable": true
          },
          "selfie": {
            "description": "ID of the [File](https://stripe.com/docs/api/files) holding the image of the selfie used in this check.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Status of this `selfie` check.",
            "enum": [
              "unverified",
              "verified"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "document",
          "error",
          "selfie",
          "status"
        ],
        "title": "GelatoSelfieReport",
        "type": "object",
        "x-expandableFields": [
          "error"
        ],
        "x-stripeResource": {
          "class_name": "Selfie",
          "in_class": "identity.verification_report",
          "inner_classes": [
            "gelato_selfie_report_error"
          ]
        }
      },
      "gelato_selfie_report_error": {
        "description": "",
        "properties": {
          "code": {
            "description": "A short machine-readable string giving the reason for the verification failure.",
            "enum": [
              "selfie_document_missing_photo",
              "selfie_face_mismatch",
              "selfie_manipulated",
              "selfie_unverified_other"
            ],
            "nullable": true,
            "type": "string"
          },
          "reason": {
            "description": "A human-readable message giving the reason for the failure. These messages can be shown to your users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "code",
          "reason"
        ],
        "title": "GelatoSelfieReportError",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SelfieCheckError",
          "in_class": "gelato_selfie_report"
        }
      },
      "gelato_session_document_options": {
        "description": "",
        "properties": {
          "allowed_types": {
            "description": "Array of strings of allowed identity document types. If the provided identity document isn’t one of the allowed types, the verification check will fail with a document_type_not_allowed error code.",
            "items": {
              "enum": [
                "driving_license",
                "id_card",
                "passport"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "require_id_number": {
            "description": "Collect an ID number and perform an [ID number check](https://stripe.com/docs/identity/verification-checks?type=id-number) with the document’s extracted name and date of birth.",
            "type": "boolean"
          },
          "require_live_capture": {
            "description": "Disable image uploads, identity document images have to be captured using the device’s camera.",
            "type": "boolean"
          },
          "require_matching_selfie": {
            "description": "Capture a face image and perform a [selfie check](https://stripe.com/docs/identity/verification-checks?type=selfie) comparing a photo ID and a picture of your user’s face. [Learn more](https://stripe.com/docs/identity/selfie).",
            "type": "boolean"
          }
        },
        "title": "GelatoSessionDocumentOptions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Document",
          "in_class": "gelato_verification_session_options"
        }
      },
      "gelato_session_id_number_options": {
        "description": "",
        "properties": {},
        "title": "GelatoSessionIdNumberOptions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "IdNumber",
          "in_class": "gelato_verification_session_options"
        }
      },
      "gelato_session_last_error": {
        "description": "Shows last VerificationSession error",
        "properties": {
          "code": {
            "description": "A short machine-readable string giving the reason for the verification or user-session failure.",
            "enum": [
              "abandoned",
              "consent_declined",
              "country_not_supported",
              "device_not_supported",
              "document_expired",
              "document_type_not_supported",
              "document_unverified_other",
              "id_number_insufficient_document_data",
              "id_number_mismatch",
              "id_number_unverified_other",
              "selfie_document_missing_photo",
              "selfie_face_mismatch",
              "selfie_manipulated",
              "selfie_unverified_other",
              "under_supported_age"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "reason": {
            "description": "A message that explains the reason for verification or user-session failure.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "code",
          "reason"
        ],
        "title": "GelatoSessionLastError",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "LastError",
          "in_class": "identity.verification_session"
        }
      },
      "gelato_verification_report_options": {
        "description": "",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/gelato_report_document_options"
          },
          "id_number": {
            "$ref": "#/components/schemas/gelato_report_id_number_options"
          }
        },
        "title": "GelatoVerificationReportOptions",
        "type": "object",
        "x-expandableFields": [
          "document",
          "id_number"
        ],
        "x-stripeResource": {
          "class_name": "Options",
          "in_class": "identity.verification_report",
          "inner_classes": [
            "gelato_report_document_options",
            "gelato_report_id_number_options"
          ]
        }
      },
      "gelato_verification_session_options": {
        "description": "",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/gelato_session_document_options"
          },
          "id_number": {
            "$ref": "#/components/schemas/gelato_session_id_number_options"
          }
        },
        "title": "GelatoVerificationSessionOptions",
        "type": "object",
        "x-expandableFields": [
          "document",
          "id_number"
        ],
        "x-stripeResource": {
          "class_name": "Options",
          "in_class": "identity.verification_session",
          "inner_classes": [
            "gelato_session_document_options",
            "gelato_session_id_number_options"
          ]
        }
      },
      "gelato_verified_outputs": {
        "description": "",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "The user's verified address.",
            "nullable": true
          },
          "dob": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/gelato_data_verified_outputs_date"
              }
            ],
            "description": "The user’s verified date of birth.",
            "nullable": true
          },
          "first_name": {
            "description": "The user's verified first name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id_number": {
            "description": "The user's verified id number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id_number_type": {
            "description": "The user's verified id number type.",
            "enum": [
              "br_cpf",
              "sg_nric",
              "us_ssn"
            ],
            "nullable": true,
            "type": "string"
          },
          "last_name": {
            "description": "The user's verified last name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "dob",
          "first_name",
          "id_number",
          "id_number_type",
          "last_name"
        ],
        "title": "GelatoVerifiedOutputs",
        "type": "object",
        "x-expandableFields": [
          "address",
          "dob"
        ],
        "x-stripeResource": {
          "class_name": "VerifiedOutputs",
          "in_class": "identity.verification_session",
          "inner_classes": [
            "gelato_data_verified_outputs_date"
          ]
        }
      },
      "identity.verification_report": {
        "description": "A VerificationReport is the result of an attempt to collect and verify data from a user.\nThe collection of verification checks performed is determined from the `type` and `options`\nparameters used. You can find the result of each verification check performed in the\nappropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as\nreference IDs which can be used to access collected images through the [FileUpload](https://stripe.com/docs/api/files)\nAPI. To configure and create VerificationReports, use the\n[VerificationSession](https://stripe.com/docs/api/identity/verification_sessions) API.\n\nRelated guides: [Accessing verification results](https://stripe.com/docs/identity/verification-sessions#results).",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "document": {
            "$ref": "#/components/schemas/gelato_document_report"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "id_number": {
            "$ref": "#/components/schemas/gelato_id_number_report"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "identity.verification_report"
            ],
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/gelato_verification_report_options"
          },
          "selfie": {
            "$ref": "#/components/schemas/gelato_selfie_report"
          },
          "type": {
            "description": "Type of report.",
            "enum": [
              "document",
              "id_number"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "verification_session": {
            "description": "ID of the VerificationSession that created this report.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "created",
          "id",
          "livemode",
          "object",
          "options",
          "type",
          "verification_session"
        ],
        "title": "GelatoVerificationReport",
        "type": "object",
        "x-expandableFields": [
          "document",
          "id_number",
          "options",
          "selfie"
        ],
        "x-resourceId": "identity.verification_report",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/identity/verification_reports/{report}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/identity/verification_reports"
          }
        ],
        "x-stripeResource": {
          "class_name": "VerificationReport",
          "has_collection_class": true,
          "in_package": "Identity",
          "inner_classes": [
            "gelato_document_report",
            "gelato_id_number_report",
            "gelato_selfie_report",
            "gelato_verification_report_options"
          ]
        }
      },
      "identity.verification_session": {
        "description": "A VerificationSession guides you through the process of collecting and verifying the identities\nof your users. It contains details about the type of verification, such as what [verification\ncheck](/docs/identity/verification-checks) to perform. Only create one VerificationSession for\neach verification in your system.\n\nA VerificationSession transitions through [multiple\nstatuses](/docs/identity/how-sessions-work) throughout its lifetime as it progresses through\nthe verification flow. The VerificationSession contains the user's verified data after\nverification checks are complete.\n\nRelated guide: [The Verification Sessions API](https://stripe.com/docs/identity/verification-sessions)",
        "properties": {
          "client_secret": {
            "description": "The short-lived client secret used by Stripe.js to [show a verification modal](https://stripe.com/docs/js/identity/modal) inside your app. This client secret expires after 24 hours and can only be used once. Don’t store it, log it, embed it in a URL, or expose it to anyone other than the user. Make sure that you have TLS enabled on any page that includes the client secret. Refer to our docs on [passing the client secret to the frontend](https://stripe.com/docs/identity/verification-sessions#client-secret) to learn more.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "last_error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/gelato_session_last_error"
              }
            ],
            "description": "If present, this property tells you the last error encountered when processing the verification.",
            "nullable": true
          },
          "last_verification_report": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/identity.verification_report"
              }
            ],
            "description": "ID of the most recent VerificationReport. [Learn more about accessing detailed verification results.](https://stripe.com/docs/identity/verification-sessions#results)",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/identity.verification_report"
                }
              ]
            }
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "identity.verification_session"
            ],
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/gelato_verification_session_options"
          },
          "redaction": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/verification_session_redaction"
              }
            ],
            "description": "Redaction status of this VerificationSession. If the VerificationSession is not redacted, this field will be null.",
            "nullable": true
          },
          "status": {
            "description": "Status of this VerificationSession. [Learn more about the lifecycle of sessions](https://stripe.com/docs/identity/how-sessions-work).",
            "enum": [
              "canceled",
              "processing",
              "requires_input",
              "verified"
            ],
            "type": "string"
          },
          "type": {
            "description": "The type of [verification check](https://stripe.com/docs/identity/verification-checks) to be performed.",
            "enum": [
              "document",
              "id_number"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "url": {
            "description": "The short-lived URL that you use to redirect a user to Stripe to submit their identity information. This URL expires after 48 hours and can only be used once. Don’t store it, log it, send it in emails or expose it to anyone other than the user. Refer to our docs on [verifying identity documents](https://stripe.com/docs/identity/verify-identity-documents?platform=web&type=redirect) to learn how to redirect users to Stripe.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_outputs": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/gelato_verified_outputs"
              }
            ],
            "description": "The user’s verified data.",
            "nullable": true
          }
        },
        "required": [
          "client_secret",
          "created",
          "id",
          "last_error",
          "last_verification_report",
          "livemode",
          "metadata",
          "object",
          "options",
          "redaction",
          "status",
          "type",
          "url",
          "verified_outputs"
        ],
        "title": "GelatoVerificationSession",
        "type": "object",
        "x-expandableFields": [
          "last_error",
          "last_verification_report",
          "options",
          "redaction",
          "verified_outputs"
        ],
        "x-resourceId": "identity.verification_session",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/identity/verification_sessions"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/identity/verification_sessions/{session}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/identity/verification_sessions"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/identity/verification_sessions/{session}/cancel"
          },
          {
            "method_name": "redact",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/identity/verification_sessions/{session}/redact"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/identity/verification_sessions/{session}"
          }
        ],
        "x-stripeResource": {
          "class_name": "VerificationSession",
          "has_collection_class": true,
          "in_package": "Identity",
          "inner_classes": [
            "gelato_session_last_error",
            "gelato_verification_session_options",
            "gelato_verified_outputs",
            "verification_session_redaction"
          ]
        }
      },
      "inbound_transfers": {
        "description": "",
        "properties": {
          "billing_details": {
            "$ref": "#/components/schemas/treasury_shared_resource_billing_details"
          },
          "type": {
            "description": "The type of the payment method used in the InboundTransfer.",
            "enum": [
              "us_bank_account"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/inbound_transfers_payment_method_details_us_bank_account"
          }
        },
        "required": [
          "billing_details",
          "type"
        ],
        "title": "InboundTransfers",
        "type": "object",
        "x-expandableFields": [
          "billing_details",
          "us_bank_account"
        ],
        "x-stripeResource": {
          "class_name": "OriginPaymentMethodDetails",
          "in_class": "treasury.inbound_transfer",
          "inner_classes": [
            "inbound_transfers_payment_method_details_us_bank_account"
          ]
        }
      },
      "inbound_transfers_payment_method_details_us_bank_account": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Account holder type: individual or company.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "Account type: checkings or savings. Defaults to checking if omitted.",
            "enum": [
              "checking",
              "savings"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network": {
            "description": "The US bank account network used to debit funds.",
            "enum": [
              "ach"
            ],
            "type": "string"
          },
          "routing_number": {
            "description": "Routing number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "account_holder_type",
          "account_type",
          "bank_name",
          "fingerprint",
          "last4",
          "network",
          "routing_number"
        ],
        "title": "inbound_transfers_payment_method_details_us_bank_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "UsBankAccount",
          "in_class": "inbound_transfers"
        }
      },
      "invoice": {
        "description": "Invoices are statements of amounts owed by a customer, and are either\ngenerated one-off, or generated periodically from a subscription.\n\nThey contain [invoice items](https://stripe.com/docs/api#invoiceitems), and proration adjustments\nthat may be caused by subscription upgrades/downgrades (if necessary).\n\nIf your invoice is configured to be billed through automatic charges,\nStripe automatically finalizes your invoice and attempts payment. Note\nthat finalizing the invoice,\n[when automatic](https://stripe.com/docs/billing/invoices/workflow/#auto_advance), does\nnot happen immediately as the invoice is created. Stripe waits\nuntil one hour after the last webhook was successfully sent (or the last\nwebhook timed out after failing). If you (and the platforms you may have\nconnected to) have no webhooks configured, Stripe waits one hour after\ncreation to finalize the invoice.\n\nIf your invoice is configured to be billed by sending an email, then based on your\n[email settings](https://dashboard.stripe.com/account/billing/automatic),\nStripe will email the invoice to your customer and await payment. These\nemails can contain a link to a hosted page to pay the invoice.\n\nStripe applies any customer credit on the account before determining the\namount due for the invoice (i.e., the amount that will be actually\ncharged). If the amount due for the invoice is less than Stripe's [minimum allowed charge\nper currency](/docs/currencies#minimum-and-maximum-charge-amounts), the\ninvoice is automatically marked paid, and we add the amount due to the\ncustomer's credit balance which is applied to the next invoice.\n\nMore details on the customer's credit balance are\n[here](https://stripe.com/docs/billing/customer/balance).\n\nRelated guide: [Send Invoices to Customers](https://stripe.com/docs/billing/invoices/sending).",
        "properties": {
          "account_country": {
            "description": "The country of the business associated with this invoice, most often the business creating the invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_name": {
            "description": "The public name of the business associated with this invoice, most often the business creating the invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_tax_ids": {
            "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/tax_id"
                },
                {
                  "$ref": "#/components/schemas/deleted_tax_id"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/tax_id"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_tax_id"
                  }
                ]
              }
            },
            "nullable": true,
            "type": "array"
          },
          "amount_due": {
            "description": "Final amount due at this time for this invoice. If the invoice's total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the `amount_due` may be 0. If there is a positive `starting_balance` for the invoice (the customer owes money), the `amount_due` will also take that into account. The charge that gets generated for the invoice will be for the amount specified in `amount_due`.",
            "type": "integer"
          },
          "amount_paid": {
            "description": "The amount, in %s, that was paid.",
            "type": "integer"
          },
          "amount_remaining": {
            "description": "The difference between amount_due and amount_paid, in %s.",
            "type": "integer"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              },
              {
                "$ref": "#/components/schemas/deleted_application"
              }
            ],
            "description": "ID of the Connect Application that created the invoice.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ]
            }
          },
          "application_fee_amount": {
            "description": "The fee in %s that will be applied to the invoice and transferred to the application owner's Stripe account when the invoice is paid.",
            "nullable": true,
            "type": "integer"
          },
          "attempt_count": {
            "description": "Number of payment attempts made for this invoice, from the perspective of the payment retry schedule. Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count. In other words, manual payment attempts after the first attempt do not affect the retry schedule.",
            "type": "integer"
          },
          "attempted": {
            "description": "Whether an attempt has been made to pay the invoice. An invoice is not attempted until 1 hour after the `invoice.created` webhook, for example, so you might not want to display that invoice as unpaid to your users.",
            "type": "boolean"
          },
          "auto_advance": {
            "description": "Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action.",
            "type": "boolean"
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/automatic_tax"
          },
          "billing_reason": {
            "description": "Indicates the reason why the invoice was created. `subscription_cycle` indicates an invoice created by a subscription advancing into a new period. `subscription_create` indicates an invoice created due to creating a subscription. `subscription_update` indicates an invoice created due to updating a subscription. `subscription` is set for all old invoices to indicate either a change to a subscription or a period advancement. `manual` is set for all invoices unrelated to a subscription (for example: created via the invoice editor). The `upcoming` value is reserved for simulated invoices per the upcoming invoice endpoint. `subscription_threshold` indicates an invoice created due to a billing threshold being reached.",
            "enum": [
              "automatic_pending_invoice_item_invoice",
              "manual",
              "quote_accept",
              "subscription",
              "subscription_create",
              "subscription_cycle",
              "subscription_threshold",
              "subscription_update",
              "upcoming"
            ],
            "nullable": true,
            "type": "string"
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the latest charge generated for this invoice, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "custom_fields": {
            "description": "Custom fields displayed on the invoice.",
            "items": {
              "$ref": "#/components/schemas/invoice_setting_custom_field"
            },
            "nullable": true,
            "type": "array"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The ID of the customer who will be billed.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "customer_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "The customer's address. Until the invoice is finalized, this field will equal `customer.address`. Once the invoice is finalized, this field will no longer be updated.",
            "nullable": true
          },
          "customer_email": {
            "description": "The customer's email. Until the invoice is finalized, this field will equal `customer.email`. Once the invoice is finalized, this field will no longer be updated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_name": {
            "description": "The customer's name. Until the invoice is finalized, this field will equal `customer.name`. Once the invoice is finalized, this field will no longer be updated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_phone": {
            "description": "The customer's phone number. Until the invoice is finalized, this field will equal `customer.phone`. Once the invoice is finalized, this field will no longer be updated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer_shipping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping"
              }
            ],
            "description": "The customer's shipping information. Until the invoice is finalized, this field will equal `customer.shipping`. Once the invoice is finalized, this field will no longer be updated.",
            "nullable": true
          },
          "customer_tax_exempt": {
            "description": "The customer's tax exempt status. Until the invoice is finalized, this field will equal `customer.tax_exempt`. Once the invoice is finalized, this field will no longer be updated.",
            "enum": [
              "exempt",
              "none",
              "reverse"
            ],
            "nullable": true,
            "type": "string"
          },
          "customer_tax_ids": {
            "description": "The customer's tax IDs. Until the invoice is finalized, this field will contain the same tax IDs as `customer.tax_ids`. Once the invoice is finalized, this field will no longer be updated.",
            "items": {
              "$ref": "#/components/schemas/invoices_resource_invoice_tax_id"
            },
            "nullable": true,
            "type": "array"
          },
          "default_payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "default_source": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_source"
              }
            ],
            "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_source"
                }
              ]
            }
          },
          "default_tax_rates": {
            "description": "The tax rates applied to this invoice, if any.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "type": "array"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/discount"
              }
            ],
            "description": "Describes the current discount applied to this invoice, if there is one. Not populated if there are multiple discounts.",
            "nullable": true
          },
          "discounts": {
            "description": "The discounts applied to the invoice. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/discount"
                },
                {
                  "$ref": "#/components/schemas/deleted_discount"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  },
                  {
                    "$ref": "#/components/schemas/deleted_discount"
                  }
                ]
              }
            },
            "nullable": true,
            "type": "array"
          },
          "due_date": {
            "description": "The date on which payment for this invoice is due. This value will be `null` for invoices where `collection_method=charge_automatically`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ending_balance": {
            "description": "Ending customer balance after the invoice is finalized. Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice. If the invoice has not been finalized yet, this will be null.",
            "nullable": true,
            "type": "integer"
          },
          "footer": {
            "description": "Footer displayed on the invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "from_invoice": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoices_from_invoice"
              }
            ],
            "description": "Details of the invoice that was cloned. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions) for more details.",
            "nullable": true
          },
          "hosted_invoice_url": {
            "description": "The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object. This property is always present unless the invoice is an upcoming invoice. See [Retrieve an upcoming invoice](https://stripe.com/docs/api/invoices/upcoming) for more details.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice_pdf": {
            "description": "The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_finalization_error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/api_errors"
              }
            ],
            "description": "The error encountered during the previous attempt to finalize the invoice. This field is cleared when the invoice is successfully finalized.",
            "nullable": true
          },
          "latest_revision": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "The ID of the most recent non-draft revision of this invoice",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          },
          "lines": {
            "description": "The individual line items that make up the invoice. `lines` is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/line_item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "InvoiceLinesList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "next_payment_attempt": {
            "description": "The time at which payment will next be attempted. This value will be `null` for invoices where `collection_method=send_invoice`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "number": {
            "description": "A unique, identifying string that appears on emails sent to the customer for this invoice. This starts with the customer's unique invoice_prefix if it is specified.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "invoice"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "paid": {
            "description": "Whether payment was successfully collected for this invoice. An invoice can be paid (most commonly) with a charge or with credit from the customer's account balance.",
            "type": "boolean"
          },
          "paid_out_of_band": {
            "description": "Returns true if the invoice was manually marked paid, returns false if the invoice hasn't been paid yet or was paid on Stripe.",
            "type": "boolean"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "The PaymentIntent associated with this invoice. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice. Note that voiding an invoice will cancel the PaymentIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "payment_settings": {
            "$ref": "#/components/schemas/invoices_payment_settings"
          },
          "period_end": {
            "description": "End of the usage period during which invoice items were added to this invoice.",
            "format": "unix-time",
            "type": "integer"
          },
          "period_start": {
            "description": "Start of the usage period during which invoice items were added to this invoice.",
            "format": "unix-time",
            "type": "integer"
          },
          "post_payment_credit_notes_amount": {
            "description": "Total amount of all post-payment credit notes issued for this invoice.",
            "type": "integer"
          },
          "pre_payment_credit_notes_amount": {
            "description": "Total amount of all pre-payment credit notes issued for this invoice.",
            "type": "integer"
          },
          "quote": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/quote"
              }
            ],
            "description": "The quote this invoice was generated from.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/quote"
                }
              ]
            }
          },
          "receipt_number": {
            "description": "This is the transaction number that appears on email receipts sent for this invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "rendering_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_setting_rendering_options"
              }
            ],
            "description": "Options for invoice PDF rendering.",
            "nullable": true
          },
          "starting_balance": {
            "description": "Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance. For revision invoices, this also includes any customer balance that was applied to the original invoice.",
            "type": "integer"
          },
          "statement_descriptor": {
            "description": "Extra information about an invoice for the customer's credit card statement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
            "enum": [
              "deleted",
              "draft",
              "open",
              "paid",
              "uncollectible",
              "void"
            ],
            "nullable": true,
            "type": "string"
          },
          "status_transitions": {
            "$ref": "#/components/schemas/invoices_status_transitions"
          },
          "subscription": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription"
              }
            ],
            "description": "The subscription that this invoice was prepared for, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ]
            }
          },
          "subscription_proration_date": {
            "description": "Only set for upcoming invoices that preview prorations. The time used to calculate prorations.",
            "type": "integer"
          },
          "subtotal": {
            "description": "Total of all subscriptions, invoice items, and prorations on the invoice before any invoice level discount or exclusive tax is applied. Item discounts are already incorporated",
            "type": "integer"
          },
          "subtotal_excluding_tax": {
            "description": "The integer amount in %s representing the subtotal of the invoice before any invoice level discount or tax is applied. Item discounts are already incorporated",
            "nullable": true,
            "type": "integer"
          },
          "tax": {
            "description": "The amount of tax on this invoice. This is the sum of all the tax amounts on this invoice.",
            "nullable": true,
            "type": "integer"
          },
          "test_clock": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/test_helpers.test_clock"
              }
            ],
            "description": "ID of the test clock this invoice belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ]
            }
          },
          "threshold_reason": {
            "$ref": "#/components/schemas/invoice_threshold_reason"
          },
          "total": {
            "description": "Total after discounts and taxes.",
            "type": "integer"
          },
          "total_discount_amounts": {
            "description": "The aggregate amounts calculated per discount across all line items.",
            "items": {
              "$ref": "#/components/schemas/discounts_resource_discount_amount"
            },
            "nullable": true,
            "type": "array"
          },
          "total_excluding_tax": {
            "description": "The integer amount in %s representing the total amount of the invoice including all discounts but excluding all tax.",
            "nullable": true,
            "type": "integer"
          },
          "total_tax_amounts": {
            "description": "The aggregate amounts calculated per tax rate for all line items.",
            "items": {
              "$ref": "#/components/schemas/invoice_tax_amount"
            },
            "type": "array"
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_transfer_data"
              }
            ],
            "description": "The account (if any) the payment will be attributed to for tax reporting, and where funds from the payment will be transferred to for the invoice.",
            "nullable": true
          },
          "webhooks_delivered_at": {
            "description": "Invoices are automatically paid or sent 1 hour after webhooks are delivered, or until all webhook delivery attempts have [been exhausted](https://stripe.com/docs/billing/webhooks#understand). This field tracks the time when webhooks for this invoice were successfully delivered. If the invoice had no webhooks to deliver, this will be set while the invoice is being created.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "account_country",
          "account_name",
          "account_tax_ids",
          "amount_due",
          "amount_paid",
          "amount_remaining",
          "application",
          "application_fee_amount",
          "attempt_count",
          "attempted",
          "automatic_tax",
          "billing_reason",
          "charge",
          "collection_method",
          "created",
          "currency",
          "custom_fields",
          "customer",
          "customer_address",
          "customer_email",
          "customer_name",
          "customer_phone",
          "customer_shipping",
          "customer_tax_exempt",
          "default_payment_method",
          "default_source",
          "default_tax_rates",
          "description",
          "discount",
          "discounts",
          "due_date",
          "ending_balance",
          "footer",
          "from_invoice",
          "last_finalization_error",
          "latest_revision",
          "lines",
          "livemode",
          "metadata",
          "next_payment_attempt",
          "number",
          "object",
          "on_behalf_of",
          "paid",
          "paid_out_of_band",
          "payment_intent",
          "payment_settings",
          "period_end",
          "period_start",
          "post_payment_credit_notes_amount",
          "pre_payment_credit_notes_amount",
          "quote",
          "receipt_number",
          "rendering_options",
          "starting_balance",
          "statement_descriptor",
          "status",
          "status_transitions",
          "subscription",
          "subtotal",
          "subtotal_excluding_tax",
          "tax",
          "test_clock",
          "total",
          "total_discount_amounts",
          "total_excluding_tax",
          "total_tax_amounts",
          "transfer_data",
          "webhooks_delivered_at"
        ],
        "title": "Invoice",
        "type": "object",
        "x-expandableFields": [
          "account_tax_ids",
          "application",
          "automatic_tax",
          "charge",
          "custom_fields",
          "customer",
          "customer_address",
          "customer_shipping",
          "customer_tax_ids",
          "default_payment_method",
          "default_source",
          "default_tax_rates",
          "discount",
          "discounts",
          "from_invoice",
          "last_finalization_error",
          "latest_revision",
          "lines",
          "on_behalf_of",
          "payment_intent",
          "payment_settings",
          "quote",
          "rendering_options",
          "status_transitions",
          "subscription",
          "test_clock",
          "threshold_reason",
          "total_discount_amounts",
          "total_tax_amounts",
          "transfer_data"
        ],
        "x-resourceId": "invoice",
        "x-stripeOperations": [
          {
            "method_name": "search",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/invoices/search"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/invoices"
          },
          {
            "method_name": "upcoming",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/invoices/upcoming"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/invoices"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/invoices/{invoice}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/invoices/{invoice}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/invoices/{invoice}"
          },
          {
            "method_name": "pay",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/invoices/{invoice}/pay"
          },
          {
            "method_name": "finalize_invoice",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/invoices/{invoice}/finalize"
          },
          {
            "method_name": "upcomingLines",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/invoices/upcoming/lines"
          },
          {
            "method_name": "send_invoice",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/invoices/{invoice}/send"
          },
          {
            "method_name": "mark_uncollectible",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/invoices/{invoice}/mark_uncollectible"
          },
          {
            "method_name": "void_invoice",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/invoices/{invoice}/void"
          }
        ],
        "x-stripeResource": {
          "class_name": "Invoice",
          "has_collection_class": true,
          "has_search_result_class": true,
          "in_package": "",
          "inner_classes": [
            "automatic_tax",
            "invoice_item_threshold_reason",
            "invoice_setting_custom_field",
            "invoice_setting_rendering_options",
            "invoice_tax_amount",
            "invoice_threshold_reason",
            "invoice_transfer_data",
            "invoices_from_invoice",
            "invoices_payment_method_options",
            "invoices_payment_settings",
            "invoices_resource_invoice_tax_id",
            "invoices_status_transitions"
          ]
        }
      },
      "invoice_installments_card": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Installments are enabled for this Invoice.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "invoice_installments_card",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Installments",
          "in_class": "invoice_payment_method_options_card"
        }
      },
      "invoice_item_threshold_reason": {
        "description": "",
        "properties": {
          "line_item_ids": {
            "description": "The IDs of the line items that triggered the threshold invoice.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "usage_gte": {
            "description": "The quantity threshold boundary that applied to the given line item.",
            "type": "integer"
          }
        },
        "required": [
          "line_item_ids",
          "usage_gte"
        ],
        "title": "InvoiceItemThresholdReason",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ThresholdItemReason",
          "in_class": "invoice"
        }
      },
      "invoice_line_item_period": {
        "description": "",
        "properties": {
          "end": {
            "description": "The end of the period, which must be greater than or equal to the start.",
            "format": "unix-time",
            "type": "integer"
          },
          "start": {
            "description": "The start of the period.",
            "format": "unix-time",
            "type": "integer"
          }
        },
        "required": [
          "end",
          "start"
        ],
        "title": "InvoiceLineItemPeriod",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "InvoiceLineItemPeriod",
          "in_package": ""
        }
      },
      "invoice_mandate_options_card": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount to be charged for future payments.",
            "nullable": true,
            "type": "integer"
          },
          "amount_type": {
            "description": "One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.",
            "enum": [
              "fixed",
              "maximum"
            ],
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "A description of the mandate or subscription that is meant to be displayed to the customer.",
            "maxLength": 200,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "amount_type",
          "description"
        ],
        "title": "invoice_mandate_options_card",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "MandateOptions",
          "in_class": "subscription_payment_method_options_card"
        }
      },
      "invoice_payment_method_options_acss_debit": {
        "description": "",
        "properties": {
          "mandate_options": {
            "$ref": "#/components/schemas/invoice_payment_method_options_acss_debit_mandate_options"
          },
          "verification_method": {
            "description": "Bank account verification method.",
            "enum": [
              "automatic",
              "instant",
              "microdeposits"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "invoice_payment_method_options_acss_debit",
        "type": "object",
        "x-expandableFields": [
          "mandate_options"
        ],
        "x-stripeResource": {
          "class_name": "AcssDebit",
          "in_class": "invoices_payment_method_options",
          "inner_classes": [
            "invoice_payment_method_options_acss_debit_mandate_options"
          ]
        }
      },
      "invoice_payment_method_options_acss_debit_mandate_options": {
        "description": "",
        "properties": {
          "transaction_type": {
            "description": "Transaction type of the mandate.",
            "enum": [
              "business",
              "personal"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "transaction_type"
        ],
        "title": "invoice_payment_method_options_acss_debit_mandate_options",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "MandateOptions",
          "in_class": "invoice_payment_method_options_acss_debit"
        }
      },
      "invoice_payment_method_options_bancontact": {
        "description": "",
        "properties": {
          "preferred_language": {
            "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.",
            "enum": [
              "de",
              "en",
              "fr",
              "nl"
            ],
            "type": "string"
          }
        },
        "required": [
          "preferred_language"
        ],
        "title": "invoice_payment_method_options_bancontact",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Bancontact",
          "in_class": "invoices_payment_method_options"
        }
      },
      "invoice_payment_method_options_card": {
        "description": "",
        "properties": {
          "installments": {
            "$ref": "#/components/schemas/invoice_installments_card"
          },
          "request_three_d_secure": {
            "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
            "enum": [
              "any",
              "automatic"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "request_three_d_secure"
        ],
        "title": "invoice_payment_method_options_card",
        "type": "object",
        "x-expandableFields": [
          "installments"
        ],
        "x-stripeResource": {
          "class_name": "Card",
          "in_class": "invoices_payment_method_options",
          "inner_classes": [
            "invoice_installments_card"
          ]
        }
      },
      "invoice_payment_method_options_customer_balance": {
        "description": "",
        "properties": {
          "bank_transfer": {
            "$ref": "#/components/schemas/invoice_payment_method_options_customer_balance_bank_transfer"
          },
          "funding_type": {
            "description": "The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.",
            "enum": [
              "bank_transfer"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "funding_type"
        ],
        "title": "invoice_payment_method_options_customer_balance",
        "type": "object",
        "x-expandableFields": [
          "bank_transfer"
        ],
        "x-stripeResource": {
          "class_name": "CustomerBalance",
          "in_class": "invoices_payment_method_options",
          "inner_classes": [
            "invoice_payment_method_options_customer_balance_bank_transfer"
          ]
        }
      },
      "invoice_payment_method_options_customer_balance_bank_transfer": {
        "description": "",
        "properties": {
          "eu_bank_transfer": {
            "$ref": "#/components/schemas/invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer"
          },
          "type": {
            "description": "The bank transfer type that can be used for funding. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, or `mx_bank_transfer`.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "invoice_payment_method_options_customer_balance_bank_transfer",
        "type": "object",
        "x-expandableFields": [
          "eu_bank_transfer"
        ],
        "x-stripeResource": {
          "class_name": "BankTransfer",
          "in_class": "invoice_payment_method_options_customer_balance",
          "inner_classes": [
            "invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer"
          ]
        }
      },
      "invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer": {
        "description": "",
        "properties": {
          "country": {
            "description": "The desired country code of the bank account information. Permitted values include: `DE`, `ES`, `FR`, `IE`, or `NL`.",
            "enum": [
              "DE",
              "ES",
              "FR",
              "IE",
              "NL"
            ],
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "title": "invoice_payment_method_options_customer_balance_bank_transfer_eu_bank_transfer",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "EuBankTransfer",
          "in_class": "invoice_payment_method_options_customer_balance_bank_transfer"
        }
      },
      "invoice_payment_method_options_konbini": {
        "description": "",
        "properties": {},
        "title": "invoice_payment_method_options_konbini",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Konbini",
          "in_class": "invoices_payment_method_options"
        }
      },
      "invoice_payment_method_options_us_bank_account": {
        "description": "",
        "properties": {
          "financial_connections": {
            "$ref": "#/components/schemas/invoice_payment_method_options_us_bank_account_linked_account_options"
          },
          "verification_method": {
            "description": "Bank account verification method.",
            "enum": [
              "automatic",
              "instant",
              "microdeposits"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "invoice_payment_method_options_us_bank_account",
        "type": "object",
        "x-expandableFields": [
          "financial_connections"
        ],
        "x-stripeResource": {
          "class_name": "UsBankAccount",
          "in_class": "invoices_payment_method_options",
          "inner_classes": [
            "invoice_payment_method_options_us_bank_account_linked_account_options"
          ]
        }
      },
      "invoice_payment_method_options_us_bank_account_linked_account_options": {
        "description": "",
        "properties": {
          "permissions": {
            "description": "The list of permissions to request. The `payment_method` permission must be included.",
            "items": {
              "enum": [
                "balances",
                "payment_method",
                "transactions"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          }
        },
        "title": "invoice_payment_method_options_us_bank_account_linked_account_options",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "FinancialConnections",
          "in_class": "invoice_payment_method_options_us_bank_account"
        }
      },
      "invoice_setting_custom_field": {
        "description": "",
        "properties": {
          "name": {
            "description": "The name of the custom field.",
            "maxLength": 5000,
            "type": "string"
          },
          "value": {
            "description": "The value of the custom field.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "title": "InvoiceSettingCustomField",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CustomField",
          "in_class": "invoice"
        }
      },
      "invoice_setting_customer_setting": {
        "description": "",
        "properties": {
          "custom_fields": {
            "description": "Default custom fields to be displayed on invoices for this customer.",
            "items": {
              "$ref": "#/components/schemas/invoice_setting_custom_field"
            },
            "nullable": true,
            "type": "array"
          },
          "default_payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of a payment method that's attached to the customer, to be used as the customer's default payment method for subscriptions and invoices.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "footer": {
            "description": "Default footer to be displayed on invoices for this customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "rendering_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_setting_rendering_options"
              }
            ],
            "description": "Default options for invoice PDF rendering for this customer.",
            "nullable": true
          }
        },
        "required": [
          "custom_fields",
          "default_payment_method",
          "footer",
          "rendering_options"
        ],
        "title": "InvoiceSettingCustomerSetting",
        "type": "object",
        "x-expandableFields": [
          "custom_fields",
          "default_payment_method",
          "rendering_options"
        ],
        "x-stripeResource": {
          "class_name": "InvoiceSettings",
          "in_class": "customer"
        }
      },
      "invoice_setting_quote_setting": {
        "description": "",
        "properties": {
          "days_until_due": {
            "description": "Number of days within which a customer must pay invoices generated by this quote. This value will be `null` for quotes where `collection_method=charge_automatically`.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "days_until_due"
        ],
        "title": "InvoiceSettingQuoteSetting",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "InvoiceSettings",
          "in_class": "quote"
        }
      },
      "invoice_setting_rendering_options": {
        "description": "",
        "properties": {
          "amount_tax_display": {
            "description": "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount_tax_display"
        ],
        "title": "InvoiceSettingRenderingOptions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "RenderingOptions",
          "in_class": "invoice"
        }
      },
      "invoice_setting_subscription_schedule_setting": {
        "description": "",
        "properties": {
          "days_until_due": {
            "description": "Number of days within which a customer must pay invoices generated by this subscription schedule. This value will be `null` for subscription schedules where `billing=charge_automatically`.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "days_until_due"
        ],
        "title": "InvoiceSettingSubscriptionScheduleSetting",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "InvoiceSettings",
          "in_class": "subscription_schedule"
        }
      },
      "invoice_tax_amount": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount, in %s, of the tax.",
            "type": "integer"
          },
          "inclusive": {
            "description": "Whether this tax amount is inclusive or exclusive.",
            "type": "boolean"
          },
          "tax_rate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/tax_rate"
              }
            ],
            "description": "The tax rate that was applied to get this tax amount.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/tax_rate"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "inclusive",
          "tax_rate"
        ],
        "title": "InvoiceTaxAmount",
        "type": "object",
        "x-expandableFields": [
          "tax_rate"
        ],
        "x-stripeResource": {
          "class_name": "TaxAmount",
          "in_class": "invoice"
        }
      },
      "invoice_threshold_reason": {
        "description": "",
        "properties": {
          "amount_gte": {
            "description": "The total invoice amount threshold boundary if it triggered the threshold invoice.",
            "nullable": true,
            "type": "integer"
          },
          "item_reasons": {
            "description": "Indicates which line items triggered a threshold invoice.",
            "items": {
              "$ref": "#/components/schemas/invoice_item_threshold_reason"
            },
            "type": "array"
          }
        },
        "required": [
          "amount_gte",
          "item_reasons"
        ],
        "title": "InvoiceThresholdReason",
        "type": "object",
        "x-expandableFields": [
          "item_reasons"
        ],
        "x-stripeResource": {
          "class_name": "ThresholdReason",
          "in_class": "invoice"
        }
      },
      "invoice_transfer_data": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount in %s that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.",
            "nullable": true,
            "type": "integer"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account where funds from the payment will be transferred to upon payment success.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "destination"
        ],
        "title": "InvoiceTransferData",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ],
        "x-stripeResource": {
          "class_name": "TransferData",
          "in_class": "invoice"
        }
      },
      "invoiceitem": {
        "description": "Sometimes you want to add a charge or credit to a customer, but actually\ncharge or credit the customer's card only at the end of a regular billing\ncycle. This is useful for combining several charges (to minimize\nper-transaction fees), or for having Stripe tabulate your usage-based billing\ntotals.\n\nRelated guide: [Subscription Invoices](https://stripe.com/docs/billing/invoices/subscription#adding-upcoming-invoice-items).",
        "properties": {
          "amount": {
            "description": "Amount (in the `currency` specified) of the invoice item. This should always be equal to `unit_amount * quantity`.",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The ID of the customer who will be billed when this invoice item is billed.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "date": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discountable": {
            "description": "If true, discounts will apply to this invoice item. Always false for prorations.",
            "type": "boolean"
          },
          "discounts": {
            "description": "The discounts which apply to the invoice item. Item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  }
                ]
              }
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "The ID of the invoice this invoice item belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "invoiceitem"
            ],
            "type": "string"
          },
          "period": {
            "$ref": "#/components/schemas/invoice_line_item_period"
          },
          "plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/plan"
              }
            ],
            "description": "If the invoice item is a proration, the plan of the subscription that the proration was computed for.",
            "nullable": true
          },
          "price": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/price"
              }
            ],
            "description": "The price of the invoice item.",
            "nullable": true
          },
          "proration": {
            "description": "Whether the invoice item was created automatically as a proration adjustment when the customer switched plans.",
            "type": "boolean"
          },
          "quantity": {
            "description": "Quantity of units for the invoice item. If the invoice item is a proration, the quantity of the subscription that the proration was computed for.",
            "type": "integer"
          },
          "subscription": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription"
              }
            ],
            "description": "The subscription that this invoice item has been created for, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ]
            }
          },
          "subscription_item": {
            "description": "The subscription item that this invoice item has been created for, if any.",
            "maxLength": 5000,
            "type": "string"
          },
          "tax_rates": {
            "description": "The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "nullable": true,
            "type": "array"
          },
          "test_clock": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/test_helpers.test_clock"
              }
            ],
            "description": "ID of the test clock this invoice item belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ]
            }
          },
          "unit_amount": {
            "description": "Unit amount (in the `currency` specified) of the invoice item.",
            "nullable": true,
            "type": "integer"
          },
          "unit_amount_decimal": {
            "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "customer",
          "date",
          "description",
          "discountable",
          "discounts",
          "id",
          "invoice",
          "livemode",
          "metadata",
          "object",
          "period",
          "plan",
          "price",
          "proration",
          "quantity",
          "subscription",
          "tax_rates",
          "test_clock",
          "unit_amount",
          "unit_amount_decimal"
        ],
        "title": "InvoiceItem",
        "type": "object",
        "x-expandableFields": [
          "customer",
          "discounts",
          "invoice",
          "period",
          "plan",
          "price",
          "subscription",
          "tax_rates",
          "test_clock"
        ],
        "x-resourceId": "invoiceitem",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/invoiceitems"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/invoiceitems"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/invoiceitems/{invoiceitem}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/invoiceitems/{invoiceitem}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/invoiceitems/{invoiceitem}"
          }
        ],
        "x-stripeResource": {
          "class_name": "InvoiceItem",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "invoices_from_invoice": {
        "description": "",
        "properties": {
          "action": {
            "description": "The relation between this invoice and the cloned invoice",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "The invoice that was cloned.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          }
        },
        "required": [
          "action",
          "invoice"
        ],
        "title": "InvoicesFromInvoice",
        "type": "object",
        "x-expandableFields": [
          "invoice"
        ],
        "x-stripeResource": {
          "class_name": "FromInvoice",
          "in_class": "invoice"
        }
      },
      "invoices_line_items_credited_items": {
        "description": "",
        "properties": {
          "invoice": {
            "description": "Invoice containing the credited invoice line items",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice_line_items": {
            "description": "Credited invoice line items",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "invoice",
          "invoice_line_items"
        ],
        "title": "InvoicesLineItemsCreditedItems",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CreditedItems",
          "in_package": ""
        }
      },
      "invoices_line_items_proration_details": {
        "description": "",
        "properties": {
          "credited_items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoices_line_items_credited_items"
              }
            ],
            "description": "For a credit proration `line_item`, the original debit line_items to which the credit proration applies.",
            "nullable": true
          }
        },
        "required": [
          "credited_items"
        ],
        "title": "InvoicesLineItemsProrationDetails",
        "type": "object",
        "x-expandableFields": [
          "credited_items"
        ],
        "x-stripeResource": {
          "class_name": "ProrationDetails",
          "in_package": ""
        }
      },
      "invoices_payment_method_options": {
        "description": "",
        "properties": {
          "acss_debit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_acss_debit"
              }
            ],
            "description": "If paying by `acss_debit`, this sub-hash contains details about the Canadian pre-authorized debit payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "bancontact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_bancontact"
              }
            ],
            "description": "If paying by `bancontact`, this sub-hash contains details about the Bancontact payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "card": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_card"
              }
            ],
            "description": "If paying by `card`, this sub-hash contains details about the Card payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "customer_balance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_customer_balance"
              }
            ],
            "description": "If paying by `customer_balance`, this sub-hash contains details about the Bank transfer payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "konbini": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_konbini"
              }
            ],
            "description": "If paying by `konbini`, this sub-hash contains details about the Konbini payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "us_bank_account": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_us_bank_account"
              }
            ],
            "description": "If paying by `us_bank_account`, this sub-hash contains details about the ACH direct debit payment method options to pass to the invoice’s PaymentIntent.",
            "nullable": true
          }
        },
        "required": [
          "acss_debit",
          "bancontact",
          "card",
          "customer_balance",
          "konbini",
          "us_bank_account"
        ],
        "title": "InvoicesPaymentMethodOptions",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "bancontact",
          "card",
          "customer_balance",
          "konbini",
          "us_bank_account"
        ],
        "x-stripeResource": {
          "class_name": "PaymentMethodOptions",
          "in_class": "invoice",
          "inner_classes": [
            "invoice_payment_method_options_acss_debit",
            "invoice_payment_method_options_bancontact",
            "invoice_payment_method_options_card",
            "invoice_payment_method_options_customer_balance",
            "invoice_payment_method_options_konbini",
            "invoice_payment_method_options_us_bank_account"
          ]
        }
      },
      "invoices_payment_settings": {
        "description": "",
        "properties": {
          "default_mandate": {
            "description": "ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the invoice's default_payment_method or default_source, if set.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payment_method_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoices_payment_method_options"
              }
            ],
            "description": "Payment-method-specific configuration to provide to the invoice’s PaymentIntent.",
            "nullable": true
          },
          "payment_method_types": {
            "description": "The list of payment method types (e.g. card) to provide to the invoice’s PaymentIntent. If not set, Stripe attempts to automatically determine the types to use by looking at the invoice’s default payment method, the subscription’s default payment method, the customer’s default payment method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).",
            "items": {
              "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "boleto",
                "card",
                "customer_balance",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "konbini",
                "link",
                "paynow",
                "promptpay",
                "sepa_credit_transfer",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "default_mandate",
          "payment_method_options",
          "payment_method_types"
        ],
        "title": "InvoicesPaymentSettings",
        "type": "object",
        "x-expandableFields": [
          "payment_method_options"
        ],
        "x-stripeResource": {
          "class_name": "PaymentSettings",
          "in_class": "invoice"
        }
      },
      "invoices_resource_invoice_tax_id": {
        "description": "",
        "properties": {
          "type": {
            "description": "The type of the tax ID, one of `eu_vat`, `br_cnpj`, `br_cpf`, `eu_oss_vat`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, or `unknown`",
            "enum": [
              "ae_trn",
              "au_abn",
              "au_arn",
              "bg_uic",
              "br_cnpj",
              "br_cpf",
              "ca_bn",
              "ca_gst_hst",
              "ca_pst_bc",
              "ca_pst_mb",
              "ca_pst_sk",
              "ca_qst",
              "ch_vat",
              "cl_tin",
              "eg_tin",
              "es_cif",
              "eu_oss_vat",
              "eu_vat",
              "gb_vat",
              "ge_vat",
              "hk_br",
              "hu_tin",
              "id_npwp",
              "il_vat",
              "in_gst",
              "is_vat",
              "jp_cn",
              "jp_rn",
              "jp_trn",
              "ke_pin",
              "kr_brn",
              "li_uid",
              "mx_rfc",
              "my_frp",
              "my_itn",
              "my_sst",
              "no_vat",
              "nz_gst",
              "ph_tin",
              "ru_inn",
              "ru_kpp",
              "sa_vat",
              "sg_gst",
              "sg_uen",
              "si_tin",
              "th_vat",
              "tr_tin",
              "tw_vat",
              "ua_vat",
              "unknown",
              "us_ein",
              "za_vat"
            ],
            "type": "string"
          },
          "value": {
            "description": "The value of the tax ID.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ],
        "title": "InvoicesResourceInvoiceTaxID",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CustomerTaxId",
          "in_class": "invoice"
        }
      },
      "invoices_status_transitions": {
        "description": "",
        "properties": {
          "finalized_at": {
            "description": "The time that the invoice draft was finalized.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "marked_uncollectible_at": {
            "description": "The time that the invoice was marked uncollectible.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "paid_at": {
            "description": "The time that the invoice was paid.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "voided_at": {
            "description": "The time that the invoice was voided.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "finalized_at",
          "marked_uncollectible_at",
          "paid_at",
          "voided_at"
        ],
        "title": "InvoicesStatusTransitions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "StatusTransitions",
          "in_class": "invoice"
        }
      },
      "item": {
        "description": "A line item.",
        "properties": {
          "amount_discount": {
            "description": "Total discount amount applied. If no discounts were applied, defaults to 0.",
            "type": "integer"
          },
          "amount_subtotal": {
            "description": "Total before any discounts or taxes are applied.",
            "type": "integer"
          },
          "amount_tax": {
            "description": "Total tax amount applied. If no tax was applied, defaults to 0.",
            "type": "integer"
          },
          "amount_total": {
            "description": "Total after discounts and taxes.",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users. Defaults to product name.",
            "maxLength": 5000,
            "type": "string"
          },
          "discounts": {
            "description": "The discounts applied to the line item.",
            "items": {
              "$ref": "#/components/schemas/line_items_discount_amount"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "item"
            ],
            "type": "string"
          },
          "price": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/price"
              }
            ],
            "description": "The price used to generate the line item.",
            "nullable": true
          },
          "product": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/product"
              },
              {
                "$ref": "#/components/schemas/deleted_product"
              }
            ],
            "description": "The ID of the product for this line item.\n\nThis will always be the same as `price.product`.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/product"
                },
                {
                  "$ref": "#/components/schemas/deleted_product"
                }
              ]
            }
          },
          "quantity": {
            "description": "The quantity of products being purchased.",
            "nullable": true,
            "type": "integer"
          },
          "taxes": {
            "description": "The taxes applied to the line item.",
            "items": {
              "$ref": "#/components/schemas/line_items_tax_amount"
            },
            "type": "array"
          }
        },
        "required": [
          "amount_discount",
          "amount_subtotal",
          "amount_tax",
          "amount_total",
          "currency",
          "description",
          "id",
          "object",
          "price",
          "quantity"
        ],
        "title": "LineItem",
        "type": "object",
        "x-expandableFields": [
          "discounts",
          "price",
          "product",
          "taxes"
        ],
        "x-resourceId": "item",
        "x-stripeResource": {
          "class_name": "LineItem",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "line_items_discount_amount",
            "line_items_tax_amount"
          ]
        }
      },
      "legal_entity_company": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "address_kana": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "description": "The Kana variation of the company's primary address (Japan only).",
            "nullable": true
          },
          "address_kanji": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "description": "The Kanji variation of the company's primary address (Japan only).",
            "nullable": true
          },
          "directors_provided": {
            "description": "Whether the company's directors have been provided. This Boolean will be `true` if you've manually indicated that all directors are provided via [the `directors_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided).",
            "type": "boolean"
          },
          "executives_provided": {
            "description": "Whether the company's executives have been provided. This Boolean will be `true` if you've manually indicated that all executives are provided via [the `executives_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-executives_provided), or if Stripe determined that sufficient executives were provided.",
            "type": "boolean"
          },
          "name": {
            "description": "The company's legal name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name_kana": {
            "description": "The Kana variation of the company's legal name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name_kanji": {
            "description": "The Kanji variation of the company's legal name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "owners_provided": {
            "description": "Whether the company's owners have been provided. This Boolean will be `true` if you've manually indicated that all owners are provided via [the `owners_provided` parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided), or if Stripe determined that sufficient owners were provided. Stripe determines ownership requirements using both the number of owners provided and their total percent ownership (calculated by adding the `percent_ownership` of each owner together).",
            "type": "boolean"
          },
          "ownership_declaration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_ubo_declaration"
              }
            ],
            "description": "This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct.",
            "nullable": true
          },
          "phone": {
            "description": "The company's phone number (used for verification).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "structure": {
            "description": "The category identifying the legal structure of the company or legal entity. See [Business structure](https://stripe.com/docs/connect/identity-verification#business-structure) for more details.",
            "enum": [
              "free_zone_establishment",
              "free_zone_llc",
              "government_instrumentality",
              "governmental_unit",
              "incorporated_non_profit",
              "limited_liability_partnership",
              "llc",
              "multi_member_llc",
              "private_company",
              "private_corporation",
              "private_partnership",
              "public_company",
              "public_corporation",
              "public_partnership",
              "single_member_llc",
              "sole_establishment",
              "sole_proprietorship",
              "tax_exempt_government_instrumentality",
              "unincorporated_association",
              "unincorporated_non_profit"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "tax_id_provided": {
            "description": "Whether the company's business ID number was provided.",
            "type": "boolean"
          },
          "tax_id_registrar": {
            "description": "The jurisdiction in which the `tax_id` is registered (Germany-based companies only).",
            "maxLength": 5000,
            "type": "string"
          },
          "vat_id_provided": {
            "description": "Whether the company's business VAT number was provided.",
            "type": "boolean"
          },
          "verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_company_verification"
              }
            ],
            "description": "Information on the verification state of the company.",
            "nullable": true
          }
        },
        "title": "LegalEntityCompany",
        "type": "object",
        "x-expandableFields": [
          "address",
          "address_kana",
          "address_kanji",
          "ownership_declaration",
          "verification"
        ],
        "x-stripeResource": {
          "class_name": "Company",
          "in_class": "account",
          "inner_classes": [
            "legal_entity_company_verification",
            "legal_entity_ubo_declaration"
          ]
        }
      },
      "legal_entity_company_verification": {
        "description": "",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/legal_entity_company_verification_document"
          }
        },
        "required": [
          "document"
        ],
        "title": "LegalEntityCompanyVerification",
        "type": "object",
        "x-expandableFields": [
          "document"
        ],
        "x-stripeResource": {
          "class_name": "Verification",
          "in_class": "legal_entity_company",
          "inner_classes": [
            "legal_entity_company_verification_document"
          ]
        }
      },
      "legal_entity_company_verification_document": {
        "description": "",
        "properties": {
          "back": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "details": {
            "description": "A user-displayable string describing the verification state of this document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "details_code": {
            "description": "One of `document_corrupt`, `document_expired`, `document_failed_copy`, `document_failed_greyscale`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_not_readable`, `document_not_uploaded`, `document_type_not_supported`, or `document_too_large`. A machine-readable code specifying the verification state for this document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "front": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          }
        },
        "required": [
          "back",
          "details",
          "details_code",
          "front"
        ],
        "title": "LegalEntityCompanyVerificationDocument",
        "type": "object",
        "x-expandableFields": [
          "back",
          "front"
        ],
        "x-stripeResource": {
          "class_name": "VerificationDocument",
          "in_class": "legal_entity_company_verification"
        }
      },
      "legal_entity_dob": {
        "description": "",
        "properties": {
          "day": {
            "description": "The day of birth, between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "The month of birth, between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year of birth.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "day",
          "month",
          "year"
        ],
        "title": "LegalEntityDOB",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DateOfBirth",
          "in_class": "person"
        }
      },
      "legal_entity_japan_address": {
        "description": "",
        "properties": {
          "city": {
            "description": "City/Ward.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line1": {
            "description": "Block/Building number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line2": {
            "description": "Building details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "postal_code": {
            "description": "ZIP or postal code.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "state": {
            "description": "Prefecture.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "town": {
            "description": "Town/cho-me.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "city",
          "country",
          "line1",
          "line2",
          "postal_code",
          "state",
          "town"
        ],
        "title": "LegalEntityJapanAddress",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "JapanAddress",
          "in_class": "person"
        }
      },
      "legal_entity_person_verification": {
        "description": "",
        "properties": {
          "additional_document": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_person_verification_document"
              }
            ],
            "description": "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company.",
            "nullable": true
          },
          "details": {
            "description": "A user-displayable string describing the verification state for the person. For example, this may say \"Provided identity information could not be verified\".",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "details_code": {
            "description": "One of `document_address_mismatch`, `document_dob_mismatch`, `document_duplicate_type`, `document_id_number_mismatch`, `document_name_mismatch`, `document_nationality_mismatch`, `failed_keyed_identity`, or `failed_other`. A machine-readable code specifying the verification state for the person.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "document": {
            "$ref": "#/components/schemas/legal_entity_person_verification_document"
          },
          "status": {
            "description": "The state of verification for the person. Possible values are `unverified`, `pending`, or `verified`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "LegalEntityPersonVerification",
        "type": "object",
        "x-expandableFields": [
          "additional_document",
          "document"
        ],
        "x-stripeResource": {
          "class_name": "Verification",
          "in_class": "person"
        }
      },
      "legal_entity_person_verification_document": {
        "description": "",
        "properties": {
          "back": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          },
          "details": {
            "description": "A user-displayable string describing the verification state of this document. For example, if a document is uploaded and the picture is too fuzzy, this may say \"Identity document is too unclear to read\".",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "details_code": {
            "description": "One of `document_corrupt`, `document_country_not_supported`, `document_expired`, `document_failed_copy`, `document_failed_other`, `document_failed_test_mode`, `document_fraudulent`, `document_failed_greyscale`, `document_incomplete`, `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`, `document_not_readable`, `document_not_uploaded`, `document_photo_mismatch`, `document_too_large`, or `document_type_not_supported`. A machine-readable code specifying the verification state for this document.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "front": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          }
        },
        "required": [
          "back",
          "details",
          "details_code",
          "front"
        ],
        "title": "LegalEntityPersonVerificationDocument",
        "type": "object",
        "x-expandableFields": [
          "back",
          "front"
        ],
        "x-stripeResource": {
          "class_name": "VerificationDocument",
          "in_class": "person"
        }
      },
      "legal_entity_ubo_declaration": {
        "description": "",
        "properties": {
          "date": {
            "description": "The Unix timestamp marking when the beneficial owner attestation was made.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "ip": {
            "description": "The IP address from which the beneficial owner attestation was made.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user-agent string from the browser where the beneficial owner attestation was made.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "date",
          "ip",
          "user_agent"
        ],
        "title": "LegalEntityUBODeclaration",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "OwnershipDeclaration",
          "in_class": "legal_entity_company"
        }
      },
      "level3": {
        "description": "",
        "properties": {
          "customer_reference": {
            "maxLength": 5000,
            "type": "string"
          },
          "line_items": {
            "items": {
              "$ref": "#/components/schemas/level3_line_items"
            },
            "type": "array"
          },
          "merchant_reference": {
            "maxLength": 5000,
            "type": "string"
          },
          "shipping_address_zip": {
            "maxLength": 5000,
            "type": "string"
          },
          "shipping_amount": {
            "type": "integer"
          },
          "shipping_from_zip": {
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "line_items",
          "merchant_reference"
        ],
        "title": "Level3",
        "type": "object",
        "x-expandableFields": [
          "line_items"
        ],
        "x-stripeResource": {
          "class_name": "Level3",
          "in_class": "charge",
          "inner_classes": [
            "level3_line_items"
          ]
        }
      },
      "level3_line_items": {
        "description": "",
        "properties": {
          "discount_amount": {
            "nullable": true,
            "type": "integer"
          },
          "product_code": {
            "maxLength": 5000,
            "type": "string"
          },
          "product_description": {
            "maxLength": 5000,
            "type": "string"
          },
          "quantity": {
            "nullable": true,
            "type": "integer"
          },
          "tax_amount": {
            "nullable": true,
            "type": "integer"
          },
          "unit_cost": {
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "discount_amount",
          "product_code",
          "product_description",
          "quantity",
          "tax_amount",
          "unit_cost"
        ],
        "title": "Level3LineItems",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "LineItem",
          "in_class": "level3"
        }
      },
      "line_item": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount, in %s.",
            "type": "integer"
          },
          "amount_excluding_tax": {
            "description": "The integer amount in %s representing the amount for this line item, excluding all tax and discounts.",
            "nullable": true,
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discount_amounts": {
            "description": "The amount of discount calculated per discount for this line item.",
            "items": {
              "$ref": "#/components/schemas/discounts_resource_discount_amount"
            },
            "nullable": true,
            "type": "array"
          },
          "discountable": {
            "description": "If true, discounts will apply to this line item. Always false for prorations.",
            "type": "boolean"
          },
          "discounts": {
            "description": "The discounts applied to the invoice line item. Line item discounts are applied before invoice discounts. Use `expand[]=discounts` to expand each discount.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  }
                ]
              }
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice_item": {
            "description": "The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems) associated with this line item if any.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with `type=subscription` this will reflect the metadata of the subscription that caused the line item to be created.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "line_item"
            ],
            "type": "string"
          },
          "period": {
            "$ref": "#/components/schemas/invoice_line_item_period"
          },
          "plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/plan"
              }
            ],
            "description": "The plan of the subscription, if the line item is a subscription or a proration.",
            "nullable": true
          },
          "price": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/price"
              }
            ],
            "description": "The price of the line item.",
            "nullable": true
          },
          "proration": {
            "description": "Whether this is a proration.",
            "type": "boolean"
          },
          "proration_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoices_line_items_proration_details"
              }
            ],
            "description": "Additional details for proration line items",
            "nullable": true
          },
          "quantity": {
            "description": "The quantity of the subscription, if the line item is a subscription or a proration.",
            "nullable": true,
            "type": "integer"
          },
          "subscription": {
            "description": "The subscription that the invoice item pertains to, if any.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "subscription_item": {
            "description": "The subscription item that generated this invoice item. Left empty if the line item is not an explicit result of a subscription.",
            "maxLength": 5000,
            "type": "string"
          },
          "tax_amounts": {
            "description": "The amount of tax calculated per tax rate for this line item",
            "items": {
              "$ref": "#/components/schemas/invoice_tax_amount"
            },
            "type": "array"
          },
          "tax_rates": {
            "description": "The tax rates which apply to the line item.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "type": "array"
          },
          "type": {
            "description": "A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`.",
            "enum": [
              "invoiceitem",
              "subscription"
            ],
            "type": "string"
          },
          "unit_amount_excluding_tax": {
            "description": "The amount in %s representing the unit amount for this line item, excluding all tax and discounts.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "amount_excluding_tax",
          "currency",
          "description",
          "discount_amounts",
          "discountable",
          "discounts",
          "id",
          "livemode",
          "metadata",
          "object",
          "period",
          "plan",
          "price",
          "proration",
          "proration_details",
          "quantity",
          "subscription",
          "type",
          "unit_amount_excluding_tax"
        ],
        "title": "InvoiceLineItem",
        "type": "object",
        "x-expandableFields": [
          "discount_amounts",
          "discounts",
          "period",
          "plan",
          "price",
          "proration_details",
          "tax_amounts",
          "tax_rates"
        ],
        "x-resourceId": "line_item",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/invoices/{invoice}/lines"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/invoices/{invoice}/lines"
          }
        ],
        "x-stripeResource": {
          "class_name": "InvoiceLineItem",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "line_items_discount_amount": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount discounted.",
            "type": "integer"
          },
          "discount": {
            "$ref": "#/components/schemas/discount"
          }
        },
        "required": [
          "amount",
          "discount"
        ],
        "title": "LineItemsDiscountAmount",
        "type": "object",
        "x-expandableFields": [
          "discount"
        ],
        "x-stripeResource": {
          "class_name": "Discount",
          "in_class": "item"
        }
      },
      "line_items_tax_amount": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount of tax applied for this rate.",
            "type": "integer"
          },
          "rate": {
            "$ref": "#/components/schemas/tax_rate"
          }
        },
        "required": [
          "amount",
          "rate"
        ],
        "title": "LineItemsTaxAmount",
        "type": "object",
        "x-expandableFields": [
          "rate"
        ],
        "x-stripeResource": {
          "class_name": "Tax",
          "in_class": "item"
        }
      },
      "linked_account_options_us_bank_account": {
        "description": "",
        "properties": {
          "permissions": {
            "description": "The list of permissions to request. The `payment_method` permission must be included.",
            "items": {
              "enum": [
                "balances",
                "ownership",
                "payment_method",
                "transactions"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "return_url": {
            "description": "For webview integrations only. Upon completing OAuth login in the native browser, the user will be redirected to this URL to return to your app.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "linked_account_options_us_bank_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "FinancialConnections",
          "in_class": "payment_intent_payment_method_options_us_bank_account"
        }
      },
      "login_link": {
        "description": "",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "login_link"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL for the login link.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "created",
          "object",
          "url"
        ],
        "title": "LoginLink",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "login_link",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/accounts/{account}/login_links"
          }
        ],
        "x-stripeResource": {
          "class_name": "LoginLink",
          "in_package": ""
        }
      },
      "mandate": {
        "description": "A Mandate is a record of the permission a customer has given you to debit their payment method.",
        "properties": {
          "customer_acceptance": {
            "$ref": "#/components/schemas/customer_acceptance"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "multi_use": {
            "$ref": "#/components/schemas/mandate_multi_use"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "mandate"
            ],
            "type": "string"
          },
          "payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the payment method associated with this mandate.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "payment_method_details": {
            "$ref": "#/components/schemas/mandate_payment_method_details"
          },
          "single_use": {
            "$ref": "#/components/schemas/mandate_single_use"
          },
          "status": {
            "description": "The status of the mandate, which indicates whether it can be used to initiate a payment.",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "type": "string"
          },
          "type": {
            "description": "The type of the mandate.",
            "enum": [
              "multi_use",
              "single_use"
            ],
            "type": "string"
          }
        },
        "required": [
          "customer_acceptance",
          "id",
          "livemode",
          "object",
          "payment_method",
          "payment_method_details",
          "status",
          "type"
        ],
        "title": "Mandate",
        "type": "object",
        "x-expandableFields": [
          "customer_acceptance",
          "multi_use",
          "payment_method",
          "payment_method_details",
          "single_use"
        ],
        "x-resourceId": "mandate",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/mandates/{mandate}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Mandate",
          "in_package": "",
          "inner_classes": [
            "customer_acceptance",
            "mandate_au_becs_debit",
            "mandate_bacs_debit",
            "mandate_multi_use",
            "mandate_payment_method_details",
            "mandate_single_use"
          ]
        }
      },
      "mandate_acss_debit": {
        "description": "",
        "properties": {
          "default_for": {
            "description": "List of Stripe products where this mandate can be selected automatically.",
            "items": {
              "enum": [
                "invoice",
                "subscription"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "interval_description": {
            "description": "Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payment_schedule": {
            "description": "Payment schedule for the mandate.",
            "enum": [
              "combined",
              "interval",
              "sporadic"
            ],
            "type": "string"
          },
          "transaction_type": {
            "description": "Transaction type of the mandate.",
            "enum": [
              "business",
              "personal"
            ],
            "type": "string"
          }
        },
        "required": [
          "interval_description",
          "payment_schedule",
          "transaction_type"
        ],
        "title": "mandate_acss_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AcssDebit",
          "in_class": "mandate_payment_method_details"
        }
      },
      "mandate_au_becs_debit": {
        "description": "",
        "properties": {
          "url": {
            "description": "The URL of the mandate. This URL generally contains sensitive information about the customer and should be shared with them exclusively.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "title": "mandate_au_becs_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AuBecsDebit",
          "in_class": "mandate"
        }
      },
      "mandate_bacs_debit": {
        "description": "",
        "properties": {
          "network_status": {
            "description": "The status of the mandate on the Bacs network. Can be one of `pending`, `revoked`, `refused`, or `accepted`.",
            "enum": [
              "accepted",
              "pending",
              "refused",
              "revoked"
            ],
            "type": "string"
          },
          "reference": {
            "description": "The unique reference identifying the mandate on the Bacs network.",
            "maxLength": 5000,
            "type": "string"
          },
          "url": {
            "description": "The URL that will contain the mandate that the customer has signed.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "network_status",
          "reference",
          "url"
        ],
        "title": "mandate_bacs_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BacsDebit",
          "in_class": "mandate"
        }
      },
      "mandate_blik": {
        "description": "",
        "properties": {
          "expires_after": {
            "description": "Date at which the mandate expires.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "off_session": {
            "$ref": "#/components/schemas/mandate_options_off_session_details_blik"
          },
          "type": {
            "description": "Type of the mandate.",
            "enum": [
              "off_session",
              "on_session"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "expires_after",
          "type"
        ],
        "title": "mandate_blik",
        "type": "object",
        "x-expandableFields": [
          "off_session"
        ],
        "x-stripeResource": {
          "class_name": "Blik",
          "in_class": "mandate_payment_method_details"
        }
      },
      "mandate_link": {
        "description": "",
        "properties": {},
        "title": "mandate_link",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Link",
          "in_class": "mandate_payment_method_details"
        }
      },
      "mandate_multi_use": {
        "description": "",
        "properties": {},
        "title": "mandate_multi_use",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "MultiUse",
          "in_class": "mandate"
        }
      },
      "mandate_options_off_session_details_blik": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount of each recurring payment.",
            "nullable": true,
            "type": "integer"
          },
          "currency": {
            "description": "Currency of each recurring payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "interval": {
            "description": "Frequency interval of each recurring payment.",
            "enum": [
              "day",
              "month",
              "week",
              "year"
            ],
            "nullable": true,
            "type": "string"
          },
          "interval_count": {
            "description": "Frequency indicator of each recurring payment.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "amount",
          "currency",
          "interval",
          "interval_count"
        ],
        "title": "mandate_options_off_session_details_blik",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BlikMandateOptionsOffSessionDetails",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "mandate_payment_method_details": {
        "description": "",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/mandate_acss_debit"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/mandate_au_becs_debit"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/mandate_bacs_debit"
          },
          "blik": {
            "$ref": "#/components/schemas/mandate_blik"
          },
          "card": {
            "$ref": "#/components/schemas/card_mandate_payment_method_details"
          },
          "link": {
            "$ref": "#/components/schemas/mandate_link"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/mandate_sepa_debit"
          },
          "type": {
            "description": "The type of the payment method associated with this mandate. An additional hash is included on `payment_method_details` with a name matching this value. It contains mandate information specific to the payment method.",
            "maxLength": 5000,
            "type": "string"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/mandate_us_bank_account"
          }
        },
        "required": [
          "type"
        ],
        "title": "mandate_payment_method_details",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "au_becs_debit",
          "bacs_debit",
          "blik",
          "card",
          "link",
          "sepa_debit",
          "us_bank_account"
        ],
        "x-stripeResource": {
          "class_name": "PaymentMethodDetails",
          "in_class": "mandate",
          "inner_classes": [
            "card_mandate_payment_method_details",
            "mandate_acss_debit",
            "mandate_blik",
            "mandate_link",
            "mandate_sepa_debit",
            "mandate_us_bank_account"
          ]
        }
      },
      "mandate_sepa_debit": {
        "description": "",
        "properties": {
          "reference": {
            "description": "The unique reference of the mandate.",
            "maxLength": 5000,
            "type": "string"
          },
          "url": {
            "description": "The URL of the mandate. This URL generally contains sensitive information about the customer and should be shared with them exclusively.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "reference",
          "url"
        ],
        "title": "mandate_sepa_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SepaDebit",
          "in_class": "mandate_payment_method_details"
        }
      },
      "mandate_single_use": {
        "description": "",
        "properties": {
          "amount": {
            "description": "On a single use mandate, the amount of the payment.",
            "type": "integer"
          },
          "currency": {
            "description": "On a single use mandate, the currency of the payment.",
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "title": "mandate_single_use",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SingleUse",
          "in_class": "mandate"
        }
      },
      "mandate_us_bank_account": {
        "description": "",
        "properties": {},
        "title": "mandate_us_bank_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "UsBankAccount",
          "in_class": "mandate_payment_method_details"
        }
      },
      "networks": {
        "description": "",
        "properties": {
          "available": {
            "description": "All available networks for the card.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "preferred": {
            "description": "The preferred network for the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "available",
          "preferred"
        ],
        "title": "networks",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Networks",
          "in_class": "payment_method_card"
        }
      },
      "notification_event_data": {
        "description": "",
        "properties": {
          "object": {
            "description": "Object containing the API resource relevant to the event. For example, an `invoice.created` event will have a full [invoice object](https://stripe.com/docs/api#invoice_object) as the value of the object key.",
            "type": "object"
          },
          "previous_attributes": {
            "description": "Object containing the names of the attributes that have changed, and their previous values (sent along only with *.updated events).",
            "type": "object"
          }
        },
        "required": [
          "object"
        ],
        "title": "NotificationEventData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "EventData",
          "in_package": ""
        }
      },
      "notification_event_request": {
        "description": "",
        "properties": {
          "id": {
            "description": "ID of the API request that caused the event. If null, the event was automatic (e.g., Stripe's automatic subscription handling). Request logs are available in the [dashboard](https://dashboard.stripe.com/logs), but currently not in the API.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "idempotency_key": {
            "description": "The idempotency key transmitted during the request, if any. *Note: This property is populated only for events on or after May 23, 2017*.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id",
          "idempotency_key"
        ],
        "title": "NotificationEventRequest",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "EventRequest",
          "in_package": ""
        }
      },
      "offline_acceptance": {
        "description": "",
        "properties": {},
        "title": "offline_acceptance",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Offline",
          "in_class": "customer_acceptance"
        }
      },
      "online_acceptance": {
        "description": "",
        "properties": {
          "ip_address": {
            "description": "The IP address from which the Mandate was accepted by the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "user_agent": {
            "description": "The user agent of the browser from which the Mandate was accepted by the customer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "ip_address",
          "user_agent"
        ],
        "title": "online_acceptance",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Online",
          "in_class": "customer_acceptance"
        }
      },
      "order": {
        "description": "An Order describes a purchase being made by a customer, including the\nproducts & quantities being purchased, the order status, the payment information,\nand the billing/shipping details.\n\nRelated guide: [Orders overview](https://stripe.com/docs/orders)",
        "properties": {
          "amount_subtotal": {
            "description": "Order cost before any discounts or taxes are applied. A positive integer representing the subtotal of the order in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).",
            "type": "integer"
          },
          "amount_total": {
            "description": "Total order cost after discounts and taxes are applied. A positive integer representing the cost of the order in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). To submit an order, the total must be either 0 or at least $0.50 USD or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).",
            "type": "integer"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              }
            ],
            "description": "ID of the Connect application that created the Order, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                }
              ]
            }
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/orders_v2_resource_automatic_tax"
          },
          "billing_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/orders_v2_resource_billing_details"
              }
            ],
            "description": "Customer billing details associated with the order.",
            "nullable": true
          },
          "client_secret": {
            "description": "The client secret of this Order. Used for client-side retrieval using a publishable key. \n\nThe client secret can be used to complete a payment for an Order from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret. \n\nRefer to our docs for [creating and processing an order](https://stripe.com/docs/orders-beta/create-and-process) to learn about how client_secret should be handled.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The customer which this orders belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discounts": {
            "description": "The discounts applied to the order. Use `expand[]=discounts` to expand each discount.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  }
                ]
              }
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "ip_address": {
            "description": "A recent IP address of the purchaser used for tax reporting and tax location inference.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "line_items": {
            "description": "A list of line items the customer is ordering. Each line item includes information about the product, the quantity, and the resulting cost. There is a maximum of 100 line items.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "OrdersV2ResourceLineItemList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "order"
            ],
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/orders_v2_resource_payment"
          },
          "shipping_cost": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/orders_v2_resource_shipping_cost"
              }
            ],
            "description": "The details of the customer cost of shipping, including the customer chosen ShippingRate.",
            "nullable": true
          },
          "shipping_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/orders_v2_resource_shipping_details"
              }
            ],
            "description": "Customer shipping information associated with the order.",
            "nullable": true
          },
          "status": {
            "description": "The overall status of the order.",
            "enum": [
              "canceled",
              "complete",
              "open",
              "processing",
              "submitted"
            ],
            "type": "string"
          },
          "tax_details": {
            "$ref": "#/components/schemas/orders_v2_resource_tax_details"
          },
          "total_details": {
            "$ref": "#/components/schemas/orders_v2_resource_total_details"
          }
        },
        "required": [
          "amount_subtotal",
          "amount_total",
          "application",
          "billing_details",
          "client_secret",
          "created",
          "currency",
          "customer",
          "description",
          "discounts",
          "id",
          "ip_address",
          "livemode",
          "metadata",
          "object",
          "payment",
          "shipping_cost",
          "shipping_details",
          "status",
          "total_details"
        ],
        "title": "OrdersV2ResourceOrder",
        "type": "object",
        "x-expandableFields": [
          "application",
          "automatic_tax",
          "billing_details",
          "customer",
          "discounts",
          "line_items",
          "payment",
          "shipping_cost",
          "shipping_details",
          "tax_details",
          "total_details"
        ],
        "x-resourceId": "order",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/orders"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/orders"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/orders/{id}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/orders/{id}"
          },
          {
            "method_name": "submit",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/orders/{id}/submit"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/orders/{id}/cancel"
          },
          {
            "method_name": "reopen",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/orders/{id}/reopen"
          },
          {
            "method_name": "list_line_items",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/orders/{id}/line_items"
          }
        ],
        "x-stripeResource": {
          "class_name": "Order",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "orders_v2_resource_automatic_tax",
            "orders_v2_resource_billing_details",
            "orders_v2_resource_payment",
            "orders_v2_resource_shipping_cost",
            "orders_v2_resource_shipping_details",
            "orders_v2_resource_tax_details",
            "orders_v2_resource_total_details"
          ]
        }
      },
      "orders_payment_method_options_afterpay_clearpay": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "automatic",
              "manual"
            ],
            "type": "string"
          },
          "reference": {
            "description": "Order identifier shown to the user in Afterpay's online portal. We recommend using a value that helps you answer any questions a customer might have about the payment. The identifier is limited to 128 characters and may contain only letters, digits, underscores, backslashes and dashes.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with the payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the order's Customer, if present, after the order's PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).\n\nIf `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "reference"
        ],
        "title": "orders_payment_method_options_afterpay_clearpay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AfterpayClearpay",
          "in_class": "orders_v2_resource_payment_method_options"
        }
      },
      "orders_v2_resource_automatic_payment_methods": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether this Order has been opted into managing payment method types via the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "OrdersV2ResourceAutomaticPaymentMethods",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AutomaticPaymentMethods",
          "in_class": "orders_v2_resource_payment_settings"
        }
      },
      "orders_v2_resource_automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Stripe automatically computes tax on this Order.",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the most recent automated tax calculation for this Order.",
            "enum": [
              "complete",
              "failed",
              "requires_location_inputs"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "enabled",
          "status"
        ],
        "title": "OrdersV2ResourceAutomaticTax",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AutomaticTax",
          "in_class": "order"
        }
      },
      "orders_v2_resource_billing_details": {
        "description": "",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Billing address for the order.",
            "nullable": true
          },
          "email": {
            "description": "Email address for the order.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Full name for the order.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "Billing phone number for the order (including extension).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "email",
          "name",
          "phone"
        ],
        "title": "OrdersV2ResourceBillingDetails",
        "type": "object",
        "x-expandableFields": [
          "address"
        ],
        "x-stripeResource": {
          "class_name": "BillingDetails",
          "in_class": "order"
        }
      },
      "orders_v2_resource_card_payment_method_options": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "automatic",
              "manual"
            ],
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with the payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the order's Customer, if present, after the order's PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).\n\nIf `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          }
        },
        "required": [
          "capture_method"
        ],
        "title": "OrdersV2ResourceCardPaymentMethodOptions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Card",
          "in_class": "orders_v2_resource_payment_method_options"
        }
      },
      "orders_v2_resource_payment": {
        "description": "",
        "properties": {
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "ID of the payment intent associated with this order. Null when the order is `open`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/orders_v2_resource_payment_settings"
              }
            ],
            "description": "Settings describing how the order should configure generated PaymentIntents.",
            "nullable": true
          },
          "status": {
            "description": "The status of the underlying payment associated with this order, if any. Null when the order is `open`.",
            "enum": [
              "canceled",
              "complete",
              "not_required",
              "processing",
              "requires_action",
              "requires_capture",
              "requires_confirmation",
              "requires_payment_method"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "payment_intent",
          "settings",
          "status"
        ],
        "title": "OrdersV2ResourcePayment",
        "type": "object",
        "x-expandableFields": [
          "payment_intent",
          "settings"
        ],
        "x-stripeResource": {
          "class_name": "Payment",
          "in_class": "order",
          "inner_classes": [
            "orders_v2_resource_payment_settings"
          ]
        }
      },
      "orders_v2_resource_payment_method_options": {
        "description": "",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_acss_debit"
          },
          "afterpay_clearpay": {
            "$ref": "#/components/schemas/orders_payment_method_options_afterpay_clearpay"
          },
          "alipay": {
            "$ref": "#/components/schemas/payment_method_options_alipay"
          },
          "bancontact": {
            "$ref": "#/components/schemas/payment_method_options_bancontact"
          },
          "card": {
            "$ref": "#/components/schemas/orders_v2_resource_card_payment_method_options"
          },
          "customer_balance": {
            "$ref": "#/components/schemas/payment_method_options_customer_balance"
          },
          "ideal": {
            "$ref": "#/components/schemas/payment_method_options_ideal"
          },
          "klarna": {
            "$ref": "#/components/schemas/payment_method_options_klarna"
          },
          "link": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_link"
          },
          "oxxo": {
            "$ref": "#/components/schemas/payment_method_options_oxxo"
          },
          "p24": {
            "$ref": "#/components/schemas/payment_method_options_p24"
          },
          "paypal": {
            "$ref": "#/components/schemas/payment_method_options_paypal"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_sepa_debit"
          },
          "sofort": {
            "$ref": "#/components/schemas/payment_method_options_sofort"
          },
          "wechat_pay": {
            "$ref": "#/components/schemas/payment_method_options_wechat_pay"
          }
        },
        "title": "OrdersV2ResourcePaymentMethodOptions",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "afterpay_clearpay",
          "alipay",
          "bancontact",
          "card",
          "customer_balance",
          "ideal",
          "klarna",
          "link",
          "oxxo",
          "p24",
          "paypal",
          "sepa_debit",
          "sofort",
          "wechat_pay"
        ],
        "x-stripeResource": {
          "class_name": "PaymentMethodOptions",
          "in_class": "orders_v2_resource_payment_settings",
          "inner_classes": [
            "orders_payment_method_options_afterpay_clearpay",
            "orders_v2_resource_card_payment_method_options"
          ]
        }
      },
      "orders_v2_resource_payment_settings": {
        "description": "",
        "properties": {
          "application_fee_amount": {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account.",
            "nullable": true,
            "type": "integer"
          },
          "automatic_payment_methods": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/orders_v2_resource_automatic_payment_methods"
              }
            ],
            "description": "Indicates whether order has been opted into using [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods) to manage payment method types.",
            "nullable": true
          },
          "payment_method_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/orders_v2_resource_payment_method_options"
              }
            ],
            "description": "PaymentMethod-specific configuration to provide to the order's PaymentIntent.",
            "nullable": true
          },
          "payment_method_types": {
            "description": "The list of [payment method types](https://stripe.com/docs/payments/payment-methods/overview) to provide to the order's PaymentIntent. Do not include this attribute if you prefer to manage your payment methods from the [Stripe Dashboard](https://dashboard.stripe.com/settings/payment_methods).",
            "items": {
              "enum": [
                "acss_debit",
                "afterpay_clearpay",
                "alipay",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "card",
                "customer_balance",
                "eps",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "klarna",
                "link",
                "oxxo",
                "p24",
                "sepa_debit",
                "sofort",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "nullable": true,
            "type": "array"
          },
          "return_url": {
            "description": "The URL to redirect the customer to after they authenticate their payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "description": "For non-card charges, you can use this value as the complete description that appears on your customers' statements. Must contain at least one letter, maximum 22 characters.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor_suffix": {
            "description": "Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/orders_v2_resource_transfer_data"
              }
            ],
            "description": "Provides configuration for completing a transfer for the order after it is paid.",
            "nullable": true
          }
        },
        "required": [
          "application_fee_amount",
          "automatic_payment_methods",
          "payment_method_options",
          "payment_method_types",
          "return_url",
          "statement_descriptor",
          "statement_descriptor_suffix",
          "transfer_data"
        ],
        "title": "OrdersV2ResourcePaymentSettings",
        "type": "object",
        "x-expandableFields": [
          "automatic_payment_methods",
          "payment_method_options",
          "transfer_data"
        ],
        "x-stripeResource": {
          "class_name": "Settings",
          "in_class": "orders_v2_resource_payment",
          "inner_classes": [
            "orders_v2_resource_automatic_payment_methods",
            "orders_v2_resource_payment_method_options",
            "orders_v2_resource_transfer_data"
          ]
        }
      },
      "orders_v2_resource_shipping_cost": {
        "description": "",
        "properties": {
          "amount_subtotal": {
            "description": "Total shipping cost before any discounts or taxes are applied.",
            "type": "integer"
          },
          "amount_tax": {
            "description": "Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.",
            "type": "integer"
          },
          "amount_total": {
            "description": "Total shipping cost after discounts and taxes are applied.",
            "type": "integer"
          },
          "shipping_rate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/shipping_rate"
              }
            ],
            "description": "The ID of the ShippingRate for this order.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/shipping_rate"
                }
              ]
            }
          },
          "taxes": {
            "description": "The taxes applied to the shipping rate.",
            "items": {
              "$ref": "#/components/schemas/line_items_tax_amount"
            },
            "type": "array"
          }
        },
        "required": [
          "amount_subtotal",
          "amount_tax",
          "amount_total",
          "shipping_rate"
        ],
        "title": "OrdersV2ResourceShippingCost",
        "type": "object",
        "x-expandableFields": [
          "shipping_rate",
          "taxes"
        ],
        "x-stripeResource": {
          "class_name": "ShippingCost",
          "in_class": "order"
        }
      },
      "orders_v2_resource_shipping_details": {
        "description": "",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Recipient shipping address. Required if the order includes products that are shippable.",
            "nullable": true
          },
          "name": {
            "description": "Recipient name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "Recipient phone (including extension).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "name",
          "phone"
        ],
        "title": "OrdersV2ResourceShippingDetails",
        "type": "object",
        "x-expandableFields": [
          "address"
        ],
        "x-stripeResource": {
          "class_name": "ShippingDetails",
          "in_class": "order"
        }
      },
      "orders_v2_resource_tax_details": {
        "description": "",
        "properties": {
          "tax_exempt": {
            "description": "Describes the purchaser's tax exemption status. One of `none`, `exempt`, or `reverse`.",
            "enum": [
              "exempt",
              "none",
              "reverse"
            ],
            "type": "string"
          },
          "tax_ids": {
            "description": "The purchaser's tax IDs to be used in calculation of tax for this Order.",
            "items": {
              "$ref": "#/components/schemas/orders_v2_resource_tax_details_resource_tax_id"
            },
            "type": "array"
          }
        },
        "required": [
          "tax_exempt",
          "tax_ids"
        ],
        "title": "OrdersV2ResourceTaxDetails",
        "type": "object",
        "x-expandableFields": [
          "tax_ids"
        ],
        "x-stripeResource": {
          "class_name": "TaxDetails",
          "in_class": "order",
          "inner_classes": [
            "orders_v2_resource_tax_details_resource_tax_id"
          ]
        }
      },
      "orders_v2_resource_tax_details_resource_tax_id": {
        "description": "",
        "properties": {
          "type": {
            "description": "The type of the tax ID, one of `eu_vat`, `br_cnpj`, `br_cpf`, `eu_oss_vat`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, or `unknown`",
            "enum": [
              "ae_trn",
              "au_abn",
              "au_arn",
              "bg_uic",
              "br_cnpj",
              "br_cpf",
              "ca_bn",
              "ca_gst_hst",
              "ca_pst_bc",
              "ca_pst_mb",
              "ca_pst_sk",
              "ca_qst",
              "ch_vat",
              "cl_tin",
              "eg_tin",
              "es_cif",
              "eu_oss_vat",
              "eu_vat",
              "gb_vat",
              "ge_vat",
              "hk_br",
              "hu_tin",
              "id_npwp",
              "il_vat",
              "in_gst",
              "is_vat",
              "jp_cn",
              "jp_rn",
              "jp_trn",
              "ke_pin",
              "kr_brn",
              "li_uid",
              "mx_rfc",
              "my_frp",
              "my_itn",
              "my_sst",
              "no_vat",
              "nz_gst",
              "ph_tin",
              "ru_inn",
              "ru_kpp",
              "sa_vat",
              "sg_gst",
              "sg_uen",
              "si_tin",
              "th_vat",
              "tr_tin",
              "tw_vat",
              "ua_vat",
              "unknown",
              "us_ein",
              "za_vat"
            ],
            "type": "string"
          },
          "value": {
            "description": "The value of the tax ID.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ],
        "title": "OrdersV2ResourceTaxDetailsResourceTaxID",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "TaxID",
          "in_class": "orders_v2_resource_tax_details"
        }
      },
      "orders_v2_resource_total_details": {
        "description": "",
        "properties": {
          "amount_discount": {
            "description": "This is the sum of all the discounts.",
            "type": "integer"
          },
          "amount_shipping": {
            "description": "This is the sum of all the shipping amounts.",
            "nullable": true,
            "type": "integer"
          },
          "amount_tax": {
            "description": "This is the sum of all the tax amounts.",
            "type": "integer"
          },
          "breakdown": {
            "$ref": "#/components/schemas/orders_v2_resource_total_details_api_resource_breakdown"
          }
        },
        "required": [
          "amount_discount",
          "amount_shipping",
          "amount_tax"
        ],
        "title": "OrdersV2ResourceTotalDetails",
        "type": "object",
        "x-expandableFields": [
          "breakdown"
        ],
        "x-stripeResource": {
          "class_name": "TotalDetails",
          "in_class": "order",
          "inner_classes": [
            "orders_v2_resource_total_details_api_resource_breakdown"
          ]
        }
      },
      "orders_v2_resource_total_details_api_resource_breakdown": {
        "description": "",
        "properties": {
          "discounts": {
            "description": "The aggregated discounts.",
            "items": {
              "$ref": "#/components/schemas/line_items_discount_amount"
            },
            "type": "array"
          },
          "taxes": {
            "description": "The aggregated tax amounts by rate.",
            "items": {
              "$ref": "#/components/schemas/line_items_tax_amount"
            },
            "type": "array"
          }
        },
        "required": [
          "discounts",
          "taxes"
        ],
        "title": "OrdersV2ResourceTotalDetailsAPIResourceBreakdown",
        "type": "object",
        "x-expandableFields": [
          "discounts",
          "taxes"
        ],
        "x-stripeResource": {
          "class_name": "Breakdown",
          "in_class": "orders_v2_resource_total_details"
        }
      },
      "orders_v2_resource_transfer_data": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount that will be transferred automatically when the order is paid. If no amount is set, the full amount is transferred. There cannot be any line items with recurring prices when using this field.",
            "nullable": true,
            "type": "integer"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "ID of the Connected account receiving the transfer.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "destination"
        ],
        "title": "OrdersV2ResourceTransferData",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ],
        "x-stripeResource": {
          "class_name": "TransferData",
          "in_class": "orders_v2_resource_payment_settings"
        }
      },
      "outbound_payments_payment_method_details": {
        "description": "",
        "properties": {
          "billing_details": {
            "$ref": "#/components/schemas/treasury_shared_resource_billing_details"
          },
          "financial_account": {
            "$ref": "#/components/schemas/outbound_payments_payment_method_details_financial_account"
          },
          "type": {
            "description": "The type of the payment method used in the OutboundPayment.",
            "enum": [
              "financial_account",
              "us_bank_account"
            ],
            "type": "string"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/outbound_payments_payment_method_details_us_bank_account"
          }
        },
        "required": [
          "billing_details",
          "type"
        ],
        "title": "OutboundPaymentsPaymentMethodDetails",
        "type": "object",
        "x-expandableFields": [
          "billing_details",
          "financial_account",
          "us_bank_account"
        ],
        "x-stripeResource": {
          "class_name": "DestinationPaymentMethodDetails",
          "in_class": "treasury.outbound_payment",
          "inner_classes": [
            "outbound_payments_payment_method_details_financial_account",
            "outbound_payments_payment_method_details_us_bank_account"
          ]
        }
      },
      "outbound_payments_payment_method_details_financial_account": {
        "description": "",
        "properties": {
          "id": {
            "description": "Token of the FinancialAccount.",
            "maxLength": 5000,
            "type": "string"
          },
          "network": {
            "description": "The rails used to send funds.",
            "enum": [
              "stripe"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "network"
        ],
        "title": "outbound_payments_payment_method_details_financial_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "FinancialAccount",
          "in_class": "outbound_payments_payment_method_details"
        }
      },
      "outbound_payments_payment_method_details_us_bank_account": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Account holder type: individual or company.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "Account type: checkings or savings. Defaults to checking if omitted.",
            "enum": [
              "checking",
              "savings"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network": {
            "description": "The US bank account network used to send funds.",
            "enum": [
              "ach",
              "us_domestic_wire"
            ],
            "type": "string"
          },
          "routing_number": {
            "description": "Routing number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "account_holder_type",
          "account_type",
          "bank_name",
          "fingerprint",
          "last4",
          "network",
          "routing_number"
        ],
        "title": "outbound_payments_payment_method_details_us_bank_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "UsBankAccount",
          "in_class": "outbound_payments_payment_method_details"
        }
      },
      "outbound_transfers_payment_method_details": {
        "description": "",
        "properties": {
          "billing_details": {
            "$ref": "#/components/schemas/treasury_shared_resource_billing_details"
          },
          "type": {
            "description": "The type of the payment method used in the OutboundTransfer.",
            "enum": [
              "us_bank_account"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/outbound_transfers_payment_method_details_us_bank_account"
          }
        },
        "required": [
          "billing_details",
          "type"
        ],
        "title": "OutboundTransfersPaymentMethodDetails",
        "type": "object",
        "x-expandableFields": [
          "billing_details",
          "us_bank_account"
        ],
        "x-stripeResource": {
          "class_name": "DestinationPaymentMethodDetails",
          "in_class": "treasury.outbound_transfer",
          "inner_classes": [
            "outbound_transfers_payment_method_details_us_bank_account"
          ]
        }
      },
      "outbound_transfers_payment_method_details_us_bank_account": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Account holder type: individual or company.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "Account type: checkings or savings. Defaults to checking if omitted.",
            "enum": [
              "checking",
              "savings"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network": {
            "description": "The US bank account network used to send funds.",
            "enum": [
              "ach",
              "us_domestic_wire"
            ],
            "type": "string"
          },
          "routing_number": {
            "description": "Routing number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "account_holder_type",
          "account_type",
          "bank_name",
          "fingerprint",
          "last4",
          "network",
          "routing_number"
        ],
        "title": "outbound_transfers_payment_method_details_us_bank_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "UsBankAccount",
          "in_class": "outbound_transfers_payment_method_details"
        }
      },
      "package_dimensions": {
        "description": "",
        "properties": {
          "height": {
            "description": "Height, in inches.",
            "type": "number"
          },
          "length": {
            "description": "Length, in inches.",
            "type": "number"
          },
          "weight": {
            "description": "Weight, in ounces.",
            "type": "number"
          },
          "width": {
            "description": "Width, in inches.",
            "type": "number"
          }
        },
        "required": [
          "height",
          "length",
          "weight",
          "width"
        ],
        "title": "PackageDimensions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PackageDimensions",
          "in_package": ""
        }
      },
      "payment_flows_amount_details": {
        "description": "",
        "properties": {
          "tip": {
            "$ref": "#/components/schemas/payment_flows_amount_details_resource_tip"
          }
        },
        "title": "PaymentFlowsAmountDetails",
        "type": "object",
        "x-expandableFields": [
          "tip"
        ],
        "x-stripeResource": {
          "class_name": "AmountDetails",
          "in_class": "payment_intent",
          "inner_classes": [
            "payment_flows_amount_details_resource_tip"
          ]
        }
      },
      "payment_flows_amount_details_resource_tip": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Portion of the amount that corresponds to a tip.",
            "type": "integer"
          }
        },
        "title": "PaymentFlowsAmountDetailsResourceTip",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Tip",
          "in_class": "payment_flows_amount_details"
        }
      },
      "payment_flows_automatic_payment_methods_payment_intent": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Automatically calculates compatible payment methods",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PaymentFlowsAutomaticPaymentMethodsPaymentIntent",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AutomaticPaymentMethodsPaymentIntent",
          "in_package": ""
        }
      },
      "payment_flows_installment_options": {
        "description": "",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "plan": {
            "$ref": "#/components/schemas/payment_method_details_card_installments_plan"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PaymentFlowsInstallmentOptions",
        "type": "object",
        "x-expandableFields": [
          "plan"
        ],
        "x-stripeResource": {
          "class_name": "Installments",
          "in_class": "payment_intent_type_specific_payment_method_options_client"
        }
      },
      "payment_flows_private_payment_methods_alipay": {
        "description": "",
        "properties": {},
        "title": "PaymentFlowsPrivatePaymentMethodsAlipay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Alipay",
          "in_class": "payment_method"
        }
      },
      "payment_flows_private_payment_methods_alipay_details": {
        "description": "",
        "properties": {
          "buyer_id": {
            "description": "Uniquely identifies this particular Alipay account. You can use this attribute to check whether two Alipay accounts are the same.",
            "maxLength": 5000,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular Alipay account. You can use this attribute to check whether two Alipay accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transaction_id": {
            "description": "Transaction ID of this particular Alipay transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "fingerprint",
          "transaction_id"
        ],
        "title": "PaymentFlowsPrivatePaymentMethodsAlipayDetails",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Alipay",
          "in_class": "payment_method_details"
        }
      },
      "payment_flows_private_payment_methods_klarna_dob": {
        "description": "",
        "properties": {
          "day": {
            "description": "The day of birth, between 1 and 31.",
            "nullable": true,
            "type": "integer"
          },
          "month": {
            "description": "The month of birth, between 1 and 12.",
            "nullable": true,
            "type": "integer"
          },
          "year": {
            "description": "The four-digit year of birth.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "day",
          "month",
          "year"
        ],
        "title": "PaymentFlowsPrivatePaymentMethodsKlarnaDOB",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DateOfBirth",
          "in_class": "payment_method_klarna"
        }
      },
      "payment_intent_next_action_paynow_display_qr_code": {
        "description": "",
        "properties": {
          "data": {
            "description": "The raw data string used to generate QR code, it should be used together with QR code library.",
            "maxLength": 5000,
            "type": "string"
          },
          "image_url_png": {
            "description": "The image_url_png string used to render QR code",
            "maxLength": 5000,
            "type": "string"
          },
          "image_url_svg": {
            "description": "The image_url_svg string used to render QR code",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "image_url_png",
          "image_url_svg"
        ],
        "title": "PaymentIntentNextActionPaynowDisplayQrCode",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PaynowDisplayQrCode",
          "in_class": "payment_intent_next_action"
        }
      },
      "payment_intent_next_action_pix_display_qr_code": {
        "description": "",
        "properties": {
          "data": {
            "description": "The raw data string used to generate QR code, it should be used together with QR code library.",
            "maxLength": 5000,
            "type": "string"
          },
          "expires_at": {
            "description": "The date (unix timestamp) when the PIX expires.",
            "type": "integer"
          },
          "hosted_instructions_url": {
            "description": "The URL to the hosted pix instructions page, which allows customers to view the pix QR code.",
            "maxLength": 5000,
            "type": "string"
          },
          "image_url_png": {
            "description": "The image_url_png string used to render png QR code",
            "maxLength": 5000,
            "type": "string"
          },
          "image_url_svg": {
            "description": "The image_url_svg string used to render svg QR code",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "PaymentIntentNextActionPixDisplayQrCode",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PixDisplayQrCode",
          "in_class": "payment_intent_next_action"
        }
      },
      "payment_intent_next_action_promptpay_display_qr_code": {
        "description": "",
        "properties": {
          "data": {
            "description": "The raw data string used to generate QR code, it should be used together with QR code library.",
            "maxLength": 5000,
            "type": "string"
          },
          "hosted_instructions_url": {
            "description": "The URL to the hosted PromptPay instructions page, which allows customers to view the PromptPay QR code.",
            "maxLength": 5000,
            "type": "string"
          },
          "image_url_png": {
            "description": "The image_url_png string used to render QR code, can be used as <img src=\"…\" />",
            "maxLength": 5000,
            "type": "string"
          },
          "image_url_svg": {
            "description": "The image_url_svg string used to render QR code, can be used as <img src=\"…\" />",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "hosted_instructions_url",
          "image_url_png",
          "image_url_svg"
        ],
        "title": "PaymentIntentNextActionPromptpayDisplayQrCode",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PromptpayDisplayQrCode",
          "in_class": "payment_intent_next_action"
        }
      },
      "payment_intent_next_action_redirect_to_url": {
        "description": "",
        "properties": {
          "return_url": {
            "description": "If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The URL you must redirect your customer to in order to authenticate the payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "return_url",
          "url"
        ],
        "title": "PaymentIntentNextActionRedirectToUrl",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "NextActionRedirectToUrl",
          "in_class": "payment_intent"
        }
      },
      "payment_intent_next_action_verify_with_microdeposits": {
        "description": "",
        "properties": {
          "arrival_date": {
            "description": "The timestamp when the microdeposits are expected to land.",
            "format": "unix-time",
            "type": "integer"
          },
          "hosted_verification_url": {
            "description": "The URL for the hosted verification page, which allows customers to verify their bank account.",
            "maxLength": 5000,
            "type": "string"
          },
          "microdeposit_type": {
            "description": "The type of the microdeposit sent to the customer. Used to distinguish between different verification methods.",
            "enum": [
              "amounts",
              "descriptor_code"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "arrival_date",
          "hosted_verification_url",
          "microdeposit_type"
        ],
        "title": "PaymentIntentNextActionVerifyWithMicrodeposits",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "VerifyWithMicrodeposits",
          "in_class": "payment_intent_next_action"
        }
      },
      "payment_intent_next_action_wechat_pay_display_qr_code": {
        "description": "",
        "properties": {
          "data": {
            "description": "The data being used to generate QR code",
            "maxLength": 5000,
            "type": "string"
          },
          "image_data_url": {
            "description": "The base64 image data for a pre-generated QR code",
            "maxLength": 5000,
            "type": "string"
          },
          "image_url_png": {
            "description": "The image_url_png string used to render QR code",
            "maxLength": 5000,
            "type": "string"
          },
          "image_url_svg": {
            "description": "The image_url_svg string used to render QR code",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "data",
          "image_data_url",
          "image_url_png",
          "image_url_svg"
        ],
        "title": "PaymentIntentNextActionWechatPayDisplayQrCode",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "WechatPayDisplayQrCode",
          "in_class": "payment_intent_next_action"
        }
      },
      "payment_intent_next_action_wechat_pay_redirect_to_android_app": {
        "description": "",
        "properties": {
          "app_id": {
            "description": "app_id is the APP ID registered on WeChat open platform",
            "maxLength": 5000,
            "type": "string"
          },
          "nonce_str": {
            "description": "nonce_str is a random string",
            "maxLength": 5000,
            "type": "string"
          },
          "package": {
            "description": "package is static value",
            "maxLength": 5000,
            "type": "string"
          },
          "partner_id": {
            "description": "an unique merchant ID assigned by WeChat Pay",
            "maxLength": 5000,
            "type": "string"
          },
          "prepay_id": {
            "description": "an unique trading ID assigned by WeChat Pay",
            "maxLength": 5000,
            "type": "string"
          },
          "sign": {
            "description": "A signature",
            "maxLength": 5000,
            "type": "string"
          },
          "timestamp": {
            "description": "Specifies the current time in epoch format",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "app_id",
          "nonce_str",
          "package",
          "partner_id",
          "prepay_id",
          "sign",
          "timestamp"
        ],
        "title": "PaymentIntentNextActionWechatPayRedirectToAndroidApp",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "WechatPayRedirectToAndroidApp",
          "in_class": "payment_intent_next_action"
        }
      },
      "payment_intent_next_action_wechat_pay_redirect_to_ios_app": {
        "description": "",
        "properties": {
          "native_url": {
            "description": "An universal link that redirect to WeChat Pay app",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "native_url"
        ],
        "title": "PaymentIntentNextActionWechatPayRedirectToIOSApp",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "WechatPayRedirectToIosApp",
          "in_class": "payment_intent_next_action"
        }
      },
      "payment_intent_payment_method_options": {
        "description": "",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_acss_debit"
          },
          "affirm": {
            "$ref": "#/components/schemas/payment_method_options_affirm"
          },
          "afterpay_clearpay": {
            "$ref": "#/components/schemas/payment_method_options_afterpay_clearpay"
          },
          "alipay": {
            "$ref": "#/components/schemas/payment_method_options_alipay"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_au_becs_debit"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/payment_method_options_bacs_debit"
          },
          "bancontact": {
            "$ref": "#/components/schemas/payment_method_options_bancontact"
          },
          "blik": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_blik"
          },
          "boleto": {
            "$ref": "#/components/schemas/payment_method_options_boleto"
          },
          "card": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_card"
          },
          "card_present": {
            "$ref": "#/components/schemas/payment_method_options_card_present"
          },
          "customer_balance": {
            "$ref": "#/components/schemas/payment_method_options_customer_balance"
          },
          "eps": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_eps"
          },
          "fpx": {
            "$ref": "#/components/schemas/payment_method_options_fpx"
          },
          "giropay": {
            "$ref": "#/components/schemas/payment_method_options_giropay"
          },
          "grabpay": {
            "$ref": "#/components/schemas/payment_method_options_grabpay"
          },
          "ideal": {
            "$ref": "#/components/schemas/payment_method_options_ideal"
          },
          "interac_present": {
            "$ref": "#/components/schemas/payment_method_options_interac_present"
          },
          "klarna": {
            "$ref": "#/components/schemas/payment_method_options_klarna"
          },
          "konbini": {
            "$ref": "#/components/schemas/payment_method_options_konbini"
          },
          "link": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_link"
          },
          "oxxo": {
            "$ref": "#/components/schemas/payment_method_options_oxxo"
          },
          "p24": {
            "$ref": "#/components/schemas/payment_method_options_p24"
          },
          "paynow": {
            "$ref": "#/components/schemas/payment_method_options_paynow"
          },
          "pix": {
            "$ref": "#/components/schemas/payment_method_options_pix"
          },
          "promptpay": {
            "$ref": "#/components/schemas/payment_method_options_promptpay"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_sepa_debit"
          },
          "sofort": {
            "$ref": "#/components/schemas/payment_method_options_sofort"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_us_bank_account"
          },
          "wechat_pay": {
            "$ref": "#/components/schemas/payment_method_options_wechat_pay"
          }
        },
        "title": "PaymentIntentPaymentMethodOptions",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "affirm",
          "afterpay_clearpay",
          "alipay",
          "au_becs_debit",
          "bacs_debit",
          "bancontact",
          "blik",
          "boleto",
          "card",
          "card_present",
          "customer_balance",
          "eps",
          "fpx",
          "giropay",
          "grabpay",
          "ideal",
          "interac_present",
          "klarna",
          "konbini",
          "link",
          "oxxo",
          "p24",
          "paynow",
          "pix",
          "promptpay",
          "sepa_debit",
          "sofort",
          "us_bank_account",
          "wechat_pay"
        ],
        "x-stripeResource": {
          "class_name": "PaymentMethodOptions",
          "in_class": "payment_intent",
          "inner_classes": [
            "mandate_options_off_session_details_blik",
            "payment_intent_payment_method_options_acss_debit",
            "payment_intent_payment_method_options_au_becs_debit",
            "payment_intent_payment_method_options_blik",
            "payment_intent_payment_method_options_card",
            "payment_intent_payment_method_options_eps",
            "payment_intent_payment_method_options_link",
            "payment_intent_payment_method_options_mandate_options_sepa_debit",
            "payment_intent_payment_method_options_sepa_debit",
            "payment_intent_payment_method_options_us_bank_account",
            "payment_method_options_affirm",
            "payment_method_options_afterpay_clearpay",
            "payment_method_options_alipay",
            "payment_method_options_bacs_debit",
            "payment_method_options_bancontact",
            "payment_method_options_boleto",
            "payment_method_options_card_present",
            "payment_method_options_customer_balance",
            "payment_method_options_customer_balance_bank_transfer",
            "payment_method_options_fpx",
            "payment_method_options_giropay",
            "payment_method_options_grabpay",
            "payment_method_options_ideal",
            "payment_method_options_interac_present",
            "payment_method_options_klarna",
            "payment_method_options_konbini",
            "payment_method_options_oxxo",
            "payment_method_options_p24",
            "payment_method_options_paynow",
            "payment_method_options_paypal",
            "payment_method_options_pix",
            "payment_method_options_promptpay",
            "payment_method_options_sofort",
            "payment_method_options_wechat_pay"
          ]
        }
      },
      "payment_intent_payment_method_options_acss_debit": {
        "description": "",
        "properties": {
          "mandate_options": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_mandate_options_acss_debit"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          },
          "verification_method": {
            "description": "Bank account verification method.",
            "enum": [
              "automatic",
              "instant",
              "microdeposits"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "payment_intent_payment_method_options_acss_debit",
        "type": "object",
        "x-expandableFields": [
          "mandate_options"
        ],
        "x-stripeResource": {
          "class_name": "AcssDebit",
          "in_class": "payment_intent_payment_method_options",
          "inner_classes": [
            "payment_intent_payment_method_options_mandate_options_acss_debit"
          ]
        }
      },
      "payment_intent_payment_method_options_au_becs_debit": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_intent_payment_method_options_au_becs_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AuBecsDebit",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_intent_payment_method_options_blik": {
        "description": "",
        "properties": {},
        "title": "payment_intent_payment_method_options_blik",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Blik",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_intent_payment_method_options_card": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "installments": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_options_card_installments"
              }
            ],
            "description": "Installment details for this payment (Mexico only).\n\nFor more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).",
            "nullable": true
          },
          "mandate_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_options_card_mandate_options"
              }
            ],
            "description": "Configuration options for setting up an eMandate for cards issued in India.",
            "nullable": true
          },
          "network": {
            "description": "Selected network to process this payment intent on. Depends on the available networks of the card attached to the payment intent. Can be only set confirm-time.",
            "enum": [
              "amex",
              "cartes_bancaires",
              "diners",
              "discover",
              "interac",
              "jcb",
              "mastercard",
              "unionpay",
              "unknown",
              "visa"
            ],
            "nullable": true,
            "type": "string"
          },
          "request_three_d_secure": {
            "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Permitted values include: `automatic` or `any`. If not provided, defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
            "enum": [
              "any",
              "automatic",
              "challenge_only"
            ],
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          },
          "statement_descriptor_suffix_kana": {
            "description": "Provides information about a card payment that customers see on their statements. Concatenated with the Kana prefix (shortened Kana descriptor) or Kana statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 22 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 22 characters.",
            "maxLength": 5000,
            "type": "string"
          },
          "statement_descriptor_suffix_kanji": {
            "description": "Provides information about a card payment that customers see on their statements. Concatenated with the Kanji prefix (shortened Kanji descriptor) or Kanji statement descriptor that’s set on the account to form the complete statement descriptor. Maximum 17 characters. On card statements, the *concatenation* of both prefix and suffix (including separators) will appear truncated to 17 characters.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "installments",
          "mandate_options",
          "network",
          "request_three_d_secure"
        ],
        "title": "payment_intent_payment_method_options_card",
        "type": "object",
        "x-expandableFields": [
          "installments",
          "mandate_options"
        ],
        "x-stripeResource": {
          "class_name": "Card",
          "in_class": "payment_intent_payment_method_options",
          "inner_classes": [
            "payment_method_options_card_installments",
            "payment_method_options_card_mandate_options"
          ]
        }
      },
      "payment_intent_payment_method_options_eps": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_intent_payment_method_options_eps",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Eps",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_intent_payment_method_options_link": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "persistent_token": {
            "description": "Token used for persistent Link logins.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session"
            ],
            "type": "string"
          }
        },
        "required": [
          "persistent_token"
        ],
        "title": "payment_intent_payment_method_options_link",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Link",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_intent_payment_method_options_mandate_options_acss_debit": {
        "description": "",
        "properties": {
          "custom_mandate_url": {
            "description": "A URL for custom mandate text",
            "maxLength": 5000,
            "type": "string"
          },
          "interval_description": {
            "description": "Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payment_schedule": {
            "description": "Payment schedule for the mandate.",
            "enum": [
              "combined",
              "interval",
              "sporadic"
            ],
            "nullable": true,
            "type": "string"
          },
          "transaction_type": {
            "description": "Transaction type of the mandate.",
            "enum": [
              "business",
              "personal"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "interval_description",
          "payment_schedule",
          "transaction_type"
        ],
        "title": "payment_intent_payment_method_options_mandate_options_acss_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "MandateOptions",
          "in_class": "payment_intent_payment_method_options_acss_debit"
        }
      },
      "payment_intent_payment_method_options_mandate_options_sepa_debit": {
        "description": "",
        "properties": {},
        "title": "payment_intent_payment_method_options_mandate_options_sepa_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SepaDebitMandateOptions",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_intent_payment_method_options_sepa_debit": {
        "description": "",
        "properties": {
          "mandate_options": {
            "$ref": "#/components/schemas/payment_intent_payment_method_options_mandate_options_sepa_debit"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_intent_payment_method_options_sepa_debit",
        "type": "object",
        "x-expandableFields": [
          "mandate_options"
        ],
        "x-stripeResource": {
          "class_name": "SepaDebit",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_intent_payment_method_options_us_bank_account": {
        "description": "",
        "properties": {
          "financial_connections": {
            "$ref": "#/components/schemas/linked_account_options_us_bank_account"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          },
          "verification_method": {
            "description": "Bank account verification method.",
            "enum": [
              "automatic",
              "instant",
              "microdeposits"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "payment_intent_payment_method_options_us_bank_account",
        "type": "object",
        "x-expandableFields": [
          "financial_connections"
        ],
        "x-stripeResource": {
          "class_name": "UsBankAccount",
          "in_class": "payment_intent_payment_method_options",
          "inner_classes": [
            "linked_account_options_us_bank_account"
          ]
        }
      },
      "payment_intent_processing": {
        "description": "",
        "properties": {
          "card": {
            "$ref": "#/components/schemas/payment_intent_card_processing"
          },
          "type": {
            "description": "Type of the payment method for which payment is in `processing` state, one of `card`.",
            "enum": [
              "card"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "PaymentIntentProcessing",
        "type": "object",
        "x-expandableFields": [
          "card"
        ],
        "x-stripeResource": {
          "class_name": "Processing",
          "in_class": "payment_intent",
          "inner_classes": [
            "payment_intent_card_processing"
          ]
        }
      },
      "payment_intent_processing_customer_notification": {
        "description": "",
        "properties": {
          "approval_requested": {
            "description": "Whether customer approval has been requested for this payment. For payments greater than INR 15000 or mandate amount, the customer must provide explicit approval of the payment with their bank.",
            "nullable": true,
            "type": "boolean"
          },
          "completes_at": {
            "description": "If customer approval is required, they need to provide approval before this time.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "approval_requested",
          "completes_at"
        ],
        "title": "PaymentIntentProcessingCustomerNotification",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CustomerNotification",
          "in_class": "payment_intent_card_processing"
        }
      },
      "payment_intent_type_specific_payment_method_options_client": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "installments": {
            "$ref": "#/components/schemas/payment_flows_installment_options"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          },
          "verification_method": {
            "description": "Bank account verification method.",
            "enum": [
              "automatic",
              "instant",
              "microdeposits"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "PaymentIntentTypeSpecificPaymentMethodOptionsClient",
        "type": "object",
        "x-expandableFields": [
          "installments"
        ],
        "x-stripeResource": {
          "class_name": "PaymentIntentTypeSpecificPaymentMethodOptionsClient",
          "in_package": "",
          "inner_classes": [
            "payment_flows_installment_options"
          ]
        }
      },
      "payment_link": {
        "description": "A payment link is a shareable URL that will take your customers to a hosted payment page. A payment link can be shared and used multiple times.\n\nWhen a customer opens a payment link it will open a new [checkout session](https://stripe.com/docs/api/checkout/sessions) to render the payment page. You can use [checkout session events](https://stripe.com/docs/api/events/types#event_types-checkout.session.completed) to track payments through payment links.\n\nRelated guide: [Payment Links API](https://stripe.com/docs/payments/payment-links/api)",
        "properties": {
          "active": {
            "description": "Whether the payment link's `url` is active. If `false`, customers visiting the URL will be shown a page saying that the link has been deactivated.",
            "type": "boolean"
          },
          "after_completion": {
            "$ref": "#/components/schemas/payment_links_resource_after_completion"
          },
          "allow_promotion_codes": {
            "description": "Whether user redeemable promotion codes are enabled.",
            "type": "boolean"
          },
          "application_fee_amount": {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account.",
            "nullable": true,
            "type": "integer"
          },
          "application_fee_percent": {
            "description": "This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
            "nullable": true,
            "type": "number"
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/payment_links_resource_automatic_tax"
          },
          "billing_address_collection": {
            "description": "Configuration for collecting the customer's billing address.",
            "enum": [
              "auto",
              "required"
            ],
            "type": "string"
          },
          "consent_collection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_links_resource_consent_collection"
              }
            ],
            "description": "When set, provides configuration to gather active consent from customers.",
            "nullable": true
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "customer_creation": {
            "description": "Configuration for Customer creation during checkout.",
            "enum": [
              "always",
              "if_required"
            ],
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "line_items": {
            "description": "The line items representing what is being sold.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "PaymentLinksResourceListLineItems",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payment_link"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "payment_intent_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_links_resource_payment_intent_data"
              }
            ],
            "description": "Indicates the parameters to be passed to PaymentIntent creation during checkout.",
            "nullable": true
          },
          "payment_method_collection": {
            "description": "Configuration for collecting a payment method during checkout.",
            "enum": [
              "always",
              "if_required"
            ],
            "type": "string"
          },
          "payment_method_types": {
            "description": "The list of payment method types that customers can use. When `null`, Stripe will dynamically show relevant payment methods you've enabled in your [payment method settings](https://dashboard.stripe.com/settings/payment_methods).",
            "items": {
              "enum": [
                "affirm",
                "afterpay_clearpay",
                "alipay",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "blik",
                "boleto",
                "card",
                "eps",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "klarna",
                "konbini",
                "oxxo",
                "p24",
                "paynow",
                "pix",
                "promptpay",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "nullable": true,
            "type": "array"
          },
          "phone_number_collection": {
            "$ref": "#/components/schemas/payment_links_resource_phone_number_collection"
          },
          "shipping_address_collection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_links_resource_shipping_address_collection"
              }
            ],
            "description": "Configuration for collecting the customer's shipping address.",
            "nullable": true
          },
          "shipping_options": {
            "description": "The shipping rate options applied to the session.",
            "items": {
              "$ref": "#/components/schemas/payment_links_resource_shipping_option"
            },
            "type": "array"
          },
          "submit_type": {
            "description": "Indicates the type of transaction being performed which customizes relevant text on the page, such as the submit button.",
            "enum": [
              "auto",
              "book",
              "donate",
              "pay"
            ],
            "type": "string"
          },
          "subscription_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_links_resource_subscription_data"
              }
            ],
            "description": "When creating a subscription, the specified configuration data will be used. There must be at least one line item with a recurring price to use `subscription_data`.",
            "nullable": true
          },
          "tax_id_collection": {
            "$ref": "#/components/schemas/payment_links_resource_tax_id_collection"
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_links_resource_transfer_data"
              }
            ],
            "description": "The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to.",
            "nullable": true
          },
          "url": {
            "description": "The public URL that can be shared with customers.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "active",
          "after_completion",
          "allow_promotion_codes",
          "application_fee_amount",
          "application_fee_percent",
          "automatic_tax",
          "billing_address_collection",
          "consent_collection",
          "currency",
          "customer_creation",
          "id",
          "livemode",
          "metadata",
          "object",
          "on_behalf_of",
          "payment_intent_data",
          "payment_method_collection",
          "payment_method_types",
          "phone_number_collection",
          "shipping_address_collection",
          "shipping_options",
          "submit_type",
          "subscription_data",
          "tax_id_collection",
          "transfer_data",
          "url"
        ],
        "title": "PaymentLink",
        "type": "object",
        "x-expandableFields": [
          "after_completion",
          "automatic_tax",
          "consent_collection",
          "line_items",
          "on_behalf_of",
          "payment_intent_data",
          "phone_number_collection",
          "shipping_address_collection",
          "shipping_options",
          "subscription_data",
          "tax_id_collection",
          "transfer_data"
        ],
        "x-resourceId": "payment_link",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/payment_links"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/payment_links/{payment_link}"
          },
          {
            "method_name": "list_line_items",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/payment_links/{payment_link}/line_items"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/payment_links"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/payment_links/{payment_link}"
          }
        ],
        "x-stripeResource": {
          "class_name": "PaymentLink",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "payment_links_resource_after_completion",
            "payment_links_resource_automatic_tax",
            "payment_links_resource_consent_collection",
            "payment_links_resource_payment_intent_data",
            "payment_links_resource_phone_number_collection",
            "payment_links_resource_shipping_address_collection",
            "payment_links_resource_shipping_option",
            "payment_links_resource_subscription_data",
            "payment_links_resource_tax_id_collection",
            "payment_links_resource_transfer_data"
          ]
        }
      },
      "payment_links_resource_after_completion": {
        "description": "",
        "properties": {
          "hosted_confirmation": {
            "$ref": "#/components/schemas/payment_links_resource_completion_behavior_confirmation_page"
          },
          "redirect": {
            "$ref": "#/components/schemas/payment_links_resource_completion_behavior_redirect"
          },
          "type": {
            "description": "The specified behavior after the purchase is complete.",
            "enum": [
              "hosted_confirmation",
              "redirect"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "PaymentLinksResourceAfterCompletion",
        "type": "object",
        "x-expandableFields": [
          "hosted_confirmation",
          "redirect"
        ],
        "x-stripeResource": {
          "class_name": "AfterCompletion",
          "in_class": "payment_link",
          "inner_classes": [
            "payment_links_resource_completion_behavior_confirmation_page",
            "payment_links_resource_completion_behavior_redirect"
          ]
        }
      },
      "payment_links_resource_automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "If `true`, tax will be calculated automatically using the customer's location.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PaymentLinksResourceAutomaticTax",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AutomaticTax",
          "in_class": "payment_link"
        }
      },
      "payment_links_resource_completion_behavior_confirmation_page": {
        "description": "",
        "properties": {
          "custom_message": {
            "description": "The custom message that is displayed to the customer after the purchase is complete.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "custom_message"
        ],
        "title": "PaymentLinksResourceCompletionBehaviorConfirmationPage",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "HostedConfirmation",
          "in_class": "payment_links_resource_after_completion"
        }
      },
      "payment_links_resource_completion_behavior_redirect": {
        "description": "",
        "properties": {
          "url": {
            "description": "The URL the customer will be redirected to after the purchase is complete.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "title": "PaymentLinksResourceCompletionBehaviorRedirect",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Redirect",
          "in_class": "payment_links_resource_after_completion"
        }
      },
      "payment_links_resource_consent_collection": {
        "description": "",
        "properties": {
          "promotions": {
            "description": "If set to `auto`, enables the collection of customer consent for promotional communications.",
            "enum": [
              "auto",
              "none"
            ],
            "nullable": true,
            "type": "string"
          },
          "terms_of_service": {
            "description": "If set to `required`, it requires cutomers to accept the terms of service before being able to pay. If set to `none`, customers won't be shown a checkbox to accept the terms of service.",
            "enum": [
              "none",
              "required"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "promotions",
          "terms_of_service"
        ],
        "title": "PaymentLinksResourceConsentCollection",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ConsentCollection",
          "in_class": "payment_link"
        }
      },
      "payment_links_resource_payment_intent_data": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Indicates when the funds will be captured from the customer's account.",
            "enum": [
              "automatic",
              "manual"
            ],
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with the payment method collected during checkout.",
            "enum": [
              "off_session",
              "on_session"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "capture_method",
          "setup_future_usage"
        ],
        "title": "PaymentLinksResourcePaymentIntentData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PaymentIntentData",
          "in_class": "payment_link"
        }
      },
      "payment_links_resource_phone_number_collection": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "If `true`, a phone number will be collected during checkout.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PaymentLinksResourcePhoneNumberCollection",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PhoneNumberCollection",
          "in_class": "payment_link"
        }
      },
      "payment_links_resource_shipping_address_collection": {
        "description": "",
        "properties": {
          "allowed_countries": {
            "description": "An array of two-letter ISO country codes representing which countries Checkout should provide as options for shipping locations. Unsupported country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI`.",
            "items": {
              "enum": [
                "AC",
                "AD",
                "AE",
                "AF",
                "AG",
                "AI",
                "AL",
                "AM",
                "AO",
                "AQ",
                "AR",
                "AT",
                "AU",
                "AW",
                "AX",
                "AZ",
                "BA",
                "BB",
                "BD",
                "BE",
                "BF",
                "BG",
                "BH",
                "BI",
                "BJ",
                "BL",
                "BM",
                "BN",
                "BO",
                "BQ",
                "BR",
                "BS",
                "BT",
                "BV",
                "BW",
                "BY",
                "BZ",
                "CA",
                "CD",
                "CF",
                "CG",
                "CH",
                "CI",
                "CK",
                "CL",
                "CM",
                "CN",
                "CO",
                "CR",
                "CV",
                "CW",
                "CY",
                "CZ",
                "DE",
                "DJ",
                "DK",
                "DM",
                "DO",
                "DZ",
                "EC",
                "EE",
                "EG",
                "EH",
                "ER",
                "ES",
                "ET",
                "FI",
                "FJ",
                "FK",
                "FO",
                "FR",
                "GA",
                "GB",
                "GD",
                "GE",
                "GF",
                "GG",
                "GH",
                "GI",
                "GL",
                "GM",
                "GN",
                "GP",
                "GQ",
                "GR",
                "GS",
                "GT",
                "GU",
                "GW",
                "GY",
                "HK",
                "HN",
                "HR",
                "HT",
                "HU",
                "ID",
                "IE",
                "IL",
                "IM",
                "IN",
                "IO",
                "IQ",
                "IS",
                "IT",
                "JE",
                "JM",
                "JO",
                "JP",
                "KE",
                "KG",
                "KH",
                "KI",
                "KM",
                "KN",
                "KR",
                "KW",
                "KY",
                "KZ",
                "LA",
                "LB",
                "LC",
                "LI",
                "LK",
                "LR",
                "LS",
                "LT",
                "LU",
                "LV",
                "LY",
                "MA",
                "MC",
                "MD",
                "ME",
                "MF",
                "MG",
                "MK",
                "ML",
                "MM",
                "MN",
                "MO",
                "MQ",
                "MR",
                "MS",
                "MT",
                "MU",
                "MV",
                "MW",
                "MX",
                "MY",
                "MZ",
                "NA",
                "NC",
                "NE",
                "NG",
                "NI",
                "NL",
                "NO",
                "NP",
                "NR",
                "NU",
                "NZ",
                "OM",
                "PA",
                "PE",
                "PF",
                "PG",
                "PH",
                "PK",
                "PL",
                "PM",
                "PN",
                "PR",
                "PS",
                "PT",
                "PY",
                "QA",
                "RE",
                "RO",
                "RS",
                "RU",
                "RW",
                "SA",
                "SB",
                "SC",
                "SE",
                "SG",
                "SH",
                "SI",
                "SJ",
                "SK",
                "SL",
                "SM",
                "SN",
                "SO",
                "SR",
                "SS",
                "ST",
                "SV",
                "SX",
                "SZ",
                "TA",
                "TC",
                "TD",
                "TF",
                "TG",
                "TH",
                "TJ",
                "TK",
                "TL",
                "TM",
                "TN",
                "TO",
                "TR",
                "TT",
                "TV",
                "TW",
                "TZ",
                "UA",
                "UG",
                "US",
                "UY",
                "UZ",
                "VA",
                "VC",
                "VE",
                "VG",
                "VN",
                "VU",
                "WF",
                "WS",
                "XK",
                "YE",
                "YT",
                "ZA",
                "ZM",
                "ZW",
                "ZZ"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "allowed_countries"
        ],
        "title": "PaymentLinksResourceShippingAddressCollection",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ShippingAddressCollection",
          "in_class": "payment_link"
        }
      },
      "payment_links_resource_shipping_option": {
        "description": "",
        "properties": {
          "shipping_amount": {
            "description": "A non-negative integer in cents representing how much to charge.",
            "type": "integer"
          },
          "shipping_rate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/shipping_rate"
              }
            ],
            "description": "The ID of the Shipping Rate to use for this shipping option.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/shipping_rate"
                }
              ]
            }
          }
        },
        "required": [
          "shipping_amount",
          "shipping_rate"
        ],
        "title": "PaymentLinksResourceShippingOption",
        "type": "object",
        "x-expandableFields": [
          "shipping_rate"
        ],
        "x-stripeResource": {
          "class_name": "ShippingOption",
          "in_class": "payment_link"
        }
      },
      "payment_links_resource_subscription_data": {
        "description": "",
        "properties": {
          "description": {
            "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "trial_period_days": {
            "description": "Integer representing the number of trial period days before the customer is charged for the first time.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "description",
          "trial_period_days"
        ],
        "title": "PaymentLinksResourceSubscriptionData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SubscriptionData",
          "in_class": "payment_link"
        }
      },
      "payment_links_resource_tax_id_collection": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Indicates whether tax ID collection is enabled for the session.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PaymentLinksResourceTaxIdCollection",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "TaxIdCollection",
          "in_class": "payment_link"
        }
      },
      "payment_links_resource_transfer_data": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount in %s that will be transferred to the destination account. By default, the entire amount is transferred to the destination.",
            "nullable": true,
            "type": "integer"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The connected account receiving the transfer.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "destination"
        ],
        "title": "PaymentLinksResourceTransferData",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ],
        "x-stripeResource": {
          "class_name": "TransferData",
          "in_class": "payment_link"
        }
      },
      "payment_method": {
        "description": "PaymentMethod objects represent your customer's payment instruments.\nYou can use them with [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to collect payments or save them to\nCustomer objects to store instrument details for future payments.\n\nRelated guides: [Payment Methods](https://stripe.com/docs/payments/payment-methods) and [More Payment Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/payment_method_acss_debit"
          },
          "affirm": {
            "$ref": "#/components/schemas/payment_method_affirm"
          },
          "afterpay_clearpay": {
            "$ref": "#/components/schemas/payment_method_afterpay_clearpay"
          },
          "alipay": {
            "$ref": "#/components/schemas/payment_flows_private_payment_methods_alipay"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/payment_method_au_becs_debit"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/payment_method_bacs_debit"
          },
          "bancontact": {
            "$ref": "#/components/schemas/payment_method_bancontact"
          },
          "billing_details": {
            "$ref": "#/components/schemas/billing_details"
          },
          "blik": {
            "$ref": "#/components/schemas/payment_method_blik"
          },
          "boleto": {
            "$ref": "#/components/schemas/payment_method_boleto"
          },
          "card": {
            "$ref": "#/components/schemas/payment_method_card"
          },
          "card_present": {
            "$ref": "#/components/schemas/payment_method_card_present"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              }
            ],
            "description": "The ID of the Customer to which this PaymentMethod is saved. This will not be set when the PaymentMethod has not been saved to a Customer.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                }
              ]
            }
          },
          "customer_balance": {
            "$ref": "#/components/schemas/payment_method_customer_balance"
          },
          "eps": {
            "$ref": "#/components/schemas/payment_method_eps"
          },
          "fpx": {
            "$ref": "#/components/schemas/payment_method_fpx"
          },
          "giropay": {
            "$ref": "#/components/schemas/payment_method_giropay"
          },
          "grabpay": {
            "$ref": "#/components/schemas/payment_method_grabpay"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "ideal": {
            "$ref": "#/components/schemas/payment_method_ideal"
          },
          "interac_present": {
            "$ref": "#/components/schemas/payment_method_interac_present"
          },
          "klarna": {
            "$ref": "#/components/schemas/payment_method_klarna"
          },
          "konbini": {
            "$ref": "#/components/schemas/payment_method_konbini"
          },
          "link": {
            "$ref": "#/components/schemas/payment_method_link"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payment_method"
            ],
            "type": "string"
          },
          "oxxo": {
            "$ref": "#/components/schemas/payment_method_oxxo"
          },
          "p24": {
            "$ref": "#/components/schemas/payment_method_p24"
          },
          "paynow": {
            "$ref": "#/components/schemas/payment_method_paynow"
          },
          "pix": {
            "$ref": "#/components/schemas/payment_method_pix"
          },
          "promptpay": {
            "$ref": "#/components/schemas/payment_method_promptpay"
          },
          "radar_options": {
            "$ref": "#/components/schemas/radar_radar_options"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/payment_method_sepa_debit"
          },
          "sofort": {
            "$ref": "#/components/schemas/payment_method_sofort"
          },
          "type": {
            "description": "The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value. It contains additional information specific to the PaymentMethod type.",
            "enum": [
              "acss_debit",
              "affirm",
              "afterpay_clearpay",
              "alipay",
              "au_becs_debit",
              "bacs_debit",
              "bancontact",
              "blik",
              "boleto",
              "card",
              "card_present",
              "customer_balance",
              "eps",
              "fpx",
              "giropay",
              "grabpay",
              "ideal",
              "interac_present",
              "klarna",
              "konbini",
              "link",
              "oxxo",
              "p24",
              "paynow",
              "pix",
              "promptpay",
              "sepa_debit",
              "sofort",
              "us_bank_account",
              "wechat_pay"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/payment_method_us_bank_account"
          },
          "wechat_pay": {
            "$ref": "#/components/schemas/payment_method_wechat_pay"
          }
        },
        "required": [
          "billing_details",
          "created",
          "customer",
          "id",
          "livemode",
          "metadata",
          "object",
          "type"
        ],
        "title": "PaymentMethod",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "affirm",
          "afterpay_clearpay",
          "alipay",
          "au_becs_debit",
          "bacs_debit",
          "bancontact",
          "billing_details",
          "blik",
          "boleto",
          "card",
          "card_present",
          "customer",
          "customer_balance",
          "eps",
          "fpx",
          "giropay",
          "grabpay",
          "ideal",
          "interac_present",
          "klarna",
          "konbini",
          "link",
          "oxxo",
          "p24",
          "paynow",
          "pix",
          "promptpay",
          "radar_options",
          "sepa_debit",
          "sofort",
          "us_bank_account",
          "wechat_pay"
        ],
        "x-resourceId": "payment_method",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/payment_methods"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/payment_methods/{payment_method}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/payment_methods/{payment_method}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/payment_methods"
          },
          {
            "method_name": "attach",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/payment_methods/{payment_method}/attach"
          },
          {
            "method_name": "detach",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/payment_methods/{payment_method}/detach"
          }
        ],
        "x-stripeResource": {
          "class_name": "PaymentMethod",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "billing_details",
            "payment_flows_private_payment_methods_alipay",
            "payment_method_acss_debit",
            "payment_method_affirm",
            "payment_method_afterpay_clearpay",
            "payment_method_au_becs_debit",
            "payment_method_bacs_debit",
            "payment_method_bancontact",
            "payment_method_blik",
            "payment_method_boleto",
            "payment_method_card",
            "payment_method_card_present",
            "payment_method_customer_balance",
            "payment_method_eps",
            "payment_method_fpx",
            "payment_method_giropay",
            "payment_method_grabpay",
            "payment_method_ideal",
            "payment_method_interac_present",
            "payment_method_klarna",
            "payment_method_konbini",
            "payment_method_link",
            "payment_method_oxxo",
            "payment_method_p24",
            "payment_method_paynow",
            "payment_method_pix",
            "payment_method_promptpay",
            "payment_method_sepa_debit",
            "payment_method_sofort",
            "payment_method_us_bank_account",
            "payment_method_wechat_pay"
          ]
        }
      },
      "payment_method_acss_debit": {
        "description": "",
        "properties": {
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "institution_number": {
            "description": "Institution number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transit_number": {
            "description": "Transit number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_name",
          "fingerprint",
          "institution_number",
          "last4",
          "transit_number"
        ],
        "title": "payment_method_acss_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AcssDebit",
          "in_class": "payment_method"
        }
      },
      "payment_method_affirm": {
        "description": "",
        "properties": {},
        "title": "payment_method_affirm",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Affirm",
          "in_class": "payment_method"
        }
      },
      "payment_method_afterpay_clearpay": {
        "description": "",
        "properties": {},
        "title": "payment_method_afterpay_clearpay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AfterpayClearpay",
          "in_class": "payment_method"
        }
      },
      "payment_method_au_becs_debit": {
        "description": "",
        "properties": {
          "bsb_number": {
            "description": "Six-digit number identifying bank and branch associated with this bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bsb_number",
          "fingerprint",
          "last4"
        ],
        "title": "payment_method_au_becs_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AuBecsDebit",
          "in_class": "payment_method"
        }
      },
      "payment_method_bacs_debit": {
        "description": "",
        "properties": {
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sort_code": {
            "description": "Sort code of the bank account. (e.g., `10-20-30`)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "fingerprint",
          "last4",
          "sort_code"
        ],
        "title": "payment_method_bacs_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BacsDebit",
          "in_class": "payment_method"
        }
      },
      "payment_method_bancontact": {
        "description": "",
        "properties": {},
        "title": "payment_method_bancontact",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Bancontact",
          "in_class": "payment_method"
        }
      },
      "payment_method_blik": {
        "description": "",
        "properties": {},
        "title": "payment_method_blik",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Blik",
          "in_class": "payment_method"
        }
      },
      "payment_method_boleto": {
        "description": "",
        "properties": {
          "tax_id": {
            "description": "Uniquely identifies the customer tax id (CNPJ or CPF)",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "tax_id"
        ],
        "title": "payment_method_boleto",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Boleto",
          "in_class": "payment_method"
        }
      },
      "payment_method_card": {
        "description": "",
        "properties": {
          "brand": {
            "description": "Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "checks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_card_checks"
              }
            ],
            "description": "Checks on Card address and CVC if provided.",
            "nullable": true
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "A high-level description of the type of cards issued in this range. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "iin": {
            "description": "Issuer identification number of the card. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issuer": {
            "description": "The name of the card's issuing bank. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "type": "string"
          },
          "networks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/networks"
              }
            ],
            "description": "Contains information about card networks that can be used to process the payment.",
            "nullable": true
          },
          "three_d_secure_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/three_d_secure_usage"
              }
            ],
            "description": "Contains details on how this Card maybe be used for 3D Secure authentication.",
            "nullable": true
          },
          "wallet": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_card_wallet"
              }
            ],
            "description": "If this Card is part of a card wallet, this contains the details of the card wallet.",
            "nullable": true
          }
        },
        "required": [
          "brand",
          "checks",
          "country",
          "exp_month",
          "exp_year",
          "funding",
          "last4",
          "networks",
          "three_d_secure_usage",
          "wallet"
        ],
        "title": "payment_method_card",
        "type": "object",
        "x-expandableFields": [
          "checks",
          "networks",
          "three_d_secure_usage",
          "wallet"
        ],
        "x-stripeResource": {
          "class_name": "Card",
          "in_class": "payment_method",
          "inner_classes": [
            "networks",
            "payment_method_card_checks",
            "payment_method_card_wallet",
            "three_d_secure_usage"
          ]
        }
      },
      "payment_method_card_checks": {
        "description": "",
        "properties": {
          "address_line1_check": {
            "description": "If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_postal_code_check": {
            "description": "If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cvc_check": {
            "description": "If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address_line1_check",
          "address_postal_code_check",
          "cvc_check"
        ],
        "title": "payment_method_card_checks",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Checks",
          "in_class": "payment_method_card"
        }
      },
      "payment_method_card_present": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_present",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CardPresent",
          "in_class": "payment_method"
        }
      },
      "payment_method_card_wallet": {
        "description": "",
        "properties": {
          "amex_express_checkout": {
            "$ref": "#/components/schemas/payment_method_card_wallet_amex_express_checkout"
          },
          "apple_pay": {
            "$ref": "#/components/schemas/payment_method_card_wallet_apple_pay"
          },
          "dynamic_last4": {
            "description": "(For tokenized numbers only.) The last four digits of the device account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "google_pay": {
            "$ref": "#/components/schemas/payment_method_card_wallet_google_pay"
          },
          "masterpass": {
            "$ref": "#/components/schemas/payment_method_card_wallet_masterpass"
          },
          "samsung_pay": {
            "$ref": "#/components/schemas/payment_method_card_wallet_samsung_pay"
          },
          "type": {
            "description": "The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.",
            "enum": [
              "amex_express_checkout",
              "apple_pay",
              "google_pay",
              "masterpass",
              "samsung_pay",
              "visa_checkout"
            ],
            "type": "string"
          },
          "visa_checkout": {
            "$ref": "#/components/schemas/payment_method_card_wallet_visa_checkout"
          }
        },
        "required": [
          "dynamic_last4",
          "type"
        ],
        "title": "payment_method_card_wallet",
        "type": "object",
        "x-expandableFields": [
          "amex_express_checkout",
          "apple_pay",
          "google_pay",
          "masterpass",
          "samsung_pay",
          "visa_checkout"
        ],
        "x-stripeResource": {
          "class_name": "Wallet",
          "in_class": "payment_method_card",
          "inner_classes": [
            "payment_method_card_wallet_amex_express_checkout",
            "payment_method_card_wallet_apple_pay",
            "payment_method_card_wallet_google_pay",
            "payment_method_card_wallet_masterpass",
            "payment_method_card_wallet_samsung_pay",
            "payment_method_card_wallet_visa_checkout"
          ]
        }
      },
      "payment_method_card_wallet_amex_express_checkout": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_wallet_amex_express_checkout",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AmexExpressCheckout",
          "in_class": "payment_method_card_wallet"
        }
      },
      "payment_method_card_wallet_apple_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_wallet_apple_pay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ApplePay",
          "in_class": "payment_method_card_wallet"
        }
      },
      "payment_method_card_wallet_google_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_wallet_google_pay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "GooglePay",
          "in_class": "payment_method_card_wallet"
        }
      },
      "payment_method_card_wallet_masterpass": {
        "description": "",
        "properties": {
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          },
          "email": {
            "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          }
        },
        "required": [
          "billing_address",
          "email",
          "name",
          "shipping_address"
        ],
        "title": "payment_method_card_wallet_masterpass",
        "type": "object",
        "x-expandableFields": [
          "billing_address",
          "shipping_address"
        ],
        "x-stripeResource": {
          "class_name": "Masterpass",
          "in_class": "payment_method_card_wallet"
        }
      },
      "payment_method_card_wallet_samsung_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_card_wallet_samsung_pay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SamsungPay",
          "in_class": "payment_method_card_wallet"
        }
      },
      "payment_method_card_wallet_visa_checkout": {
        "description": "",
        "properties": {
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          },
          "email": {
            "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          }
        },
        "required": [
          "billing_address",
          "email",
          "name",
          "shipping_address"
        ],
        "title": "payment_method_card_wallet_visa_checkout",
        "type": "object",
        "x-expandableFields": [
          "billing_address",
          "shipping_address"
        ],
        "x-stripeResource": {
          "class_name": "VisaCheckout",
          "in_class": "payment_method_card_wallet"
        }
      },
      "payment_method_customer_balance": {
        "description": "",
        "properties": {},
        "title": "payment_method_customer_balance",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CustomerBalance",
          "in_class": "payment_method"
        }
      },
      "payment_method_details": {
        "description": "",
        "properties": {
          "ach_credit_transfer": {
            "$ref": "#/components/schemas/payment_method_details_ach_credit_transfer"
          },
          "ach_debit": {
            "$ref": "#/components/schemas/payment_method_details_ach_debit"
          },
          "acss_debit": {
            "$ref": "#/components/schemas/payment_method_details_acss_debit"
          },
          "affirm": {
            "$ref": "#/components/schemas/payment_method_details_affirm"
          },
          "afterpay_clearpay": {
            "$ref": "#/components/schemas/payment_method_details_afterpay_clearpay"
          },
          "alipay": {
            "$ref": "#/components/schemas/payment_flows_private_payment_methods_alipay_details"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/payment_method_details_au_becs_debit"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/payment_method_details_bacs_debit"
          },
          "bancontact": {
            "$ref": "#/components/schemas/payment_method_details_bancontact"
          },
          "blik": {
            "$ref": "#/components/schemas/payment_method_details_blik"
          },
          "boleto": {
            "$ref": "#/components/schemas/payment_method_details_boleto"
          },
          "card": {
            "$ref": "#/components/schemas/payment_method_details_card"
          },
          "card_present": {
            "$ref": "#/components/schemas/payment_method_details_card_present"
          },
          "customer_balance": {
            "$ref": "#/components/schemas/payment_method_details_customer_balance"
          },
          "eps": {
            "$ref": "#/components/schemas/payment_method_details_eps"
          },
          "fpx": {
            "$ref": "#/components/schemas/payment_method_details_fpx"
          },
          "giropay": {
            "$ref": "#/components/schemas/payment_method_details_giropay"
          },
          "grabpay": {
            "$ref": "#/components/schemas/payment_method_details_grabpay"
          },
          "ideal": {
            "$ref": "#/components/schemas/payment_method_details_ideal"
          },
          "interac_present": {
            "$ref": "#/components/schemas/payment_method_details_interac_present"
          },
          "klarna": {
            "$ref": "#/components/schemas/payment_method_details_klarna"
          },
          "konbini": {
            "$ref": "#/components/schemas/payment_method_details_konbini"
          },
          "link": {
            "$ref": "#/components/schemas/payment_method_details_link"
          },
          "multibanco": {
            "$ref": "#/components/schemas/payment_method_details_multibanco"
          },
          "oxxo": {
            "$ref": "#/components/schemas/payment_method_details_oxxo"
          },
          "p24": {
            "$ref": "#/components/schemas/payment_method_details_p24"
          },
          "paynow": {
            "$ref": "#/components/schemas/payment_method_details_paynow"
          },
          "pix": {
            "$ref": "#/components/schemas/payment_method_details_pix"
          },
          "promptpay": {
            "$ref": "#/components/schemas/payment_method_details_promptpay"
          },
          "sepa_credit_transfer": {
            "$ref": "#/components/schemas/payment_method_details_sepa_credit_transfer"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/payment_method_details_sepa_debit"
          },
          "sofort": {
            "$ref": "#/components/schemas/payment_method_details_sofort"
          },
          "stripe_account": {
            "$ref": "#/components/schemas/payment_method_details_stripe_account"
          },
          "type": {
            "description": "The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`, `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`, `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.\nAn additional hash is included on `payment_method_details` with a name matching this value.\nIt contains information specific to the payment method.",
            "maxLength": 5000,
            "type": "string"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/payment_method_details_us_bank_account"
          },
          "wechat": {
            "$ref": "#/components/schemas/payment_method_details_wechat"
          },
          "wechat_pay": {
            "$ref": "#/components/schemas/payment_method_details_wechat_pay"
          }
        },
        "required": [
          "type"
        ],
        "title": "payment_method_details",
        "type": "object",
        "x-expandableFields": [
          "ach_credit_transfer",
          "ach_debit",
          "acss_debit",
          "affirm",
          "afterpay_clearpay",
          "alipay",
          "au_becs_debit",
          "bacs_debit",
          "bancontact",
          "blik",
          "boleto",
          "card",
          "card_present",
          "customer_balance",
          "eps",
          "fpx",
          "giropay",
          "grabpay",
          "ideal",
          "interac_present",
          "klarna",
          "konbini",
          "link",
          "multibanco",
          "oxxo",
          "p24",
          "paynow",
          "pix",
          "promptpay",
          "sepa_credit_transfer",
          "sepa_debit",
          "sofort",
          "stripe_account",
          "us_bank_account",
          "wechat",
          "wechat_pay"
        ],
        "x-stripeResource": {
          "class_name": "PaymentMethodDetails",
          "in_class": "charge",
          "inner_classes": [
            "payment_flows_private_payment_methods_alipay_details",
            "payment_method_details_ach_credit_transfer",
            "payment_method_details_ach_debit",
            "payment_method_details_acss_debit",
            "payment_method_details_affirm",
            "payment_method_details_afterpay_clearpay",
            "payment_method_details_au_becs_debit",
            "payment_method_details_bacs_debit",
            "payment_method_details_bancontact",
            "payment_method_details_blik",
            "payment_method_details_boleto",
            "payment_method_details_card",
            "payment_method_details_card_present",
            "payment_method_details_customer_balance",
            "payment_method_details_eps",
            "payment_method_details_fpx",
            "payment_method_details_giropay",
            "payment_method_details_grabpay",
            "payment_method_details_ideal",
            "payment_method_details_interac_present",
            "payment_method_details_klarna",
            "payment_method_details_konbini",
            "payment_method_details_konbini_store",
            "payment_method_details_link",
            "payment_method_details_multibanco",
            "payment_method_details_oxxo",
            "payment_method_details_p24",
            "payment_method_details_paynow",
            "payment_method_details_pix",
            "payment_method_details_promptpay",
            "payment_method_details_sepa_credit_transfer",
            "payment_method_details_sepa_debit",
            "payment_method_details_sofort",
            "payment_method_details_stripe_account",
            "payment_method_details_us_bank_account",
            "payment_method_details_wechat",
            "payment_method_details_wechat_pay"
          ]
        }
      },
      "payment_method_details_ach_credit_transfer": {
        "description": "",
        "properties": {
          "account_number": {
            "description": "Account number to transfer funds to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the routing number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "description": "Routing transit number for the bank account to transfer funds to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "swift_code": {
            "description": "SWIFT code of the bank associated with the routing number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "account_number",
          "bank_name",
          "routing_number",
          "swift_code"
        ],
        "title": "payment_method_details_ach_credit_transfer",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AchCreditTransfer",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_ach_debit": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Type of entity that holds the account. This can be either `individual` or `company`.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "description": "Routing transit number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "account_holder_type",
          "bank_name",
          "country",
          "fingerprint",
          "last4",
          "routing_number"
        ],
        "title": "payment_method_details_ach_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AchDebit",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_acss_debit": {
        "description": "",
        "properties": {
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "institution_number": {
            "description": "Institution number of the bank account",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "mandate": {
            "description": "ID of the mandate used to make this payment.",
            "maxLength": 5000,
            "type": "string"
          },
          "transit_number": {
            "description": "Transit number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_name",
          "fingerprint",
          "institution_number",
          "last4",
          "transit_number"
        ],
        "title": "payment_method_details_acss_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AcssDebit",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_affirm": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_affirm",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Affirm",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_afterpay_clearpay": {
        "description": "",
        "properties": {
          "reference": {
            "description": "Order identifier shown to the merchant in Afterpay’s online portal.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "reference"
        ],
        "title": "payment_method_details_afterpay_clearpay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AfterpayClearpay",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_au_becs_debit": {
        "description": "",
        "properties": {
          "bsb_number": {
            "description": "Bank-State-Branch number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "mandate": {
            "description": "ID of the mandate used to make this payment.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "bsb_number",
          "fingerprint",
          "last4"
        ],
        "title": "payment_method_details_au_becs_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AuBecsDebit",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_bacs_debit": {
        "description": "",
        "properties": {
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "mandate": {
            "description": "ID of the mandate used to make this payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "sort_code": {
            "description": "Sort code of the bank account. (e.g., `10-20-30`)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "fingerprint",
          "last4",
          "mandate",
          "sort_code"
        ],
        "title": "payment_method_details_bacs_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BacsDebit",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_bancontact": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "Bank Identifier Code of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_sepa_debit": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "generated_sepa_debit_mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "iban_last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_language": {
            "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.\nCan be one of `en`, `de`, `fr`, or `nl`",
            "enum": [
              "de",
              "en",
              "fr",
              "nl"
            ],
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_code",
          "bank_name",
          "bic",
          "generated_sepa_debit",
          "generated_sepa_debit_mandate",
          "iban_last4",
          "preferred_language",
          "verified_name"
        ],
        "title": "payment_method_details_bancontact",
        "type": "object",
        "x-expandableFields": [
          "generated_sepa_debit",
          "generated_sepa_debit_mandate"
        ],
        "x-stripeResource": {
          "class_name": "Bancontact",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_blik": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_blik",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Blik",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_boleto": {
        "description": "",
        "properties": {
          "tax_id": {
            "description": "The tax ID of the customer (CPF for individuals consumers or CNPJ for businesses consumers)",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "tax_id"
        ],
        "title": "payment_method_details_boleto",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Boleto",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_card": {
        "description": "",
        "properties": {
          "brand": {
            "description": "Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "checks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_checks"
              }
            ],
            "description": "Check results by Card networks on Card address and CVC at time of payment.",
            "nullable": true
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "A high-level description of the type of cards issued in this range. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "iin": {
            "description": "Issuer identification number of the card. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "installments": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_installments"
              }
            ],
            "description": "Installment details for this payment (Mexico only).\n\nFor more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).",
            "nullable": true
          },
          "issuer": {
            "description": "The name of the card's issuing bank. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "mandate": {
            "description": "ID of the mandate used to make this payment or created by it.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "moto": {
            "description": "True if this payment was marked as MOTO and out of scope for SCA.",
            "nullable": true,
            "type": "boolean"
          },
          "network": {
            "description": "Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "three_d_secure": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/three_d_secure_details"
              }
            ],
            "description": "Populated if this transaction used 3D Secure authentication.",
            "nullable": true
          },
          "wallet": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_wallet"
              }
            ],
            "description": "If this Card is part of a card wallet, this contains the details of the card wallet.",
            "nullable": true
          }
        },
        "required": [
          "brand",
          "checks",
          "country",
          "exp_month",
          "exp_year",
          "funding",
          "installments",
          "last4",
          "mandate",
          "network",
          "three_d_secure",
          "wallet"
        ],
        "title": "payment_method_details_card",
        "type": "object",
        "x-expandableFields": [
          "checks",
          "installments",
          "three_d_secure",
          "wallet"
        ],
        "x-stripeResource": {
          "class_name": "Card",
          "in_class": "payment_method_details",
          "inner_classes": [
            "payment_method_details_card_checks",
            "payment_method_details_card_installments",
            "payment_method_details_card_wallet",
            "three_d_secure_details"
          ]
        }
      },
      "payment_method_details_card_checks": {
        "description": "",
        "properties": {
          "address_line1_check": {
            "description": "If a address line1 was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "address_postal_code_check": {
            "description": "If a address postal code was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cvc_check": {
            "description": "If a CVC was provided, results of the check, one of `pass`, `fail`, `unavailable`, or `unchecked`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address_line1_check",
          "address_postal_code_check",
          "cvc_check"
        ],
        "title": "payment_method_details_card_checks",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Checks",
          "in_class": "payment_method_details_card"
        }
      },
      "payment_method_details_card_installments": {
        "description": "",
        "properties": {
          "plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_installments_plan"
              }
            ],
            "description": "Installment plan selected for the payment.",
            "nullable": true
          }
        },
        "required": [
          "plan"
        ],
        "title": "payment_method_details_card_installments",
        "type": "object",
        "x-expandableFields": [
          "plan"
        ],
        "x-stripeResource": {
          "class_name": "Installments",
          "in_class": "payment_method_details_card"
        }
      },
      "payment_method_details_card_installments_plan": {
        "description": "",
        "properties": {
          "count": {
            "description": "For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.",
            "nullable": true,
            "type": "integer"
          },
          "interval": {
            "description": "For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.\nOne of `month`.",
            "enum": [
              "month"
            ],
            "nullable": true,
            "type": "string"
          },
          "type": {
            "description": "Type of installment plan, one of `fixed_count`.",
            "enum": [
              "fixed_count"
            ],
            "type": "string"
          }
        },
        "required": [
          "count",
          "interval",
          "type"
        ],
        "title": "payment_method_details_card_installments_plan",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Plan",
          "in_class": "payment_method_options_card_installments"
        }
      },
      "payment_method_details_card_present": {
        "description": "",
        "properties": {
          "amount_authorized": {
            "description": "The authorized amount",
            "nullable": true,
            "type": "integer"
          },
          "brand": {
            "description": "Card brand. Can be `amex`, `diners`, `discover`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "capture_before": {
            "description": "When using manual capture, a future timestamp after which the charge will be automatically refunded if uncaptured.",
            "format": "unix-time",
            "type": "integer"
          },
          "cardholder_name": {
            "description": "The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "A high-level description of the type of cards issued in this range. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "emv_auth_data": {
            "description": "Authorization response cryptogram.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_card": {
            "description": "ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "iin": {
            "description": "Issuer identification number of the card. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "incremental_authorization_supported": {
            "description": "Whether this [PaymentIntent](https://stripe.com/docs/api/payment_intents) is eligible for incremental authorizations. Request support using [request_incremental_authorization_support](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-payment_method_options-card_present-request_incremental_authorization_support).",
            "type": "boolean"
          },
          "issuer": {
            "description": "The name of the card's issuing bank. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network": {
            "description": "Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "overcapture_supported": {
            "description": "Defines whether the authorized amount can be over-captured or not",
            "type": "boolean"
          },
          "read_method": {
            "description": "How card details were read in this transaction.",
            "enum": [
              "contact_emv",
              "contactless_emv",
              "contactless_magstripe_mode",
              "magnetic_stripe_fallback",
              "magnetic_stripe_track2"
            ],
            "nullable": true,
            "type": "string"
          },
          "receipt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_present_receipt"
              }
            ],
            "description": "A collection of fields required to be displayed on receipts. Only required for EMV transactions.",
            "nullable": true
          }
        },
        "required": [
          "amount_authorized",
          "brand",
          "cardholder_name",
          "country",
          "emv_auth_data",
          "exp_month",
          "exp_year",
          "fingerprint",
          "funding",
          "generated_card",
          "incremental_authorization_supported",
          "last4",
          "network",
          "overcapture_supported",
          "read_method",
          "receipt"
        ],
        "title": "payment_method_details_card_present",
        "type": "object",
        "x-expandableFields": [
          "receipt"
        ],
        "x-stripeResource": {
          "class_name": "CardPresent",
          "in_class": "payment_method_details",
          "inner_classes": [
            "payment_method_details_card_present_receipt"
          ]
        }
      },
      "payment_method_details_card_present_receipt": {
        "description": "",
        "properties": {
          "account_type": {
            "description": "The type of account being debited or credited",
            "enum": [
              "checking",
              "credit",
              "prepaid",
              "unknown"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "application_cryptogram": {
            "description": "EMV tag 9F26, cryptogram generated by the integrated circuit chip.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "application_preferred_name": {
            "description": "Mnenomic of the Application Identifier.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "authorization_code": {
            "description": "Identifier for this transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "authorization_response_code": {
            "description": "EMV tag 8A. A code returned by the card issuer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cardholder_verification_method": {
            "description": "How the cardholder verified ownership of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "dedicated_file_name": {
            "description": "EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "terminal_verification_results": {
            "description": "The outcome of a series of EMV functions performed by the card reader.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transaction_status_information": {
            "description": "An indication of various EMV functions performed during the transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "application_cryptogram",
          "application_preferred_name",
          "authorization_code",
          "authorization_response_code",
          "cardholder_verification_method",
          "dedicated_file_name",
          "terminal_verification_results",
          "transaction_status_information"
        ],
        "title": "payment_method_details_card_present_receipt",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Receipt",
          "in_class": "payment_method_details_card_present"
        }
      },
      "payment_method_details_card_wallet": {
        "description": "",
        "properties": {
          "amex_express_checkout": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_amex_express_checkout"
          },
          "apple_pay": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_apple_pay"
          },
          "dynamic_last4": {
            "description": "(For tokenized numbers only.) The last four digits of the device account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "google_pay": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_google_pay"
          },
          "masterpass": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_masterpass"
          },
          "samsung_pay": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_samsung_pay"
          },
          "type": {
            "description": "The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.",
            "enum": [
              "amex_express_checkout",
              "apple_pay",
              "google_pay",
              "masterpass",
              "samsung_pay",
              "visa_checkout"
            ],
            "type": "string"
          },
          "visa_checkout": {
            "$ref": "#/components/schemas/payment_method_details_card_wallet_visa_checkout"
          }
        },
        "required": [
          "dynamic_last4",
          "type"
        ],
        "title": "payment_method_details_card_wallet",
        "type": "object",
        "x-expandableFields": [
          "amex_express_checkout",
          "apple_pay",
          "google_pay",
          "masterpass",
          "samsung_pay",
          "visa_checkout"
        ],
        "x-stripeResource": {
          "class_name": "Wallet",
          "in_class": "payment_method_details_card",
          "inner_classes": [
            "payment_method_details_card_wallet_amex_express_checkout",
            "payment_method_details_card_wallet_apple_pay",
            "payment_method_details_card_wallet_google_pay",
            "payment_method_details_card_wallet_masterpass",
            "payment_method_details_card_wallet_samsung_pay",
            "payment_method_details_card_wallet_visa_checkout"
          ]
        }
      },
      "payment_method_details_card_wallet_amex_express_checkout": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_card_wallet_amex_express_checkout",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AmexExpressCheckout",
          "in_class": "payment_method_details_card_wallet"
        }
      },
      "payment_method_details_card_wallet_apple_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_card_wallet_apple_pay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ApplePay",
          "in_class": "payment_method_details_card_wallet"
        }
      },
      "payment_method_details_card_wallet_google_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_card_wallet_google_pay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "GooglePay",
          "in_class": "payment_method_details_card_wallet"
        }
      },
      "payment_method_details_card_wallet_masterpass": {
        "description": "",
        "properties": {
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          },
          "email": {
            "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          }
        },
        "required": [
          "billing_address",
          "email",
          "name",
          "shipping_address"
        ],
        "title": "payment_method_details_card_wallet_masterpass",
        "type": "object",
        "x-expandableFields": [
          "billing_address",
          "shipping_address"
        ],
        "x-stripeResource": {
          "class_name": "Masterpass",
          "in_class": "payment_method_details_card_wallet"
        }
      },
      "payment_method_details_card_wallet_samsung_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_card_wallet_samsung_pay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SamsungPay",
          "in_class": "payment_method_details_card_wallet"
        }
      },
      "payment_method_details_card_wallet_visa_checkout": {
        "description": "",
        "properties": {
          "billing_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified billing address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          },
          "email": {
            "description": "Owner's verified email. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Owner's verified full name. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "shipping_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's verified shipping address. Values are verified or provided by the wallet directly (if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          }
        },
        "required": [
          "billing_address",
          "email",
          "name",
          "shipping_address"
        ],
        "title": "payment_method_details_card_wallet_visa_checkout",
        "type": "object",
        "x-expandableFields": [
          "billing_address",
          "shipping_address"
        ],
        "x-stripeResource": {
          "class_name": "VisaCheckout",
          "in_class": "payment_method_details_card_wallet"
        }
      },
      "payment_method_details_customer_balance": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_customer_balance",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CustomerBalance",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_eps": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.",
            "enum": [
              "arzte_und_apotheker_bank",
              "austrian_anadi_bank_ag",
              "bank_austria",
              "bankhaus_carl_spangler",
              "bankhaus_schelhammer_und_schattera_ag",
              "bawag_psk_ag",
              "bks_bank_ag",
              "brull_kallmus_bank_ag",
              "btv_vier_lander_bank",
              "capital_bank_grawe_gruppe_ag",
              "deutsche_bank_ag",
              "dolomitenbank",
              "easybank_ag",
              "erste_bank_und_sparkassen",
              "hypo_alpeadriabank_international_ag",
              "hypo_bank_burgenland_aktiengesellschaft",
              "hypo_noe_lb_fur_niederosterreich_u_wien",
              "hypo_oberosterreich_salzburg_steiermark",
              "hypo_tirol_bank_ag",
              "hypo_vorarlberg_bank_ag",
              "marchfelder_bank",
              "oberbank_ag",
              "raiffeisen_bankengruppe_osterreich",
              "schoellerbank_ag",
              "sparda_bank_wien",
              "volksbank_gruppe",
              "volkskreditbank_ag",
              "vr_bank_braunau"
            ],
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by EPS directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.\nEPS rarely provides this information so the attribute is usually empty.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank",
          "verified_name"
        ],
        "title": "payment_method_details_eps",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Eps",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_fpx": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Account holder type, if provided. Can be one of `individual` or `company`.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank": {
            "description": "The customer's bank. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`, or `bank_of_china`.",
            "enum": [
              "affin_bank",
              "agrobank",
              "alliance_bank",
              "ambank",
              "bank_islam",
              "bank_muamalat",
              "bank_of_china",
              "bank_rakyat",
              "bsn",
              "cimb",
              "deutsche_bank",
              "hong_leong_bank",
              "hsbc",
              "kfh",
              "maybank2e",
              "maybank2u",
              "ocbc",
              "pb_enterprise",
              "public_bank",
              "rhb",
              "standard_chartered",
              "uob"
            ],
            "type": "string"
          },
          "transaction_id": {
            "description": "Unique transaction id generated by FPX for every request from the merchant",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "account_holder_type",
          "bank",
          "transaction_id"
        ],
        "title": "payment_method_details_fpx",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Fpx",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_giropay": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "Bank Identifier Code of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by Giropay directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.\nGiropay rarely provides this information so the attribute is usually empty.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_code",
          "bank_name",
          "bic",
          "verified_name"
        ],
        "title": "payment_method_details_giropay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Giropay",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_grabpay": {
        "description": "",
        "properties": {
          "transaction_id": {
            "description": "Unique transaction id generated by GrabPay",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "transaction_id"
        ],
        "title": "payment_method_details_grabpay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Grabpay",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_ideal": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, or `van_lanschot`.",
            "enum": [
              "abn_amro",
              "asn_bank",
              "bunq",
              "handelsbanken",
              "ing",
              "knab",
              "moneyou",
              "rabobank",
              "regiobank",
              "revolut",
              "sns_bank",
              "triodos_bank",
              "van_lanschot"
            ],
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "The Bank Identifier Code of the customer's bank.",
            "enum": [
              "ABNANL2A",
              "ASNBNL21",
              "BUNQNL2A",
              "FVLBNL22",
              "HANDNL2A",
              "INGBNL2A",
              "KNABNL2H",
              "MOYONL21",
              "RABONL2U",
              "RBRBNL21",
              "REVOLT21",
              "SNSBNL2A",
              "TRIONL2U"
            ],
            "nullable": true,
            "type": "string"
          },
          "generated_sepa_debit": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "generated_sepa_debit_mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "iban_last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by iDEAL directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank",
          "bic",
          "generated_sepa_debit",
          "generated_sepa_debit_mandate",
          "iban_last4",
          "verified_name"
        ],
        "title": "payment_method_details_ideal",
        "type": "object",
        "x-expandableFields": [
          "generated_sepa_debit",
          "generated_sepa_debit_mandate"
        ],
        "x-stripeResource": {
          "class_name": "Ideal",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_interac_present": {
        "description": "",
        "properties": {
          "brand": {
            "description": "Card brand. Can be `interac`, `mastercard` or `visa`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cardholder_name": {
            "description": "The cardholder name as read from the card, in [ISO 7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include alphanumeric characters, special characters and first/last name separator (`/`). In some cases, the cardholder name may not be available depending on how the issuer has configured the card. Cardholder name is typically not available on swipe or contactless payments, such as those made with Apple Pay and Google Pay.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the international breakdown of cards you've collected.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "A high-level description of the type of cards issued in this range. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "emv_auth_data": {
            "description": "Authorization response cryptogram.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "description": "Two-digit number representing the card's expiration month.",
            "type": "integer"
          },
          "exp_year": {
            "description": "Four-digit number representing the card's expiration year.",
            "type": "integer"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve signed up with you are using the same card number, for example. For payment methods that tokenize card information (Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n\n*Starting May 1, 2021, card fingerprint in India for Connect will change to allow two fingerprints for the same card --- one for India and one for the rest of the world.*",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "funding": {
            "description": "Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_card": {
            "description": "ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "iin": {
            "description": "Issuer identification number of the card. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issuer": {
            "description": "The name of the card's issuing bank. (For internal use only and not typically available in standard API requests.)",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "network": {
            "description": "Identifies which network this charge was processed on. Can be `amex`, `cartes_bancaires`, `diners`, `discover`, `interac`, `jcb`, `mastercard`, `unionpay`, `visa`, or `unknown`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_locales": {
            "description": "EMV tag 5F2D. Preferred languages specified by the integrated circuit chip.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "read_method": {
            "description": "How card details were read in this transaction.",
            "enum": [
              "contact_emv",
              "contactless_emv",
              "contactless_magstripe_mode",
              "magnetic_stripe_fallback",
              "magnetic_stripe_track2"
            ],
            "nullable": true,
            "type": "string"
          },
          "receipt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_interac_present_receipt"
              }
            ],
            "description": "A collection of fields required to be displayed on receipts. Only required for EMV transactions.",
            "nullable": true
          }
        },
        "required": [
          "brand",
          "cardholder_name",
          "country",
          "emv_auth_data",
          "exp_month",
          "exp_year",
          "fingerprint",
          "funding",
          "generated_card",
          "last4",
          "network",
          "preferred_locales",
          "read_method",
          "receipt"
        ],
        "title": "payment_method_details_interac_present",
        "type": "object",
        "x-expandableFields": [
          "receipt"
        ],
        "x-stripeResource": {
          "class_name": "InteracPresent",
          "in_class": "payment_method_details",
          "inner_classes": [
            "payment_method_details_interac_present_receipt"
          ]
        }
      },
      "payment_method_details_interac_present_receipt": {
        "description": "",
        "properties": {
          "account_type": {
            "description": "The type of account being debited or credited",
            "enum": [
              "checking",
              "savings",
              "unknown"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "application_cryptogram": {
            "description": "EMV tag 9F26, cryptogram generated by the integrated circuit chip.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "application_preferred_name": {
            "description": "Mnenomic of the Application Identifier.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "authorization_code": {
            "description": "Identifier for this transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "authorization_response_code": {
            "description": "EMV tag 8A. A code returned by the card issuer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "cardholder_verification_method": {
            "description": "How the cardholder verified ownership of the card.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "dedicated_file_name": {
            "description": "EMV tag 84. Similar to the application identifier stored on the integrated circuit chip.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "terminal_verification_results": {
            "description": "The outcome of a series of EMV functions performed by the card reader.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transaction_status_information": {
            "description": "An indication of various EMV functions performed during the transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "application_cryptogram",
          "application_preferred_name",
          "authorization_code",
          "authorization_response_code",
          "cardholder_verification_method",
          "dedicated_file_name",
          "terminal_verification_results",
          "transaction_status_information"
        ],
        "title": "payment_method_details_interac_present_receipt",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Receipt",
          "in_class": "payment_method_details_interac_present"
        }
      },
      "payment_method_details_klarna": {
        "description": "",
        "properties": {
          "payment_method_category": {
            "description": "The Klarna payment method used for this transaction.\nCan be one of `pay_later`, `pay_now`, `pay_with_financing`, or `pay_in_installments`",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_locale": {
            "description": "Preferred language of the Klarna authorization page that the customer is redirected to.\nCan be one of `de-AT`, `en-AT`, `nl-BE`, `fr-BE`, `en-BE`, `de-DE`, `en-DE`, `da-DK`, `en-DK`, `es-ES`, `en-ES`, `fi-FI`, `sv-FI`, `en-FI`, `en-GB`, `en-IE`, `it-IT`, `en-IT`, `nl-NL`, `en-NL`, `nb-NO`, `en-NO`, `sv-SE`, `en-SE`, `en-US`, `es-US`, `fr-FR`, `en-FR`, `en-AU`, `en-NZ`, `en-CA`, `fr-CA`, `pl-PL`, `en-PL`, `pt-PT`, `en-PT`, `de-CH`, `fr-CH`, `it-CH`, or `en-CH`",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "payment_method_category",
          "preferred_locale"
        ],
        "title": "payment_method_details_klarna",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Klarna",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_konbini": {
        "description": "",
        "properties": {
          "store": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_konbini_store"
              }
            ],
            "description": "If the payment succeeded, this contains the details of the convenience store where the payment was completed.",
            "nullable": true
          }
        },
        "required": [
          "store"
        ],
        "title": "payment_method_details_konbini",
        "type": "object",
        "x-expandableFields": [
          "store"
        ],
        "x-stripeResource": {
          "class_name": "Konbini",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_konbini_store": {
        "description": "",
        "properties": {
          "chain": {
            "description": "The name of the convenience store chain where the payment was completed.",
            "enum": [
              "familymart",
              "lawson",
              "ministop",
              "seicomart"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "chain"
        ],
        "title": "payment_method_details_konbini_store",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Store",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_link": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_link",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Link",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_multibanco": {
        "description": "",
        "properties": {
          "entity": {
            "description": "Entity number associated with this Multibanco payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "reference": {
            "description": "Reference number associated with this Multibanco payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "entity",
          "reference"
        ],
        "title": "payment_method_details_multibanco",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Multibanco",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_oxxo": {
        "description": "",
        "properties": {
          "number": {
            "description": "OXXO reference number",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "number"
        ],
        "title": "payment_method_details_oxxo",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Oxxo",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_p24": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Can be one of `ing`, `citi_handlowy`, `tmobile_usbugi_bankowe`, `plus_bank`, `etransfer_pocztowy24`, `banki_spbdzielcze`, `bank_nowy_bfg_sa`, `getin_bank`, `blik`, `noble_pay`, `ideabank`, `envelobank`, `santander_przelew24`, `nest_przelew`, `mbank_mtransfer`, `inteligo`, `pbac_z_ipko`, `bnp_paribas`, `credit_agricole`, `toyota_bank`, `bank_pekao_sa`, `volkswagen_bank`, `bank_millennium`, `alior_bank`, or `boz`.",
            "enum": [
              "alior_bank",
              "bank_millennium",
              "bank_nowy_bfg_sa",
              "bank_pekao_sa",
              "banki_spbdzielcze",
              "blik",
              "bnp_paribas",
              "boz",
              "citi_handlowy",
              "credit_agricole",
              "envelobank",
              "etransfer_pocztowy24",
              "getin_bank",
              "ideabank",
              "ing",
              "inteligo",
              "mbank_mtransfer",
              "nest_przelew",
              "noble_pay",
              "pbac_z_ipko",
              "plus_bank",
              "santander_przelew24",
              "tmobile_usbugi_bankowe",
              "toyota_bank",
              "volkswagen_bank"
            ],
            "nullable": true,
            "type": "string"
          },
          "reference": {
            "description": "Unique reference for this Przelewy24 payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by Przelewy24 directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.\nPrzelewy24 rarely provides this information so the attribute is usually empty.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank",
          "reference",
          "verified_name"
        ],
        "title": "payment_method_details_p24",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "P24",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_paynow": {
        "description": "",
        "properties": {
          "reference": {
            "description": "Reference number associated with this PayNow payment",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "reference"
        ],
        "title": "payment_method_details_paynow",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Paynow",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_pix": {
        "description": "",
        "properties": {
          "bank_transaction_id": {
            "description": "Unique transaction id generated by BCB",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "payment_method_details_pix",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Pix",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_promptpay": {
        "description": "",
        "properties": {
          "reference": {
            "description": "Bill reference generated by PromptPay",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "reference"
        ],
        "title": "payment_method_details_promptpay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Promptpay",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_sepa_credit_transfer": {
        "description": "",
        "properties": {
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "Bank Identifier Code of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "iban": {
            "description": "IBAN of the bank account to transfer funds to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_name",
          "bic",
          "iban"
        ],
        "title": "payment_method_details_sepa_credit_transfer",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SepaCreditTransfer",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_sepa_debit": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "branch_code": {
            "description": "Branch code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "mandate": {
            "description": "ID of the mandate used to make this payment.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_code",
          "branch_code",
          "country",
          "fingerprint",
          "last4",
          "mandate"
        ],
        "title": "payment_method_details_sepa_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SepaDebit",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_sofort": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "Bank Identifier Code of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_sepa_debit": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "generated_sepa_debit_mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this Charge.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "iban_last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_language": {
            "description": "Preferred language of the SOFORT authorization page that the customer is redirected to.\nCan be one of `de`, `en`, `es`, `fr`, `it`, `nl`, or `pl`",
            "enum": [
              "de",
              "en",
              "es",
              "fr",
              "it",
              "nl",
              "pl"
            ],
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by SOFORT directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_code",
          "bank_name",
          "bic",
          "country",
          "generated_sepa_debit",
          "generated_sepa_debit_mandate",
          "iban_last4",
          "preferred_language",
          "verified_name"
        ],
        "title": "payment_method_details_sofort",
        "type": "object",
        "x-expandableFields": [
          "generated_sepa_debit",
          "generated_sepa_debit_mandate"
        ],
        "x-stripeResource": {
          "class_name": "Sofort",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_stripe_account": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_stripe_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "StripeAccount",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_us_bank_account": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Account holder type: individual or company.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "Account type: checkings or savings. Defaults to checking if omitted.",
            "enum": [
              "checking",
              "savings"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "description": "Routing number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "account_holder_type",
          "account_type",
          "bank_name",
          "fingerprint",
          "last4",
          "routing_number"
        ],
        "title": "payment_method_details_us_bank_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "UsBankAccount",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_wechat": {
        "description": "",
        "properties": {},
        "title": "payment_method_details_wechat",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Wechat",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_details_wechat_pay": {
        "description": "",
        "properties": {
          "fingerprint": {
            "description": "Uniquely identifies this particular WeChat Pay account. You can use this attribute to check whether two WeChat accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transaction_id": {
            "description": "Transaction ID of this particular WeChat Pay transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "fingerprint",
          "transaction_id"
        ],
        "title": "payment_method_details_wechat_pay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "WechatPay",
          "in_class": "payment_method_details"
        }
      },
      "payment_method_eps": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Should be one of `arzte_und_apotheker_bank`, `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`, `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`, `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`, `easybank_ag`, `erste_bank_und_sparkassen`, `hypo_alpeadriabank_international_ag`, `hypo_noe_lb_fur_niederosterreich_u_wien`, `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`, `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`, `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or `vr_bank_braunau`.",
            "enum": [
              "arzte_und_apotheker_bank",
              "austrian_anadi_bank_ag",
              "bank_austria",
              "bankhaus_carl_spangler",
              "bankhaus_schelhammer_und_schattera_ag",
              "bawag_psk_ag",
              "bks_bank_ag",
              "brull_kallmus_bank_ag",
              "btv_vier_lander_bank",
              "capital_bank_grawe_gruppe_ag",
              "deutsche_bank_ag",
              "dolomitenbank",
              "easybank_ag",
              "erste_bank_und_sparkassen",
              "hypo_alpeadriabank_international_ag",
              "hypo_bank_burgenland_aktiengesellschaft",
              "hypo_noe_lb_fur_niederosterreich_u_wien",
              "hypo_oberosterreich_salzburg_steiermark",
              "hypo_tirol_bank_ag",
              "hypo_vorarlberg_bank_ag",
              "marchfelder_bank",
              "oberbank_ag",
              "raiffeisen_bankengruppe_osterreich",
              "schoellerbank_ag",
              "sparda_bank_wien",
              "volksbank_gruppe",
              "volkskreditbank_ag",
              "vr_bank_braunau"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank"
        ],
        "title": "payment_method_eps",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Eps",
          "in_class": "payment_method"
        }
      },
      "payment_method_fpx": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Account holder type, if provided. Can be one of `individual` or `company`.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank": {
            "description": "The customer's bank, if provided. Can be one of `affin_bank`, `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`, or `bank_of_china`.",
            "enum": [
              "affin_bank",
              "agrobank",
              "alliance_bank",
              "ambank",
              "bank_islam",
              "bank_muamalat",
              "bank_of_china",
              "bank_rakyat",
              "bsn",
              "cimb",
              "deutsche_bank",
              "hong_leong_bank",
              "hsbc",
              "kfh",
              "maybank2e",
              "maybank2u",
              "ocbc",
              "pb_enterprise",
              "public_bank",
              "rhb",
              "standard_chartered",
              "uob"
            ],
            "type": "string"
          }
        },
        "required": [
          "account_holder_type",
          "bank"
        ],
        "title": "payment_method_fpx",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Fpx",
          "in_class": "payment_method"
        }
      },
      "payment_method_giropay": {
        "description": "",
        "properties": {},
        "title": "payment_method_giropay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Giropay",
          "in_class": "payment_method"
        }
      },
      "payment_method_grabpay": {
        "description": "",
        "properties": {},
        "title": "payment_method_grabpay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Grabpay",
          "in_class": "payment_method"
        }
      },
      "payment_method_ideal": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank, if provided. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, or `van_lanschot`.",
            "enum": [
              "abn_amro",
              "asn_bank",
              "bunq",
              "handelsbanken",
              "ing",
              "knab",
              "moneyou",
              "rabobank",
              "regiobank",
              "revolut",
              "sns_bank",
              "triodos_bank",
              "van_lanschot"
            ],
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "The Bank Identifier Code of the customer's bank, if the bank was provided.",
            "enum": [
              "ABNANL2A",
              "ASNBNL21",
              "BUNQNL2A",
              "FVLBNL22",
              "HANDNL2A",
              "INGBNL2A",
              "KNABNL2H",
              "MOYONL21",
              "RABONL2U",
              "RBRBNL21",
              "REVOLT21",
              "SNSBNL2A",
              "TRIONL2U"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank",
          "bic"
        ],
        "title": "payment_method_ideal",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Ideal",
          "in_class": "payment_method"
        }
      },
      "payment_method_interac_present": {
        "description": "",
        "properties": {},
        "title": "payment_method_interac_present",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "InteracPresent",
          "in_class": "payment_method"
        }
      },
      "payment_method_klarna": {
        "description": "",
        "properties": {
          "dob": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_flows_private_payment_methods_klarna_dob"
              }
            ],
            "description": "The customer's date of birth, if provided.",
            "nullable": true
          }
        },
        "required": [
          "dob"
        ],
        "title": "payment_method_klarna",
        "type": "object",
        "x-expandableFields": [
          "dob"
        ],
        "x-stripeResource": {
          "class_name": "Klarna",
          "in_class": "payment_method",
          "inner_classes": [
            "payment_flows_private_payment_methods_klarna_dob"
          ]
        }
      },
      "payment_method_konbini": {
        "description": "",
        "properties": {},
        "title": "payment_method_konbini",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Konbini",
          "in_class": "payment_method"
        }
      },
      "payment_method_link": {
        "description": "",
        "properties": {
          "email": {
            "description": "Account owner's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "persistent_token": {
            "description": "Token used for persistent Link logins.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "title": "payment_method_link",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Link",
          "in_class": "payment_method"
        }
      },
      "payment_method_options_affirm": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_affirm",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Affirm",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_afterpay_clearpay": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "reference": {
            "description": "Order identifier shown to the customer in Afterpay’s online portal. We recommend using a value that helps you answer any questions a customer might have about\nthe payment. The identifier is limited to 128 characters and may contain only letters, digits, underscores, backslashes and dashes.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "reference"
        ],
        "title": "payment_method_options_afterpay_clearpay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AfterpayClearpay",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_alipay": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_alipay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Alipay",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_bacs_debit": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_bacs_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BacsDebit",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_bancontact": {
        "description": "",
        "properties": {
          "preferred_language": {
            "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.",
            "enum": [
              "de",
              "en",
              "fr",
              "nl"
            ],
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session"
            ],
            "type": "string"
          }
        },
        "required": [
          "preferred_language"
        ],
        "title": "payment_method_options_bancontact",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Bancontact",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_boleto": {
        "description": "",
        "properties": {
          "expires_after_days": {
            "description": "The number of calendar days before a Boleto voucher expires. For example, if you create a Boleto voucher on Monday and you set expires_after_days to 2, the Boleto voucher will expire on Wednesday at 23:59 America/Sao_Paulo time.",
            "type": "integer"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session",
              "on_session"
            ],
            "type": "string"
          }
        },
        "required": [
          "expires_after_days"
        ],
        "title": "payment_method_options_boleto",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Boleto",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_card_installments": {
        "description": "",
        "properties": {
          "available_plans": {
            "description": "Installment plans that may be selected for this PaymentIntent.",
            "items": {
              "$ref": "#/components/schemas/payment_method_details_card_installments_plan"
            },
            "nullable": true,
            "type": "array"
          },
          "enabled": {
            "description": "Whether Installments are enabled for this PaymentIntent.",
            "type": "boolean"
          },
          "plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_method_details_card_installments_plan"
              }
            ],
            "description": "Installment plan selected for this PaymentIntent.",
            "nullable": true
          }
        },
        "required": [
          "available_plans",
          "enabled",
          "plan"
        ],
        "title": "payment_method_options_card_installments",
        "type": "object",
        "x-expandableFields": [
          "available_plans",
          "plan"
        ],
        "x-stripeResource": {
          "class_name": "Installments",
          "in_class": "payment_intent_payment_method_options_card",
          "inner_classes": [
            "payment_method_details_card_installments_plan"
          ]
        }
      },
      "payment_method_options_card_mandate_options": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount to be charged for future payments.",
            "type": "integer"
          },
          "amount_type": {
            "description": "One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.",
            "enum": [
              "fixed",
              "maximum"
            ],
            "type": "string"
          },
          "description": {
            "description": "A description of the mandate or subscription that is meant to be displayed to the customer.",
            "maxLength": 200,
            "nullable": true,
            "type": "string"
          },
          "end_date": {
            "description": "End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "interval": {
            "description": "Specifies payment frequency. One of `day`, `week`, `month`, `year`, or `sporadic`.",
            "enum": [
              "day",
              "month",
              "sporadic",
              "week",
              "year"
            ],
            "type": "string"
          },
          "interval_count": {
            "description": "The number of intervals between payments. For example, `interval=month` and `interval_count=3` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when `interval=sporadic`.",
            "nullable": true,
            "type": "integer"
          },
          "reference": {
            "description": "Unique identifier for the mandate or subscription.",
            "maxLength": 80,
            "type": "string"
          },
          "start_date": {
            "description": "Start date of the mandate or subscription. Start date should not be lesser than yesterday.",
            "format": "unix-time",
            "type": "integer"
          },
          "supported_types": {
            "description": "Specifies the type of mandates supported. Possible values are `india`.",
            "items": {
              "enum": [
                "india"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "amount",
          "amount_type",
          "description",
          "end_date",
          "interval",
          "interval_count",
          "reference",
          "start_date",
          "supported_types"
        ],
        "title": "payment_method_options_card_mandate_options",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "MandateOptions",
          "in_class": "payment_intent_payment_method_options_card"
        }
      },
      "payment_method_options_card_present": {
        "description": "",
        "properties": {
          "request_extended_authorization": {
            "description": "Request ability to capture this payment beyond the standard [authorization validity window](https://stripe.com/docs/terminal/features/extended-authorizations#authorization-validity)",
            "nullable": true,
            "type": "boolean"
          },
          "request_incremental_authorization_support": {
            "description": "Request ability to [increment](https://stripe.com/docs/terminal/features/incremental-authorizations) this PaymentIntent if the combination of MCC and card brand is eligible. Check [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported) in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm) response to verify support.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "request_extended_authorization",
          "request_incremental_authorization_support"
        ],
        "title": "payment_method_options_card_present",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CardPresent",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_customer_balance": {
        "description": "",
        "properties": {
          "bank_transfer": {
            "$ref": "#/components/schemas/payment_method_options_customer_balance_bank_transfer"
          },
          "funding_type": {
            "description": "The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.",
            "enum": [
              "bank_transfer"
            ],
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "funding_type"
        ],
        "title": "payment_method_options_customer_balance",
        "type": "object",
        "x-expandableFields": [
          "bank_transfer"
        ],
        "x-stripeResource": {
          "class_name": "CustomerBalance",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_customer_balance_bank_transfer": {
        "description": "",
        "properties": {
          "eu_bank_transfer": {
            "$ref": "#/components/schemas/payment_method_options_customer_balance_eu_bank_account"
          },
          "requested_address_types": {
            "description": "List of address types that should be returned in the financial_addresses response. If not specified, all valid types will be returned.\n\nPermitted values include: `sort_code`, `zengin`, `iban`, or `spei`.",
            "items": {
              "enum": [
                "iban",
                "sepa",
                "sort_code",
                "spei",
                "zengin"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          },
          "type": {
            "description": "The bank transfer type that this PaymentIntent is allowed to use for funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, or `mx_bank_transfer`.",
            "enum": [
              "eu_bank_transfer",
              "gb_bank_transfer",
              "jp_bank_transfer",
              "mx_bank_transfer"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "type"
        ],
        "title": "payment_method_options_customer_balance_bank_transfer",
        "type": "object",
        "x-expandableFields": [
          "eu_bank_transfer"
        ],
        "x-stripeResource": {
          "class_name": "BankTransfer",
          "in_class": "payment_intent_payment_method_options",
          "inner_classes": [
            "payment_method_options_customer_balance_eu_bank_account"
          ]
        }
      },
      "payment_method_options_customer_balance_eu_bank_account": {
        "description": "",
        "properties": {
          "country": {
            "description": "The desired country code of the bank account information. Permitted values include: `DE`, `ES`, `FR`, `IE`, or `NL`.",
            "enum": [
              "DE",
              "ES",
              "FR",
              "IE",
              "NL"
            ],
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "title": "payment_method_options_customer_balance_eu_bank_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "EuBankTransfer",
          "in_class": "payment_method_options_customer_balance_bank_transfer"
        }
      },
      "payment_method_options_fpx": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_fpx",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Fpx",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_giropay": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_giropay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Giropay",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_grabpay": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_grabpay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Grabpay",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_ideal": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_ideal",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Ideal",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_interac_present": {
        "description": "",
        "properties": {},
        "title": "payment_method_options_interac_present",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "InteracPresent",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_klarna": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "preferred_locale": {
            "description": "Preferred locale of the Klarna checkout page that the customer is redirected to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "preferred_locale"
        ],
        "title": "payment_method_options_klarna",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Klarna",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_konbini": {
        "description": "",
        "properties": {
          "confirmation_number": {
            "description": "An optional 10 to 11 digit numeric-only string determining the confirmation code at applicable convenience stores.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "expires_after_days": {
            "description": "The number of calendar days (between 1 and 60) after which Konbini payment instructions will expire. For example, if a PaymentIntent is confirmed with Konbini and `expires_after_days` set to 2 on Monday JST, the instructions will expire on Wednesday 23:59:59 JST.",
            "nullable": true,
            "type": "integer"
          },
          "expires_at": {
            "description": "The timestamp at which the Konbini payment instructions will expire. Only one of `expires_after_days` or `expires_at` may be set.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "product_description": {
            "description": "A product descriptor of up to 22 characters, which will appear to customers at the convenience store.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "confirmation_number",
          "expires_after_days",
          "expires_at",
          "product_description"
        ],
        "title": "payment_method_options_konbini",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Konbini",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_oxxo": {
        "description": "",
        "properties": {
          "expires_after_days": {
            "description": "The number of calendar days before an OXXO invoice expires. For example, if you create an OXXO invoice on Monday and you set expires_after_days to 2, the OXXO invoice will expire on Wednesday at 23:59 America/Mexico_City time.",
            "type": "integer"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "expires_after_days"
        ],
        "title": "payment_method_options_oxxo",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Oxxo",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_p24": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_p24",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "P24",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_paynow": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_paynow",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Paynow",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_paypal": {
        "description": "",
        "properties": {
          "capture_method": {
            "description": "Controls when the funds will be captured from the customer's account.",
            "enum": [
              "manual"
            ],
            "type": "string"
          },
          "preferred_locale": {
            "description": "Preferred locale of the PayPal checkout page that the customer is redirected to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "preferred_locale"
        ],
        "title": "payment_method_options_paypal",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Paypal",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_pix": {
        "description": "",
        "properties": {
          "expires_after_seconds": {
            "description": "The number of seconds (between 10 and 1209600) after which Pix payment will expire.",
            "nullable": true,
            "type": "integer"
          },
          "expires_at": {
            "description": "The timestamp at which the Pix expires.",
            "nullable": true,
            "type": "integer"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "expires_after_seconds",
          "expires_at"
        ],
        "title": "payment_method_options_pix",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Pix",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_promptpay": {
        "description": "",
        "properties": {
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "title": "payment_method_options_promptpay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Promptpay",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_sofort": {
        "description": "",
        "properties": {
          "preferred_language": {
            "description": "Preferred language of the SOFORT authorization page that the customer is redirected to.",
            "enum": [
              "de",
              "en",
              "es",
              "fr",
              "it",
              "nl",
              "pl"
            ],
            "nullable": true,
            "type": "string"
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none",
              "off_session"
            ],
            "type": "string"
          }
        },
        "required": [
          "preferred_language"
        ],
        "title": "payment_method_options_sofort",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Sofort",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_options_wechat_pay": {
        "description": "",
        "properties": {
          "app_id": {
            "description": "The app ID registered with WeChat Pay. Only required when client is ios or android.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "client": {
            "description": "The client type that the end customer will pay from",
            "enum": [
              "android",
              "ios",
              "web"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "setup_future_usage": {
            "description": "Indicates that you intend to make future payments with this PaymentIntent's payment method.\n\nProviding this parameter will [attach the payment method](https://stripe.com/docs/payments/save-during-payment) to the PaymentIntent's Customer, if present, after the PaymentIntent is confirmed and any required actions from the user are complete. If no Customer was provided, the payment method can still be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer after the transaction completes.\n\nWhen processing card payments, Stripe also uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules, such as [SCA](https://stripe.com/docs/strong-customer-authentication).",
            "enum": [
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "app_id",
          "client"
        ],
        "title": "payment_method_options_wechat_pay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "WechatPay",
          "in_class": "payment_intent_payment_method_options"
        }
      },
      "payment_method_oxxo": {
        "description": "",
        "properties": {},
        "title": "payment_method_oxxo",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Oxxo",
          "in_class": "payment_method"
        }
      },
      "payment_method_p24": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank, if provided.",
            "enum": [
              "alior_bank",
              "bank_millennium",
              "bank_nowy_bfg_sa",
              "bank_pekao_sa",
              "banki_spbdzielcze",
              "blik",
              "bnp_paribas",
              "boz",
              "citi_handlowy",
              "credit_agricole",
              "envelobank",
              "etransfer_pocztowy24",
              "getin_bank",
              "ideabank",
              "ing",
              "inteligo",
              "mbank_mtransfer",
              "nest_przelew",
              "noble_pay",
              "pbac_z_ipko",
              "plus_bank",
              "santander_przelew24",
              "tmobile_usbugi_bankowe",
              "toyota_bank",
              "volkswagen_bank"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "bank"
        ],
        "title": "payment_method_p24",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "P24",
          "in_class": "payment_method"
        }
      },
      "payment_method_paynow": {
        "description": "",
        "properties": {},
        "title": "payment_method_paynow",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Paynow",
          "in_class": "payment_method"
        }
      },
      "payment_method_pix": {
        "description": "",
        "properties": {},
        "title": "payment_method_pix",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Pix",
          "in_class": "payment_method"
        }
      },
      "payment_method_promptpay": {
        "description": "",
        "properties": {},
        "title": "payment_method_promptpay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Promptpay",
          "in_class": "payment_method"
        }
      },
      "payment_method_sepa_debit": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "branch_code": {
            "description": "Branch code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_from": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/sepa_debit_generated_from"
              }
            ],
            "description": "Information about the object that generated this PaymentMethod.",
            "nullable": true
          },
          "last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_code",
          "branch_code",
          "country",
          "fingerprint",
          "generated_from",
          "last4"
        ],
        "title": "payment_method_sepa_debit",
        "type": "object",
        "x-expandableFields": [
          "generated_from"
        ],
        "x-stripeResource": {
          "class_name": "SepaDebit",
          "in_class": "payment_method",
          "inner_classes": [
            "sepa_debit_generated_from"
          ]
        }
      },
      "payment_method_sofort": {
        "description": "",
        "properties": {
          "country": {
            "description": "Two-letter ISO code representing the country the bank account is located in.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "country"
        ],
        "title": "payment_method_sofort",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Sofort",
          "in_class": "payment_method"
        }
      },
      "payment_method_us_bank_account": {
        "description": "",
        "properties": {
          "account_holder_type": {
            "description": "Account holder type: individual or company.",
            "enum": [
              "company",
              "individual"
            ],
            "nullable": true,
            "type": "string"
          },
          "account_type": {
            "description": "Account type: checkings or savings. Defaults to checking if omitted.",
            "enum": [
              "checking",
              "savings"
            ],
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "The name of the bank.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "financial_connections_account": {
            "description": "The ID of the Financial Connections Account used to create the payment method.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "description": "Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "Last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "networks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/us_bank_account_networks"
              }
            ],
            "description": "Contains information about US bank account networks that can be used.",
            "nullable": true
          },
          "routing_number": {
            "description": "Routing number of the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "account_holder_type",
          "account_type",
          "bank_name",
          "fingerprint",
          "last4",
          "networks",
          "routing_number"
        ],
        "title": "payment_method_us_bank_account",
        "type": "object",
        "x-expandableFields": [
          "networks"
        ],
        "x-stripeResource": {
          "class_name": "USBankAccount",
          "in_class": "payment_method",
          "inner_classes": [
            "us_bank_account_networks"
          ]
        }
      },
      "payment_method_wechat_pay": {
        "description": "",
        "properties": {},
        "title": "payment_method_wechat_pay",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "WechatPay",
          "in_class": "payment_method"
        }
      },
      "payment_pages_checkout_session_after_expiration": {
        "description": "",
        "properties": {
          "recovery": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/payment_pages_checkout_session_after_expiration_recovery"
              }
            ],
            "description": "When set, configuration used to recover the Checkout Session on expiry.",
            "nullable": true
          }
        },
        "required": [
          "recovery"
        ],
        "title": "PaymentPagesCheckoutSessionAfterExpiration",
        "type": "object",
        "x-expandableFields": [
          "recovery"
        ],
        "x-stripeResource": {
          "class_name": "AfterExpiration",
          "in_class": "checkout.session",
          "inner_classes": [
            "payment_pages_checkout_session_after_expiration_recovery"
          ]
        }
      },
      "payment_pages_checkout_session_after_expiration_recovery": {
        "description": "",
        "properties": {
          "allow_promotion_codes": {
            "description": "Enables user redeemable promotion codes on the recovered Checkout Sessions. Defaults to `false`",
            "type": "boolean"
          },
          "enabled": {
            "description": "If `true`, a recovery url will be generated to recover this Checkout Session if it\nexpires before a transaction is completed. It will be attached to the\nCheckout Session object upon expiration.",
            "type": "boolean"
          },
          "expires_at": {
            "description": "The timestamp at which the recovery URL will expire.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "url": {
            "description": "URL that creates a new Checkout Session when clicked that is a copy of this expired Checkout Session",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "allow_promotion_codes",
          "enabled",
          "expires_at",
          "url"
        ],
        "title": "PaymentPagesCheckoutSessionAfterExpirationRecovery",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Recovery",
          "in_class": "payment_pages_checkout_session_after_expiration"
        }
      },
      "payment_pages_checkout_session_automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Indicates whether automatic tax is enabled for the session",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the most recent automated tax calculation for this session.",
            "enum": [
              "complete",
              "failed",
              "requires_location_inputs"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "enabled",
          "status"
        ],
        "title": "PaymentPagesCheckoutSessionAutomaticTax",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AutomaticTax",
          "in_class": "checkout.session"
        }
      },
      "payment_pages_checkout_session_consent": {
        "description": "",
        "properties": {
          "promotions": {
            "description": "If `opt_in`, the customer consents to receiving promotional communications\nfrom the merchant about this Checkout Session.",
            "enum": [
              "opt_in",
              "opt_out"
            ],
            "nullable": true,
            "type": "string"
          },
          "terms_of_service": {
            "description": "If `accepted`, the customer in this Checkout Session has agreed to the merchant's terms of service.",
            "enum": [
              "accepted"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "promotions",
          "terms_of_service"
        ],
        "title": "PaymentPagesCheckoutSessionConsent",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Consent",
          "in_class": "checkout.session"
        }
      },
      "payment_pages_checkout_session_consent_collection": {
        "description": "",
        "properties": {
          "promotions": {
            "description": "If set to `auto`, enables the collection of customer consent for promotional communications. The Checkout\nSession will determine whether to display an option to opt into promotional communication\nfrom the merchant depending on the customer's locale. Only available to US merchants.",
            "enum": [
              "auto",
              "none"
            ],
            "nullable": true,
            "type": "string"
          },
          "terms_of_service": {
            "description": "If set to `required`, it requires customers to accept the terms of service before being able to pay.",
            "enum": [
              "none",
              "required"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "promotions",
          "terms_of_service"
        ],
        "title": "PaymentPagesCheckoutSessionConsentCollection",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ConsentCollection",
          "in_class": "checkout.session"
        }
      },
      "payment_pages_checkout_session_customer_details": {
        "description": "",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "The customer's address after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.",
            "nullable": true
          },
          "email": {
            "description": "The email associated with the Customer, if one exists, on the Checkout Session after a completed Checkout Session or at time of session expiry.\nOtherwise, if the customer has consented to promotional content, this value is the most recent valid email provided by the customer on the Checkout form.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "The customer's name after a completed Checkout Session. Note: This property is populated only for sessions on or after March 30, 2022.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "The customer's phone number after a completed Checkout Session.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "tax_exempt": {
            "description": "The customer’s tax exempt status after a completed Checkout Session.",
            "enum": [
              "exempt",
              "none",
              "reverse"
            ],
            "nullable": true,
            "type": "string"
          },
          "tax_ids": {
            "description": "The customer’s tax IDs after a completed Checkout Session.",
            "items": {
              "$ref": "#/components/schemas/payment_pages_checkout_session_tax_id"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "address",
          "email",
          "name",
          "phone",
          "tax_exempt",
          "tax_ids"
        ],
        "title": "PaymentPagesCheckoutSessionCustomerDetails",
        "type": "object",
        "x-expandableFields": [
          "address",
          "tax_ids"
        ],
        "x-stripeResource": {
          "class_name": "CustomerDetails",
          "in_class": "checkout.session",
          "inner_classes": [
            "payment_pages_checkout_session_tax_id"
          ]
        }
      },
      "payment_pages_checkout_session_phone_number_collection": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Indicates whether phone number collection is enabled for the session",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PaymentPagesCheckoutSessionPhoneNumberCollection",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PhoneNumberCollection",
          "in_class": "checkout.session"
        }
      },
      "payment_pages_checkout_session_shipping_address_collection": {
        "description": "",
        "properties": {
          "allowed_countries": {
            "description": "An array of two-letter ISO country codes representing which countries Checkout should provide as options for\nshipping locations. Unsupported country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD, SY, UM, VI`.",
            "items": {
              "enum": [
                "AC",
                "AD",
                "AE",
                "AF",
                "AG",
                "AI",
                "AL",
                "AM",
                "AO",
                "AQ",
                "AR",
                "AT",
                "AU",
                "AW",
                "AX",
                "AZ",
                "BA",
                "BB",
                "BD",
                "BE",
                "BF",
                "BG",
                "BH",
                "BI",
                "BJ",
                "BL",
                "BM",
                "BN",
                "BO",
                "BQ",
                "BR",
                "BS",
                "BT",
                "BV",
                "BW",
                "BY",
                "BZ",
                "CA",
                "CD",
                "CF",
                "CG",
                "CH",
                "CI",
                "CK",
                "CL",
                "CM",
                "CN",
                "CO",
                "CR",
                "CV",
                "CW",
                "CY",
                "CZ",
                "DE",
                "DJ",
                "DK",
                "DM",
                "DO",
                "DZ",
                "EC",
                "EE",
                "EG",
                "EH",
                "ER",
                "ES",
                "ET",
                "FI",
                "FJ",
                "FK",
                "FO",
                "FR",
                "GA",
                "GB",
                "GD",
                "GE",
                "GF",
                "GG",
                "GH",
                "GI",
                "GL",
                "GM",
                "GN",
                "GP",
                "GQ",
                "GR",
                "GS",
                "GT",
                "GU",
                "GW",
                "GY",
                "HK",
                "HN",
                "HR",
                "HT",
                "HU",
                "ID",
                "IE",
                "IL",
                "IM",
                "IN",
                "IO",
                "IQ",
                "IS",
                "IT",
                "JE",
                "JM",
                "JO",
                "JP",
                "KE",
                "KG",
                "KH",
                "KI",
                "KM",
                "KN",
                "KR",
                "KW",
                "KY",
                "KZ",
                "LA",
                "LB",
                "LC",
                "LI",
                "LK",
                "LR",
                "LS",
                "LT",
                "LU",
                "LV",
                "LY",
                "MA",
                "MC",
                "MD",
                "ME",
                "MF",
                "MG",
                "MK",
                "ML",
                "MM",
                "MN",
                "MO",
                "MQ",
                "MR",
                "MS",
                "MT",
                "MU",
                "MV",
                "MW",
                "MX",
                "MY",
                "MZ",
                "NA",
                "NC",
                "NE",
                "NG",
                "NI",
                "NL",
                "NO",
                "NP",
                "NR",
                "NU",
                "NZ",
                "OM",
                "PA",
                "PE",
                "PF",
                "PG",
                "PH",
                "PK",
                "PL",
                "PM",
                "PN",
                "PR",
                "PS",
                "PT",
                "PY",
                "QA",
                "RE",
                "RO",
                "RS",
                "RU",
                "RW",
                "SA",
                "SB",
                "SC",
                "SE",
                "SG",
                "SH",
                "SI",
                "SJ",
                "SK",
                "SL",
                "SM",
                "SN",
                "SO",
                "SR",
                "SS",
                "ST",
                "SV",
                "SX",
                "SZ",
                "TA",
                "TC",
                "TD",
                "TF",
                "TG",
                "TH",
                "TJ",
                "TK",
                "TL",
                "TM",
                "TN",
                "TO",
                "TR",
                "TT",
                "TV",
                "TW",
                "TZ",
                "UA",
                "UG",
                "US",
                "UY",
                "UZ",
                "VA",
                "VC",
                "VE",
                "VG",
                "VN",
                "VU",
                "WF",
                "WS",
                "XK",
                "YE",
                "YT",
                "ZA",
                "ZM",
                "ZW",
                "ZZ"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "allowed_countries"
        ],
        "title": "PaymentPagesCheckoutSessionShippingAddressCollection",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ShippingAddressCollection",
          "in_class": "checkout.session"
        }
      },
      "payment_pages_checkout_session_shipping_cost": {
        "description": "",
        "properties": {
          "amount_subtotal": {
            "description": "Total shipping cost before any discounts or taxes are applied.",
            "type": "integer"
          },
          "amount_tax": {
            "description": "Total tax amount applied due to shipping costs. If no tax was applied, defaults to 0.",
            "type": "integer"
          },
          "amount_total": {
            "description": "Total shipping cost after discounts and taxes are applied.",
            "type": "integer"
          },
          "shipping_rate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/shipping_rate"
              }
            ],
            "description": "The ID of the ShippingRate for this order.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/shipping_rate"
                }
              ]
            }
          },
          "taxes": {
            "description": "The taxes applied to the shipping rate.",
            "items": {
              "$ref": "#/components/schemas/line_items_tax_amount"
            },
            "type": "array"
          }
        },
        "required": [
          "amount_subtotal",
          "amount_tax",
          "amount_total",
          "shipping_rate"
        ],
        "title": "PaymentPagesCheckoutSessionShippingCost",
        "type": "object",
        "x-expandableFields": [
          "shipping_rate",
          "taxes"
        ],
        "x-stripeResource": {
          "class_name": "ShippingCost",
          "in_class": "checkout.session"
        }
      },
      "payment_pages_checkout_session_shipping_option": {
        "description": "",
        "properties": {
          "shipping_amount": {
            "description": "A non-negative integer in cents representing how much to charge.",
            "type": "integer"
          },
          "shipping_rate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/shipping_rate"
              }
            ],
            "description": "The shipping rate.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/shipping_rate"
                }
              ]
            }
          }
        },
        "required": [
          "shipping_amount",
          "shipping_rate"
        ],
        "title": "PaymentPagesCheckoutSessionShippingOption",
        "type": "object",
        "x-expandableFields": [
          "shipping_rate"
        ],
        "x-stripeResource": {
          "class_name": "ShippingOption",
          "in_class": "checkout.session"
        }
      },
      "payment_pages_checkout_session_tax_id": {
        "description": "",
        "properties": {
          "type": {
            "description": "The type of the tax ID, one of `eu_vat`, `br_cnpj`, `br_cpf`, `eu_oss_vat`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`, `no_vat`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `my_itn`, `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, or `unknown`",
            "enum": [
              "ae_trn",
              "au_abn",
              "au_arn",
              "bg_uic",
              "br_cnpj",
              "br_cpf",
              "ca_bn",
              "ca_gst_hst",
              "ca_pst_bc",
              "ca_pst_mb",
              "ca_pst_sk",
              "ca_qst",
              "ch_vat",
              "cl_tin",
              "eg_tin",
              "es_cif",
              "eu_oss_vat",
              "eu_vat",
              "gb_vat",
              "ge_vat",
              "hk_br",
              "hu_tin",
              "id_npwp",
              "il_vat",
              "in_gst",
              "is_vat",
              "jp_cn",
              "jp_rn",
              "jp_trn",
              "ke_pin",
              "kr_brn",
              "li_uid",
              "mx_rfc",
              "my_frp",
              "my_itn",
              "my_sst",
              "no_vat",
              "nz_gst",
              "ph_tin",
              "ru_inn",
              "ru_kpp",
              "sa_vat",
              "sg_gst",
              "sg_uen",
              "si_tin",
              "th_vat",
              "tr_tin",
              "tw_vat",
              "ua_vat",
              "unknown",
              "us_ein",
              "za_vat"
            ],
            "type": "string"
          },
          "value": {
            "description": "The value of the tax ID.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ],
        "title": "PaymentPagesCheckoutSessionTaxID",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "TaxID",
          "in_class": "payment_pages_checkout_session_customer_details"
        }
      },
      "payment_pages_checkout_session_tax_id_collection": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Indicates whether tax ID collection is enabled for the session",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PaymentPagesCheckoutSessionTaxIDCollection",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "TaxIDCollection",
          "in_class": "checkout.session"
        }
      },
      "payment_pages_checkout_session_total_details": {
        "description": "",
        "properties": {
          "amount_discount": {
            "description": "This is the sum of all the discounts.",
            "type": "integer"
          },
          "amount_shipping": {
            "description": "This is the sum of all the shipping amounts.",
            "nullable": true,
            "type": "integer"
          },
          "amount_tax": {
            "description": "This is the sum of all the tax amounts.",
            "type": "integer"
          },
          "breakdown": {
            "$ref": "#/components/schemas/payment_pages_checkout_session_total_details_resource_breakdown"
          }
        },
        "required": [
          "amount_discount",
          "amount_shipping",
          "amount_tax"
        ],
        "title": "PaymentPagesCheckoutSessionTotalDetails",
        "type": "object",
        "x-expandableFields": [
          "breakdown"
        ],
        "x-stripeResource": {
          "class_name": "TotalDetails",
          "in_class": "checkout.session",
          "inner_classes": [
            "payment_pages_checkout_session_total_details_resource_breakdown"
          ]
        }
      },
      "payment_pages_checkout_session_total_details_resource_breakdown": {
        "description": "",
        "properties": {
          "discounts": {
            "description": "The aggregated discounts.",
            "items": {
              "$ref": "#/components/schemas/line_items_discount_amount"
            },
            "type": "array"
          },
          "taxes": {
            "description": "The aggregated tax amounts by rate.",
            "items": {
              "$ref": "#/components/schemas/line_items_tax_amount"
            },
            "type": "array"
          }
        },
        "required": [
          "discounts",
          "taxes"
        ],
        "title": "PaymentPagesCheckoutSessionTotalDetailsResourceBreakdown",
        "type": "object",
        "x-expandableFields": [
          "discounts",
          "taxes"
        ],
        "x-stripeResource": {
          "class_name": "Breakdown",
          "in_class": "payment_pages_checkout_session_total_details"
        }
      },
      "payment_source": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/account"
          },
          {
            "$ref": "#/components/schemas/bank_account"
          },
          {
            "$ref": "#/components/schemas/card"
          },
          {
            "$ref": "#/components/schemas/source"
          }
        ],
        "title": "Polymorphic",
        "x-resourceId": "payment_source",
        "x-stripeBypassValidation": true,
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/customers/{customer}/sources"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/customers/{customer}/sources"
          },
          {
            "method_name": "retrieve",
            "method_on": "collection",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/customers/{customer}/sources/{id}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/customers/{customer}/sources/{id}"
          },
          {
            "method_name": "create",
            "method_on": "collection",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/customers/{customer}/sources"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/customers/{customer}/sources"
          }
        ],
        "x-stripeResource": {
          "class_name": "PaymentSource",
          "has_collection_class": true
        }
      },
      "payout": {
        "description": "A `Payout` object is created when you receive funds from Stripe, or when you\ninitiate a payout to either a bank account or debit card of a [connected\nStripe account](/docs/connect/bank-debit-card-payouts). You can retrieve individual payouts,\nas well as list all payouts. Payouts are made on [varying\nschedules](/docs/connect/manage-payout-schedule), depending on your country and\nindustry.\n\nRelated guide: [Receiving Payouts](https://stripe.com/docs/payouts).",
        "properties": {
          "amount": {
            "description": "Amount (in %s) to be transferred to your bank account or debit card.",
            "type": "integer"
          },
          "arrival_date": {
            "description": "Date the payout is expected to arrive in the bank. This factors in delays like weekends or bank holidays.",
            "format": "unix-time",
            "type": "integer"
          },
          "automatic": {
            "description": "Returns `true` if the payout was created by an [automated payout schedule](https://stripe.com/docs/payouts#payout-schedule), and `false` if it was [requested manually](https://stripe.com/docs/payouts#manual-payouts).",
            "type": "boolean"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "ID of the balance transaction that describes the impact of this payout on your account balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/external_account"
              },
              {
                "$ref": "#/components/schemas/deleted_external_account"
              }
            ],
            "description": "ID of the bank account or card the payout was sent to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/external_account"
                },
                {
                  "$ref": "#/components/schemas/deleted_external_account"
                }
              ]
            }
          },
          "failure_balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "If the payout failed or was canceled, this will be the ID of the balance transaction that reversed the initial balance transaction, and puts the funds from the failed payout back in your balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "failure_code": {
            "description": "Error code explaining reason for payout failure if available. See [Types of payout failures](https://stripe.com/docs/api#payout_failures) for a list of failure codes.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "failure_message": {
            "description": "Message to user further explaining reason for payout failure if available.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "method": {
            "description": "The method used to send this payout, which can be `standard` or `instant`. `instant` is only supported for payouts to debit cards. (See [Instant payouts for marketplaces](https://stripe.com/blog/instant-payouts-for-marketplaces) for more information.)",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "payout"
            ],
            "type": "string"
          },
          "original_payout": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payout"
              }
            ],
            "description": "If the payout reverses another, this is the ID of the original payout.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payout"
                }
              ]
            }
          },
          "reversed_by": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payout"
              }
            ],
            "description": "If the payout was reversed, this is the ID of the payout that reverses this payout.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payout"
                }
              ]
            }
          },
          "source_type": {
            "description": "The source balance this payout came from. One of `card`, `fpx`, or `bank_account`.",
            "maxLength": 5000,
            "type": "string"
          },
          "statement_descriptor": {
            "description": "Extra information about a payout to be displayed on the user's bank statement.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "Current status of the payout: `paid`, `pending`, `in_transit`, `canceled` or `failed`. A payout is `pending` until it is submitted to the bank, when it becomes `in_transit`. The status then changes to `paid` if the transaction goes through, or to `failed` or `canceled` (within 5 business days). Some failed payouts may initially show as `paid` but then change to `failed`.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "Can be `bank_account` or `card`.",
            "enum": [
              "bank_account",
              "card"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "amount",
          "arrival_date",
          "automatic",
          "balance_transaction",
          "created",
          "currency",
          "description",
          "destination",
          "failure_balance_transaction",
          "failure_code",
          "failure_message",
          "id",
          "livemode",
          "metadata",
          "method",
          "object",
          "original_payout",
          "reversed_by",
          "source_type",
          "statement_descriptor",
          "status",
          "type"
        ],
        "title": "Payout",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "destination",
          "failure_balance_transaction",
          "original_payout",
          "reversed_by"
        ],
        "x-resourceId": "payout",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/payouts/{payout}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/payouts"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/payouts"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/payouts/{payout}"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/payouts/{payout}/cancel"
          },
          {
            "method_name": "reverse",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/payouts/{payout}/reverse"
          }
        ],
        "x-stripeResource": {
          "class_name": "Payout",
          "has_collection_class": true,
          "in_package": "",
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "period": {
        "description": "",
        "properties": {
          "end": {
            "description": "The end date of this usage period. All usage up to and including this point in time is included.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "start": {
            "description": "The start date of this usage period. All usage after this point in time is included.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "end",
          "start"
        ],
        "title": "Period",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Period",
          "in_class": "usage_record_summary"
        }
      },
      "person": {
        "description": "This is an object representing a person associated with a Stripe account.\n\nA platform cannot access a Standard or Express account's persons after the account starts onboarding, such as after generating an account link for the account.\nSee the [Standard onboarding](https://stripe.com/docs/connect/standard-accounts) or [Express onboarding documentation](https://stripe.com/docs/connect/express-accounts) for information about platform pre-filling and account onboarding steps.\n\nRelated guide: [Handling Identity Verification with the API](https://stripe.com/docs/connect/identity-verification-api#person-information).",
        "properties": {
          "account": {
            "description": "The account the person is associated with.",
            "maxLength": 5000,
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "address_kana": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "description": "The Kana variation of the person's address (Japan only).",
            "nullable": true
          },
          "address_kanji": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/legal_entity_japan_address"
              }
            ],
            "description": "The Kanji variation of the person's address (Japan only).",
            "nullable": true
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "dob": {
            "$ref": "#/components/schemas/legal_entity_dob"
          },
          "email": {
            "description": "The person's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "description": "The person's first name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name_kana": {
            "description": "The Kana variation of the person's first name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "first_name_kanji": {
            "description": "The Kanji variation of the person's first name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "full_name_aliases": {
            "description": "A list of alternate names or aliases that the person is known by.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "future_requirements": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/person_future_requirements"
              }
            ],
            "description": "Information about the upcoming new requirements for this person, including what information needs to be collected, and by when.",
            "nullable": true
          },
          "gender": {
            "description": "The person's gender (International regulations require either \"male\" or \"female\").",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "id_number_provided": {
            "description": "Whether the person's `id_number` was provided.",
            "type": "boolean"
          },
          "id_number_secondary_provided": {
            "description": "Whether the person's `id_number_secondary` was provided.",
            "type": "boolean"
          },
          "last_name": {
            "description": "The person's last name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_name_kana": {
            "description": "The Kana variation of the person's last name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last_name_kanji": {
            "description": "The Kanji variation of the person's last name (Japan only).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "maiden_name": {
            "description": "The person's maiden name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "nationality": {
            "description": "The country where the person is a national.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "person"
            ],
            "type": "string"
          },
          "phone": {
            "description": "The person's phone number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "political_exposure": {
            "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
            "enum": [
              "existing",
              "none"
            ],
            "type": "string"
          },
          "registered_address": {
            "$ref": "#/components/schemas/address"
          },
          "relationship": {
            "$ref": "#/components/schemas/person_relationship"
          },
          "requirements": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/person_requirements"
              }
            ],
            "description": "Information about the requirements for this person, including what information needs to be collected, and by when.",
            "nullable": true
          },
          "ssn_last_4_provided": {
            "description": "Whether the last four digits of the person's Social Security number have been provided (U.S. only).",
            "type": "boolean"
          },
          "verification": {
            "$ref": "#/components/schemas/legal_entity_person_verification"
          }
        },
        "required": [
          "created",
          "id",
          "object"
        ],
        "title": "Person",
        "type": "object",
        "x-expandableFields": [
          "address",
          "address_kana",
          "address_kanji",
          "dob",
          "future_requirements",
          "registered_address",
          "relationship",
          "requirements",
          "verification"
        ],
        "x-resourceId": "person",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/accounts/{account}/persons"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/accounts/{account}/persons"
          },
          {
            "method_name": "retrieve",
            "method_on": "collection",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/accounts/{account}/persons/{person}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/accounts/{account}/persons/{person}"
          },
          {
            "method_name": "create",
            "method_on": "collection",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/accounts/{account}/persons"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/accounts/{account}/persons"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/accounts/{account}/persons/{person}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/accounts/{account}/persons/{person}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Person",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "legal_entity_dob",
            "legal_entity_japan_address",
            "legal_entity_person_verification",
            "legal_entity_person_verification_document",
            "person_future_requirements",
            "person_relationship",
            "person_requirements"
          ]
        }
      },
      "person_future_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the person's account enabled. If not collected by the account's `future_requirements[current_deadline]`, these fields will transition to the main `requirements` hash, and may immediately become `past_due`, but the account may also be given a grace period depending on the account's enablement state prior to transition.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `future_requirements[current_deadline]` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by the account's `requirements.current_deadline`. These fields need to be collected to enable the person's account. New fields will never appear here; `future_requirements.past_due` will always be a subset of `requirements.past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due` or `currently_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "alternatives",
          "currently_due",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "PersonFutureRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ],
        "x-stripeResource": {
          "class_name": "FutureRequirements",
          "in_class": "person"
        }
      },
      "person_relationship": {
        "description": "",
        "properties": {
          "director": {
            "description": "Whether the person is a director of the account's legal entity. Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations.",
            "nullable": true,
            "type": "boolean"
          },
          "executive": {
            "description": "Whether the person has significant responsibility to control, manage, or direct the organization.",
            "nullable": true,
            "type": "boolean"
          },
          "owner": {
            "description": "Whether the person is an owner of the account’s legal entity.",
            "nullable": true,
            "type": "boolean"
          },
          "percent_ownership": {
            "description": "The percent owned by the person of the account's legal entity.",
            "nullable": true,
            "type": "number"
          },
          "representative": {
            "description": "Whether the person is authorized as the primary representative of the account. This is the person nominated by the business to provide information about themselves, and general information about the account. There can only be one representative at any given time. At the time the account is created, this person should be set to the person responsible for opening the account.",
            "nullable": true,
            "type": "boolean"
          },
          "title": {
            "description": "The person's title (e.g., CEO, Support Engineer).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "director",
          "executive",
          "owner",
          "percent_ownership",
          "representative",
          "title"
        ],
        "title": "PersonRelationship",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Relationship",
          "in_class": "person"
        }
      },
      "person_requirements": {
        "description": "",
        "properties": {
          "alternatives": {
            "description": "Fields that are due and can be satisfied by providing the corresponding alternative fields instead.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_alternative"
            },
            "nullable": true,
            "type": "array"
          },
          "currently_due": {
            "description": "Fields that need to be collected to keep the person's account enabled. If not collected by the account's `current_deadline`, these fields appear in `past_due` as well, and the account is disabled.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "errors": {
            "description": "Fields that are `currently_due` and need to be collected again because validation or verification failed.",
            "items": {
              "$ref": "#/components/schemas/account_requirements_error"
            },
            "type": "array"
          },
          "eventually_due": {
            "description": "Fields that need to be collected assuming all volume thresholds are reached. As they become required, they appear in `currently_due` as well, and the account's `current_deadline` becomes set.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "past_due": {
            "description": "Fields that weren't collected by the account's `current_deadline`. These fields need to be collected to enable the person's account.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "pending_verification": {
            "description": "Fields that may become required depending on the results of verification or review. Will be an empty array unless an asynchronous verification is pending. If verification fails, these fields move to `eventually_due`, `currently_due`, or `past_due`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "alternatives",
          "currently_due",
          "errors",
          "eventually_due",
          "past_due",
          "pending_verification"
        ],
        "title": "PersonRequirements",
        "type": "object",
        "x-expandableFields": [
          "alternatives",
          "errors"
        ],
        "x-stripeResource": {
          "class_name": "Requirements",
          "in_class": "person"
        }
      },
      "plan": {
        "description": "You can now model subscriptions more flexibly using the [Prices API](https://stripe.com/docs/api#prices). It replaces the Plans API and is backwards compatible to simplify your migration.\n\nPlans define the base price, currency, and billing cycle for recurring purchases of products.\n[Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and plans help you track pricing. Different physical goods or levels of service should be represented by products, and pricing options should be represented by plans. This approach lets you change prices without having to change your provisioning scheme.\n\nFor example, you might have a single \"gold\" product that has plans for $10/month, $100/year, €9/month, and €90/year.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription) and more about [products and prices](https://stripe.com/docs/products-prices/overview).",
        "properties": {
          "active": {
            "description": "Whether the plan can be used for new purchases.",
            "type": "boolean"
          },
          "aggregate_usage": {
            "description": "Specifies a usage aggregation strategy for plans of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.",
            "enum": [
              "last_during_period",
              "last_ever",
              "max",
              "sum"
            ],
            "nullable": true,
            "type": "string"
          },
          "amount": {
            "description": "The unit amount in %s to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
            "nullable": true,
            "type": "integer"
          },
          "amount_decimal": {
            "description": "The unit amount in %s to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          },
          "billing_scheme": {
            "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `amount`) will be charged per unit in `quantity` (for plans with `usage_type=licensed`), or per unit of total usage (for plans with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
            "enum": [
              "per_unit",
              "tiered"
            ],
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "interval": {
            "description": "The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.",
            "enum": [
              "day",
              "month",
              "week",
              "year"
            ],
            "type": "string"
          },
          "interval_count": {
            "description": "The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.",
            "type": "integer"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "nickname": {
            "description": "A brief description of the plan, hidden from customers.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "plan"
            ],
            "type": "string"
          },
          "product": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/product"
              },
              {
                "$ref": "#/components/schemas/deleted_product"
              }
            ],
            "description": "The product whose pricing this plan determines.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/product"
                },
                {
                  "$ref": "#/components/schemas/deleted_product"
                }
              ]
            }
          },
          "tiers": {
            "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
            "items": {
              "$ref": "#/components/schemas/plan_tier"
            },
            "type": "array"
          },
          "tiers_mode": {
            "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.",
            "enum": [
              "graduated",
              "volume"
            ],
            "nullable": true,
            "type": "string"
          },
          "transform_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/transform_usage"
              }
            ],
            "description": "Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.",
            "nullable": true
          },
          "trial_period_days": {
            "description": "Default number of trial days when subscribing a customer to this plan using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).",
            "nullable": true,
            "type": "integer"
          },
          "usage_type": {
            "description": "Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.",
            "enum": [
              "licensed",
              "metered"
            ],
            "type": "string"
          }
        },
        "required": [
          "active",
          "aggregate_usage",
          "amount",
          "amount_decimal",
          "billing_scheme",
          "created",
          "currency",
          "id",
          "interval",
          "interval_count",
          "livemode",
          "metadata",
          "nickname",
          "object",
          "product",
          "tiers_mode",
          "transform_usage",
          "trial_period_days",
          "usage_type"
        ],
        "title": "Plan",
        "type": "object",
        "x-expandableFields": [
          "product",
          "tiers",
          "transform_usage"
        ],
        "x-resourceId": "plan",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/plans"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/plans"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/plans/{plan}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/plans/{plan}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/plans/{plan}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Plan",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "plan_tier",
            "transform_usage"
          ]
        }
      },
      "plan_tier": {
        "description": "",
        "properties": {
          "flat_amount": {
            "description": "Price for the entire tier.",
            "nullable": true,
            "type": "integer"
          },
          "flat_amount_decimal": {
            "description": "Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          },
          "unit_amount": {
            "description": "Per unit price for units relevant to the tier.",
            "nullable": true,
            "type": "integer"
          },
          "unit_amount_decimal": {
            "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          },
          "up_to": {
            "description": "Up to and including to this quantity will be contained in the tier.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "flat_amount",
          "flat_amount_decimal",
          "unit_amount",
          "unit_amount_decimal",
          "up_to"
        ],
        "title": "PlanTier",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Tier",
          "in_class": "plan"
        }
      },
      "platform_tax_fee": {
        "description": "",
        "properties": {
          "account": {
            "description": "The Connected account that incurred this charge.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "platform_tax_fee"
            ],
            "type": "string"
          },
          "source_transaction": {
            "description": "The payment object that caused this tax to be inflicted.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "The type of tax (VAT).",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "account",
          "id",
          "object",
          "source_transaction",
          "type"
        ],
        "title": "PlatformTax",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PlatformTaxFee",
          "in_package": "",
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "portal_business_profile": {
        "description": "",
        "properties": {
          "headline": {
            "description": "The messaging shown to customers in the portal.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "privacy_policy_url": {
            "description": "A link to the business’s publicly available privacy policy.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "terms_of_service_url": {
            "description": "A link to the business’s publicly available terms of service.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "headline",
          "privacy_policy_url",
          "terms_of_service_url"
        ],
        "title": "PortalBusinessProfile",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BusinessProfile",
          "in_class": "billing_portal.configuration"
        }
      },
      "portal_customer_update": {
        "description": "",
        "properties": {
          "allowed_updates": {
            "description": "The types of customer updates that are supported. When empty, customers are not updateable.",
            "items": {
              "enum": [
                "address",
                "email",
                "phone",
                "shipping",
                "tax_id"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          },
          "enabled": {
            "description": "Whether the feature is enabled.",
            "type": "boolean"
          }
        },
        "required": [
          "allowed_updates",
          "enabled"
        ],
        "title": "PortalCustomerUpdate",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CustomerUpdate",
          "in_class": "portal_features"
        }
      },
      "portal_features": {
        "description": "",
        "properties": {
          "customer_update": {
            "$ref": "#/components/schemas/portal_customer_update"
          },
          "invoice_history": {
            "$ref": "#/components/schemas/portal_invoice_list"
          },
          "payment_method_update": {
            "$ref": "#/components/schemas/portal_payment_method_update"
          },
          "subscription_cancel": {
            "$ref": "#/components/schemas/portal_subscription_cancel"
          },
          "subscription_pause": {
            "$ref": "#/components/schemas/portal_subscription_pause"
          },
          "subscription_update": {
            "$ref": "#/components/schemas/portal_subscription_update"
          }
        },
        "required": [
          "customer_update",
          "invoice_history",
          "payment_method_update",
          "subscription_cancel",
          "subscription_pause",
          "subscription_update"
        ],
        "title": "PortalFeatures",
        "type": "object",
        "x-expandableFields": [
          "customer_update",
          "invoice_history",
          "payment_method_update",
          "subscription_cancel",
          "subscription_pause",
          "subscription_update"
        ],
        "x-stripeResource": {
          "class_name": "Features",
          "in_class": "billing_portal.configuration",
          "inner_classes": [
            "portal_customer_update",
            "portal_invoice_list",
            "portal_payment_method_update",
            "portal_subscription_cancel",
            "portal_subscription_pause",
            "portal_subscription_update"
          ]
        }
      },
      "portal_invoice_list": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether the feature is enabled.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PortalInvoiceList",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "InvoiceHistory",
          "in_class": "portal_features"
        }
      },
      "portal_login_page": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "If `true`, a shareable `url` will be generated that will take your customers to a hosted login page for the customer portal.\n\nIf `false`, the previously generated `url`, if any, will be deactivated.",
            "type": "boolean"
          },
          "url": {
            "description": "A shareable URL to the hosted portal login page. Your customers will be able to log in with their [email](https://stripe.com/docs/api/customers/object#customer_object-email) and receive a link to their customer portal.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "enabled",
          "url"
        ],
        "title": "PortalLoginPage",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "LoginPage",
          "in_class": "billing_portal.configuration"
        }
      },
      "portal_payment_method_update": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether the feature is enabled.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PortalPaymentMethodUpdate",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PaymentMethodUpdate",
          "in_class": "portal_features"
        }
      },
      "portal_subscription_cancel": {
        "description": "",
        "properties": {
          "cancellation_reason": {
            "$ref": "#/components/schemas/portal_subscription_cancellation_reason"
          },
          "enabled": {
            "description": "Whether the feature is enabled.",
            "type": "boolean"
          },
          "mode": {
            "description": "Whether to cancel subscriptions immediately or at the end of the billing period.",
            "enum": [
              "at_period_end",
              "immediately"
            ],
            "type": "string"
          },
          "proration_behavior": {
            "description": "Whether to create prorations when canceling subscriptions. Possible values are `none` and `create_prorations`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "cancellation_reason",
          "enabled",
          "mode",
          "proration_behavior"
        ],
        "title": "PortalSubscriptionCancel",
        "type": "object",
        "x-expandableFields": [
          "cancellation_reason"
        ],
        "x-stripeResource": {
          "class_name": "SubscriptionCancel",
          "in_class": "portal_features",
          "inner_classes": [
            "portal_subscription_cancellation_reason"
          ]
        }
      },
      "portal_subscription_cancellation_reason": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether the feature is enabled.",
            "type": "boolean"
          },
          "options": {
            "description": "Which cancellation reasons will be given as options to the customer.",
            "items": {
              "enum": [
                "customer_service",
                "low_quality",
                "missing_features",
                "other",
                "switched_service",
                "too_complex",
                "too_expensive",
                "unused"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "enabled",
          "options"
        ],
        "title": "PortalSubscriptionCancellationReason",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CancellationReason",
          "in_class": "portal_subscription_cancel"
        }
      },
      "portal_subscription_pause": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether the feature is enabled.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "PortalSubscriptionPause",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SubscriptionPause",
          "in_class": "portal_features"
        }
      },
      "portal_subscription_update": {
        "description": "",
        "properties": {
          "default_allowed_updates": {
            "description": "The types of subscription updates that are supported for items listed in the `products` attribute. When empty, subscriptions are not updateable.",
            "items": {
              "enum": [
                "price",
                "promotion_code",
                "quantity"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "enabled": {
            "description": "Whether the feature is enabled.",
            "type": "boolean"
          },
          "products": {
            "description": "The list of products that support subscription updates.",
            "items": {
              "$ref": "#/components/schemas/portal_subscription_update_product"
            },
            "nullable": true,
            "type": "array"
          },
          "proration_behavior": {
            "description": "Determines how to handle prorations resulting from subscription updates. Valid values are `none`, `create_prorations`, and `always_invoice`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "type": "string"
          }
        },
        "required": [
          "default_allowed_updates",
          "enabled",
          "products",
          "proration_behavior"
        ],
        "title": "PortalSubscriptionUpdate",
        "type": "object",
        "x-expandableFields": [
          "products"
        ],
        "x-stripeResource": {
          "class_name": "SubscriptionUpdate",
          "in_class": "portal_features",
          "inner_classes": [
            "portal_subscription_update_product"
          ]
        }
      },
      "portal_subscription_update_product": {
        "description": "",
        "properties": {
          "prices": {
            "description": "The list of price IDs which, when subscribed to, a subscription can be updated.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "product": {
            "description": "The product ID.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "prices",
          "product"
        ],
        "title": "PortalSubscriptionUpdateProduct",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Product",
          "in_class": "portal_subscription_update"
        }
      },
      "price": {
        "description": "Prices define the unit cost, currency, and (optional) billing cycle for both recurring and one-time purchases of products.\n[Products](https://stripe.com/docs/api#products) help you track inventory or provisioning, and prices help you track payment terms. Different physical goods or levels of service should be represented by products, and pricing options should be represented by prices. This approach lets you change prices without having to change your provisioning scheme.\n\nFor example, you might have a single \"gold\" product that has prices for $10/month, $100/year, and €9 once.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription), [create an invoice](https://stripe.com/docs/billing/invoices/create), and more about [products and prices](https://stripe.com/docs/products-prices/overview).",
        "properties": {
          "active": {
            "description": "Whether the price can be used for new purchases.",
            "type": "boolean"
          },
          "billing_scheme": {
            "description": "Describes how to compute the price per period. Either `per_unit` or `tiered`. `per_unit` indicates that the fixed amount (specified in `unit_amount` or `unit_amount_decimal`) will be charged per unit in `quantity` (for prices with `usage_type=licensed`), or per unit of total usage (for prices with `usage_type=metered`). `tiered` indicates that the unit pricing will be computed using a tiering strategy as defined using the `tiers` and `tiers_mode` attributes.",
            "enum": [
              "per_unit",
              "tiered"
            ],
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "currency_options": {
            "additionalProperties": {
              "$ref": "#/components/schemas/currency_option"
            },
            "description": "Prices defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "type": "object"
          },
          "custom_unit_amount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/custom_unit_amount"
              }
            ],
            "description": "When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links.",
            "nullable": true
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "lookup_key": {
            "description": "A lookup key used to retrieve prices dynamically from a static string. This may be up to 200 characters.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "nickname": {
            "description": "A brief description of the price, hidden from customers.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "price"
            ],
            "type": "string"
          },
          "product": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/product"
              },
              {
                "$ref": "#/components/schemas/deleted_product"
              }
            ],
            "description": "The ID of the product this price is associated with.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/product"
                },
                {
                  "$ref": "#/components/schemas/deleted_product"
                }
              ]
            }
          },
          "recurring": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/recurring"
              }
            ],
            "description": "The recurring components of a price such as `interval` and `usage_type`.",
            "nullable": true
          },
          "tax_behavior": {
            "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "nullable": true,
            "type": "string"
          },
          "tiers": {
            "description": "Each element represents a pricing tier. This parameter requires `billing_scheme` to be set to `tiered`. See also the documentation for `billing_scheme`.",
            "items": {
              "$ref": "#/components/schemas/price_tier"
            },
            "type": "array"
          },
          "tiers_mode": {
            "description": "Defines if the tiering price should be `graduated` or `volume` based. In `volume`-based tiering, the maximum quantity within a period determines the per unit price. In `graduated` tiering, pricing can change as the quantity grows.",
            "enum": [
              "graduated",
              "volume"
            ],
            "nullable": true,
            "type": "string"
          },
          "transform_quantity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/transform_quantity"
              }
            ],
            "description": "Apply a transformation to the reported usage or set quantity before computing the amount billed. Cannot be combined with `tiers`.",
            "nullable": true
          },
          "type": {
            "description": "One of `one_time` or `recurring` depending on whether the price is for a one-time purchase or a recurring (subscription) purchase.",
            "enum": [
              "one_time",
              "recurring"
            ],
            "type": "string"
          },
          "unit_amount": {
            "description": "The unit amount in %s to be charged, represented as a whole integer if possible. Only set if `billing_scheme=per_unit`.",
            "nullable": true,
            "type": "integer"
          },
          "unit_amount_decimal": {
            "description": "The unit amount in %s to be charged, represented as a decimal string with at most 12 decimal places. Only set if `billing_scheme=per_unit`.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "active",
          "billing_scheme",
          "created",
          "currency",
          "custom_unit_amount",
          "id",
          "livemode",
          "lookup_key",
          "metadata",
          "nickname",
          "object",
          "product",
          "recurring",
          "tax_behavior",
          "tiers_mode",
          "transform_quantity",
          "type",
          "unit_amount",
          "unit_amount_decimal"
        ],
        "title": "Price",
        "type": "object",
        "x-expandableFields": [
          "currency_options",
          "custom_unit_amount",
          "product",
          "recurring",
          "tiers",
          "transform_quantity"
        ],
        "x-resourceId": "price",
        "x-stripeOperations": [
          {
            "method_name": "search",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/prices/search"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/prices"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/prices"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/prices/{price}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/prices/{price}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Price",
          "has_collection_class": true,
          "has_search_result_class": true,
          "in_package": "",
          "inner_classes": [
            "currency_option",
            "custom_unit_amount",
            "price_tier",
            "recurring",
            "transform_quantity"
          ]
        }
      },
      "price_tier": {
        "description": "",
        "properties": {
          "flat_amount": {
            "description": "Price for the entire tier.",
            "nullable": true,
            "type": "integer"
          },
          "flat_amount_decimal": {
            "description": "Same as `flat_amount`, but contains a decimal value with at most 12 decimal places.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          },
          "unit_amount": {
            "description": "Per unit price for units relevant to the tier.",
            "nullable": true,
            "type": "integer"
          },
          "unit_amount_decimal": {
            "description": "Same as `unit_amount`, but contains a decimal value with at most 12 decimal places.",
            "format": "decimal",
            "nullable": true,
            "type": "string"
          },
          "up_to": {
            "description": "Up to and including to this quantity will be contained in the tier.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "flat_amount",
          "flat_amount_decimal",
          "unit_amount",
          "unit_amount_decimal",
          "up_to"
        ],
        "title": "PriceTier",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Tier",
          "in_class": "price"
        }
      },
      "product": {
        "description": "Products describe the specific goods or services you offer to your customers.\nFor example, you might offer a Standard and Premium version of your goods or service; each version would be a separate Product.\nThey can be used in conjunction with [Prices](https://stripe.com/docs/api#prices) to configure pricing in Payment Links, Checkout, and Subscriptions.\n\nRelated guides: [Set up a subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),\n[share a Payment Link](https://stripe.com/docs/payments/payment-links/overview),\n[accept payments with Checkout](https://stripe.com/docs/payments/accept-a-payment#create-product-prices-upfront),\nand more about [Products and Prices](https://stripe.com/docs/products-prices/overview)",
        "properties": {
          "active": {
            "description": "Whether the product is currently available for purchase.",
            "type": "boolean"
          },
          "attributes": {
            "description": "A list of up to 5 attributes that each SKU can provide values for (e.g., `[\"color\", \"size\"]`).",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "caption": {
            "description": "A short one-line description of the product, meant to be displayable to the customer. Only applicable to products of `type=good`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "deactivate_on": {
            "description": "An array of connect application identifiers that cannot purchase this product. Only applicable to products of `type=good`.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "default_price": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/price"
              }
            ],
            "description": "The ID of the [Price](https://stripe.com/docs/api/prices) object that is the default price for this product.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/price"
                }
              ]
            }
          },
          "description": {
            "description": "The product's description, meant to be displayable to the customer. Use this field to optionally store a long form explanation of the product being sold for your own rendering purposes.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "images": {
            "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "name": {
            "description": "The product's name, meant to be displayable to the customer.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "product"
            ],
            "type": "string"
          },
          "package_dimensions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/package_dimensions"
              }
            ],
            "description": "The dimensions of this product for shipping purposes.",
            "nullable": true
          },
          "shippable": {
            "description": "Whether this product is shipped (i.e., physical goods).",
            "nullable": true,
            "type": "boolean"
          },
          "statement_descriptor": {
            "description": "Extra information about a product which will appear on your customer's credit card statement. In the case that multiple products are billed at once, the first statement descriptor will be used.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "tax_code": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/tax_code"
              }
            ],
            "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/tax_code"
                }
              ]
            }
          },
          "type": {
            "description": "The type of the product. The product is either of type `good`, which is eligible for use with Orders and SKUs, or `service`, which is eligible for use with Subscriptions and Plans.",
            "enum": [
              "good",
              "service"
            ],
            "type": "string"
          },
          "unit_label": {
            "description": "A label that represents units of this product in Stripe and on customers’ receipts and invoices. When set, this will be included in associated invoice line item descriptions.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "updated": {
            "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "url": {
            "description": "A URL of a publicly-accessible webpage for this product.",
            "maxLength": 2048,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "active",
          "attributes",
          "created",
          "description",
          "id",
          "images",
          "livemode",
          "metadata",
          "name",
          "object",
          "package_dimensions",
          "shippable",
          "tax_code",
          "type",
          "updated",
          "url"
        ],
        "title": "Product",
        "type": "object",
        "x-expandableFields": [
          "default_price",
          "package_dimensions",
          "tax_code"
        ],
        "x-resourceId": "product",
        "x-stripeOperations": [
          {
            "method_name": "search",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/products/search"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/products"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/products/{id}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/products/{id}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/products"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/products/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Product",
          "has_collection_class": true,
          "has_search_result_class": true,
          "in_package": ""
        }
      },
      "promotion_code": {
        "description": "A Promotion Code represents a customer-redeemable code for a [coupon](https://stripe.com/docs/api#coupons). It can be used to\ncreate multiple codes for a single coupon.",
        "properties": {
          "active": {
            "description": "Whether the promotion code is currently active. A promotion code is only active if the coupon is also valid.",
            "type": "boolean"
          },
          "code": {
            "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for each customer.",
            "maxLength": 5000,
            "type": "string"
          },
          "coupon": {
            "$ref": "#/components/schemas/coupon"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The customer that this promotion code can be used by.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "expires_at": {
            "description": "Date at which the promotion code can no longer be redeemed.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "max_redemptions": {
            "description": "Maximum number of times this promotion code can be redeemed.",
            "nullable": true,
            "type": "integer"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "promotion_code"
            ],
            "type": "string"
          },
          "restrictions": {
            "$ref": "#/components/schemas/promotion_codes_resource_restrictions"
          },
          "times_redeemed": {
            "description": "Number of times this promotion code has been used.",
            "type": "integer"
          }
        },
        "required": [
          "active",
          "code",
          "coupon",
          "created",
          "customer",
          "expires_at",
          "id",
          "livemode",
          "max_redemptions",
          "metadata",
          "object",
          "restrictions",
          "times_redeemed"
        ],
        "title": "PromotionCode",
        "type": "object",
        "x-expandableFields": [
          "coupon",
          "customer",
          "restrictions"
        ],
        "x-resourceId": "promotion_code",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/promotion_codes/{promotion_code}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/promotion_codes"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/promotion_codes/{promotion_code}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/promotion_codes"
          }
        ],
        "x-stripeResource": {
          "class_name": "PromotionCode",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "promotion_code_currency_option",
            "promotion_codes_resource_restrictions"
          ]
        }
      },
      "promotion_code_currency_option": {
        "description": "",
        "properties": {
          "minimum_amount": {
            "description": "Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).",
            "type": "integer"
          }
        },
        "required": [
          "minimum_amount"
        ],
        "title": "PromotionCodeCurrencyOption",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CurrencyOption",
          "in_class": "promotion_code"
        }
      },
      "promotion_codes_resource_restrictions": {
        "description": "",
        "properties": {
          "currency_options": {
            "additionalProperties": {
              "$ref": "#/components/schemas/promotion_code_currency_option"
            },
            "description": "Promotion code restrictions defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "type": "object"
          },
          "first_time_transaction": {
            "description": "A Boolean indicating if the Promotion Code should only be redeemed for Customers without any successful payments or invoices",
            "type": "boolean"
          },
          "minimum_amount": {
            "description": "Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).",
            "nullable": true,
            "type": "integer"
          },
          "minimum_amount_currency": {
            "description": "Three-letter [ISO code](https://stripe.com/docs/currencies) for minimum_amount",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "first_time_transaction",
          "minimum_amount",
          "minimum_amount_currency"
        ],
        "title": "PromotionCodesResourceRestrictions",
        "type": "object",
        "x-expandableFields": [
          "currency_options"
        ],
        "x-stripeResource": {
          "class_name": "Restrictions",
          "in_class": "promotion_code"
        }
      },
      "quote": {
        "description": "A Quote is a way to model prices that you'd like to provide to a customer.\nOnce accepted, it will automatically create an invoice, subscription or subscription schedule.",
        "properties": {
          "amount_subtotal": {
            "description": "Total before any discounts or taxes are applied.",
            "type": "integer"
          },
          "amount_total": {
            "description": "Total after discounts and taxes are applied.",
            "type": "integer"
          },
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              },
              {
                "$ref": "#/components/schemas/deleted_application"
              }
            ],
            "description": "ID of the Connect Application that created the quote.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ]
            }
          },
          "application_fee_amount": {
            "description": "The amount of the application fee (if any) that will be requested to be applied to the payment and transferred to the application owner's Stripe account. Only applicable if there are no line items with recurring prices on the quote.",
            "nullable": true,
            "type": "integer"
          },
          "application_fee_percent": {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account. Only applicable if there are line items with recurring prices on the quote.",
            "nullable": true,
            "type": "number"
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/quotes_resource_automatic_tax"
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay invoices at the end of the subscription cycle or on finalization using the default payment method attached to the subscription or customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`. Defaults to `charge_automatically`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "type": "string"
          },
          "computed": {
            "$ref": "#/components/schemas/quotes_resource_computed"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The customer which this quote belongs to. A customer is required before finalizing the quote. Once specified, it cannot be changed.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "default_tax_rates": {
            "description": "The tax rates applied to this quote.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/tax_rate"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/tax_rate"
                  }
                ]
              }
            },
            "type": "array"
          },
          "description": {
            "description": "A description that will be displayed on the quote PDF.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "discounts": {
            "description": "The discounts applied to this quote.",
            "items": {
              "anyOf": [
                {
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/discount"
                }
              ],
              "x-expansionResources": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/discount"
                  }
                ]
              }
            },
            "type": "array"
          },
          "expires_at": {
            "description": "The date on which the quote will be canceled if in `open` or `draft` status. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "footer": {
            "description": "A footer that will be displayed on the quote PDF.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "from_quote": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/quotes_resource_from_quote"
              }
            ],
            "description": "Details of the quote that was cloned. See the [cloning documentation](https://stripe.com/docs/quotes/clone) for more details.",
            "nullable": true
          },
          "header": {
            "description": "A header that will be displayed on the quote PDF.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              },
              {
                "$ref": "#/components/schemas/deleted_invoice"
              }
            ],
            "description": "The invoice that was created from this quote.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                },
                {
                  "$ref": "#/components/schemas/deleted_invoice"
                }
              ]
            }
          },
          "invoice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_setting_quote_setting"
              }
            ],
            "description": "All invoices will be billed using the specified settings.",
            "nullable": true
          },
          "line_items": {
            "description": "A list of items the customer is being quoted for.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "QuotesResourceListLineItems",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "number": {
            "description": "A unique number that identifies this particular quote. This number is assigned once the quote is [finalized](https://stripe.com/docs/quotes/overview#finalize).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "quote"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account on behalf of which to charge. See the [Connect documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts) for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "status": {
            "description": "The status of the quote.",
            "enum": [
              "accepted",
              "canceled",
              "draft",
              "open"
            ],
            "type": "string"
          },
          "status_transitions": {
            "$ref": "#/components/schemas/quotes_resource_status_transitions"
          },
          "subscription": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription"
              }
            ],
            "description": "The subscription that was created or updated from this quote.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ]
            }
          },
          "subscription_data": {
            "$ref": "#/components/schemas/quotes_resource_subscription_data"
          },
          "subscription_schedule": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription_schedule"
              }
            ],
            "description": "The subscription schedule that was created or updated from this quote.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription_schedule"
                }
              ]
            }
          },
          "test_clock": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/test_helpers.test_clock"
              }
            ],
            "description": "ID of the test clock this quote belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ]
            }
          },
          "total_details": {
            "$ref": "#/components/schemas/quotes_resource_total_details"
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/quotes_resource_transfer_data"
              }
            ],
            "description": "The account (if any) the payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the invoices.",
            "nullable": true
          }
        },
        "required": [
          "amount_subtotal",
          "amount_total",
          "application",
          "application_fee_amount",
          "application_fee_percent",
          "automatic_tax",
          "collection_method",
          "computed",
          "created",
          "currency",
          "customer",
          "description",
          "discounts",
          "expires_at",
          "footer",
          "from_quote",
          "header",
          "id",
          "invoice",
          "invoice_settings",
          "livemode",
          "metadata",
          "number",
          "object",
          "on_behalf_of",
          "status",
          "status_transitions",
          "subscription",
          "subscription_data",
          "subscription_schedule",
          "test_clock",
          "total_details",
          "transfer_data"
        ],
        "title": "Quote",
        "type": "object",
        "x-expandableFields": [
          "application",
          "automatic_tax",
          "computed",
          "customer",
          "default_tax_rates",
          "discounts",
          "from_quote",
          "invoice",
          "invoice_settings",
          "line_items",
          "on_behalf_of",
          "status_transitions",
          "subscription",
          "subscription_data",
          "subscription_schedule",
          "test_clock",
          "total_details",
          "transfer_data"
        ],
        "x-resourceId": "quote",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/quotes/{quote}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/quotes"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/quotes/{quote}"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/quotes/{quote}/cancel"
          },
          {
            "method_name": "finalize_quote",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/quotes/{quote}/finalize"
          },
          {
            "method_name": "accept",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/quotes/{quote}/accept"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/quotes"
          },
          {
            "method_name": "list_line_items",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/quotes/{quote}/line_items"
          },
          {
            "method_name": "list_computed_upfront_line_items",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/quotes/{quote}/computed_upfront_line_items"
          },
          {
            "method_name": "pdf",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/quotes/{quote}/pdf"
          }
        ],
        "x-stripeResource": {
          "class_name": "Quote",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "invoice_setting_quote_setting",
            "quotes_resource_automatic_tax",
            "quotes_resource_computed",
            "quotes_resource_from_quote",
            "quotes_resource_recurring",
            "quotes_resource_status_transitions",
            "quotes_resource_subscription_data",
            "quotes_resource_total_details",
            "quotes_resource_transfer_data",
            "quotes_resource_upfront"
          ]
        }
      },
      "quotes_resource_automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Automatically calculate taxes",
            "type": "boolean"
          },
          "status": {
            "description": "The status of the most recent automated tax calculation for this quote.",
            "enum": [
              "complete",
              "failed",
              "requires_location_inputs"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "enabled",
          "status"
        ],
        "title": "QuotesResourceAutomaticTax",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AutomaticTax",
          "in_class": "quote"
        }
      },
      "quotes_resource_computed": {
        "description": "",
        "properties": {
          "recurring": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/quotes_resource_recurring"
              }
            ],
            "description": "The definitive totals and line items the customer will be charged on a recurring basis. Takes into account the line items with recurring prices and discounts with `duration=forever` coupons only. Defaults to `null` if no inputted line items with recurring prices.",
            "nullable": true
          },
          "upfront": {
            "$ref": "#/components/schemas/quotes_resource_upfront"
          }
        },
        "required": [
          "recurring",
          "upfront"
        ],
        "title": "QuotesResourceComputed",
        "type": "object",
        "x-expandableFields": [
          "recurring",
          "upfront"
        ],
        "x-stripeResource": {
          "class_name": "Computed",
          "in_class": "quote"
        }
      },
      "quotes_resource_from_quote": {
        "description": "",
        "properties": {
          "is_revision": {
            "description": "Whether this quote is a revision of a different quote.",
            "type": "boolean"
          },
          "quote": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/quote"
              }
            ],
            "description": "The quote that was cloned.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/quote"
                }
              ]
            }
          }
        },
        "required": [
          "is_revision",
          "quote"
        ],
        "title": "QuotesResourceFromQuote",
        "type": "object",
        "x-expandableFields": [
          "quote"
        ],
        "x-stripeResource": {
          "class_name": "FromQuote",
          "in_class": "quote"
        }
      },
      "quotes_resource_recurring": {
        "description": "",
        "properties": {
          "amount_subtotal": {
            "description": "Total before any discounts or taxes are applied.",
            "type": "integer"
          },
          "amount_total": {
            "description": "Total after discounts and taxes are applied.",
            "type": "integer"
          },
          "interval": {
            "description": "The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.",
            "enum": [
              "day",
              "month",
              "week",
              "year"
            ],
            "type": "string"
          },
          "interval_count": {
            "description": "The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.",
            "type": "integer"
          },
          "total_details": {
            "$ref": "#/components/schemas/quotes_resource_total_details"
          }
        },
        "required": [
          "amount_subtotal",
          "amount_total",
          "interval",
          "interval_count",
          "total_details"
        ],
        "title": "QuotesResourceRecurring",
        "type": "object",
        "x-expandableFields": [
          "total_details"
        ],
        "x-stripeResource": {
          "class_name": "Recurring",
          "in_class": "quote"
        }
      },
      "quotes_resource_status_transitions": {
        "description": "",
        "properties": {
          "accepted_at": {
            "description": "The time that the quote was accepted. Measured in seconds since Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "canceled_at": {
            "description": "The time that the quote was canceled. Measured in seconds since Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "finalized_at": {
            "description": "The time that the quote was finalized. Measured in seconds since Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "accepted_at",
          "canceled_at",
          "finalized_at"
        ],
        "title": "QuotesResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "StatusTransitions",
          "in_class": "quote"
        }
      },
      "quotes_resource_subscription_data": {
        "description": "",
        "properties": {
          "description": {
            "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "effective_date": {
            "description": "When creating a new subscription, the date of which the subscription schedule will start after the quote is accepted. This date is ignored if it is in the past when the quote is accepted. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "trial_period_days": {
            "description": "Integer representing the number of trial period days before the customer is charged for the first time.",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "description",
          "effective_date",
          "trial_period_days"
        ],
        "title": "QuotesResourceSubscriptionData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SubscriptionData",
          "in_class": "quote"
        }
      },
      "quotes_resource_total_details": {
        "description": "",
        "properties": {
          "amount_discount": {
            "description": "This is the sum of all the discounts.",
            "type": "integer"
          },
          "amount_shipping": {
            "description": "This is the sum of all the shipping amounts.",
            "nullable": true,
            "type": "integer"
          },
          "amount_tax": {
            "description": "This is the sum of all the tax amounts.",
            "type": "integer"
          },
          "breakdown": {
            "$ref": "#/components/schemas/quotes_resource_total_details_resource_breakdown"
          }
        },
        "required": [
          "amount_discount",
          "amount_shipping",
          "amount_tax"
        ],
        "title": "QuotesResourceTotalDetails",
        "type": "object",
        "x-expandableFields": [
          "breakdown"
        ],
        "x-stripeResource": {
          "class_name": "TotalDetails",
          "in_class": "quote",
          "inner_classes": [
            "quotes_resource_total_details_resource_breakdown"
          ]
        }
      },
      "quotes_resource_total_details_resource_breakdown": {
        "description": "",
        "properties": {
          "discounts": {
            "description": "The aggregated discounts.",
            "items": {
              "$ref": "#/components/schemas/line_items_discount_amount"
            },
            "type": "array"
          },
          "taxes": {
            "description": "The aggregated tax amounts by rate.",
            "items": {
              "$ref": "#/components/schemas/line_items_tax_amount"
            },
            "type": "array"
          }
        },
        "required": [
          "discounts",
          "taxes"
        ],
        "title": "QuotesResourceTotalDetailsResourceBreakdown",
        "type": "object",
        "x-expandableFields": [
          "discounts",
          "taxes"
        ],
        "x-stripeResource": {
          "class_name": "Breakdown",
          "in_class": "quotes_resource_total_details"
        }
      },
      "quotes_resource_transfer_data": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount in %s that will be transferred to the destination account when the invoice is paid. By default, the entire amount is transferred to the destination.",
            "nullable": true,
            "type": "integer"
          },
          "amount_percent": {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the destination account. By default, the entire amount will be transferred to the destination.",
            "nullable": true,
            "type": "number"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account where funds from the payment will be transferred to upon payment success.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "amount_percent",
          "destination"
        ],
        "title": "QuotesResourceTransferData",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ],
        "x-stripeResource": {
          "class_name": "TransferData",
          "in_class": "quote"
        }
      },
      "quotes_resource_upfront": {
        "description": "",
        "properties": {
          "amount_subtotal": {
            "description": "Total before any discounts or taxes are applied.",
            "type": "integer"
          },
          "amount_total": {
            "description": "Total after discounts and taxes are applied.",
            "type": "integer"
          },
          "line_items": {
            "description": "The line items that will appear on the next invoice after this quote is accepted. This does not include pending invoice items that exist on the customer but may still be included in the next invoice.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "QuotesResourceListLineItems",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "total_details": {
            "$ref": "#/components/schemas/quotes_resource_total_details"
          }
        },
        "required": [
          "amount_subtotal",
          "amount_total",
          "total_details"
        ],
        "title": "QuotesResourceUpfront",
        "type": "object",
        "x-expandableFields": [
          "line_items",
          "total_details"
        ],
        "x-stripeResource": {
          "class_name": "Upfront",
          "in_class": "quote"
        }
      },
      "radar.early_fraud_warning": {
        "description": "An early fraud warning indicates that the card issuer has notified us that a\ncharge may be fraudulent.\n\nRelated guide: [Early Fraud Warnings](https://stripe.com/docs/disputes/measuring#early-fraud-warnings).",
        "properties": {
          "actionable": {
            "description": "An EFW is actionable if it has not received a dispute and has not been fully refunded. You may wish to proactively refund a charge that receives an EFW, in order to avoid receiving a dispute later.",
            "type": "boolean"
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the charge this early fraud warning is for, optionally expanded.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "fraud_type": {
            "description": "The type of fraud labelled by the issuer. One of `card_never_received`, `fraudulent_card_application`, `made_with_counterfeit_card`, `made_with_lost_card`, `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "radar.early_fraud_warning"
            ],
            "type": "string"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "ID of the Payment Intent this early fraud warning is for, optionally expanded.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          }
        },
        "required": [
          "actionable",
          "charge",
          "created",
          "fraud_type",
          "id",
          "livemode",
          "object"
        ],
        "title": "RadarEarlyFraudWarning",
        "type": "object",
        "x-expandableFields": [
          "charge",
          "payment_intent"
        ],
        "x-resourceId": "radar.early_fraud_warning",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/radar/early_fraud_warnings"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/radar/early_fraud_warnings/{early_fraud_warning}"
          }
        ],
        "x-stripeResource": {
          "class_name": "EarlyFraudWarning",
          "has_collection_class": true,
          "in_package": "Radar"
        }
      },
      "radar.value_list": {
        "description": "Value lists allow you to group values together which can then be referenced in rules.\n\nRelated guide: [Default Stripe Lists](https://stripe.com/docs/radar/lists#managing-list-items).",
        "properties": {
          "alias": {
            "description": "The name of the value list for use in rules.",
            "maxLength": 5000,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "created_by": {
            "description": "The name or email address of the user who created this value list.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "item_type": {
            "description": "The type of items in the value list. One of `card_fingerprint`, `card_bin`, `email`, `ip_address`, `country`, `string`, `case_sensitive_string`, or `customer_id`.",
            "enum": [
              "card_bin",
              "card_fingerprint",
              "case_sensitive_string",
              "country",
              "customer_id",
              "email",
              "ip_address",
              "string"
            ],
            "type": "string"
          },
          "list_items": {
            "description": "List of items contained within this value list.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/radar.value_list_item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "RadarListListItemList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "name": {
            "description": "The name of the value list.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "radar.value_list"
            ],
            "type": "string"
          }
        },
        "required": [
          "alias",
          "created",
          "created_by",
          "id",
          "item_type",
          "list_items",
          "livemode",
          "metadata",
          "name",
          "object"
        ],
        "title": "RadarListList",
        "type": "object",
        "x-expandableFields": [
          "list_items"
        ],
        "x-resourceId": "radar.value_list",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/radar/value_lists"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/radar/value_lists/{value_list}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/radar/value_lists"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/radar/value_lists/{value_list}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/radar/value_lists/{value_list}"
          }
        ],
        "x-stripeResource": {
          "class_name": "ValueList",
          "has_collection_class": true,
          "in_package": "Radar"
        }
      },
      "radar.value_list_item": {
        "description": "Value list items allow you to add specific values to a given Radar value list, which can then be used in rules.\n\nRelated guide: [Managing List Items](https://stripe.com/docs/radar/lists#managing-list-items).",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "created_by": {
            "description": "The name or email address of the user who added this item to the value list.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "radar.value_list_item"
            ],
            "type": "string"
          },
          "value": {
            "description": "The value of the item.",
            "maxLength": 5000,
            "type": "string"
          },
          "value_list": {
            "description": "The identifier of the value list this item belongs to.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "created",
          "created_by",
          "id",
          "livemode",
          "object",
          "value",
          "value_list"
        ],
        "title": "RadarListListItem",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "radar.value_list_item",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/radar/value_list_items"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/radar/value_list_items/{item}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/radar/value_list_items"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/radar/value_list_items/{item}"
          }
        ],
        "x-stripeResource": {
          "class_name": "ValueListItem",
          "has_collection_class": true,
          "in_package": "Radar"
        }
      },
      "radar_radar_options": {
        "description": "Options to configure Radar. See [Radar Session](https://stripe.com/docs/radar/radar-session) for more information.",
        "properties": {
          "session": {
            "description": "A [Radar Session](https://stripe.com/docs/radar/radar-session) is a snapshot of the browser metadata and device details that help Radar make more accurate predictions on your payments.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "RadarRadarOptions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "RadarOptions",
          "in_class": "charge"
        }
      },
      "radar_review_resource_location": {
        "description": "",
        "properties": {
          "city": {
            "description": "The city where the payment originated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "country": {
            "description": "Two-letter ISO code representing the country where the payment originated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "latitude": {
            "description": "The geographic latitude where the payment originated.",
            "nullable": true,
            "type": "number"
          },
          "longitude": {
            "description": "The geographic longitude where the payment originated.",
            "nullable": true,
            "type": "number"
          },
          "region": {
            "description": "The state/county/province/region where the payment originated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "city",
          "country",
          "latitude",
          "longitude",
          "region"
        ],
        "title": "RadarReviewResourceLocation",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Location",
          "in_class": "review"
        }
      },
      "radar_review_resource_session": {
        "description": "",
        "properties": {
          "browser": {
            "description": "The browser used in this browser session (e.g., `Chrome`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "device": {
            "description": "Information about the device used for the browser session (e.g., `Samsung SM-G930T`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "platform": {
            "description": "The platform for the browser session (e.g., `Macintosh`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "The version for the browser session (e.g., `61.0.3163.100`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "browser",
          "device",
          "platform",
          "version"
        ],
        "title": "RadarReviewResourceSession",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Session",
          "in_class": "review"
        }
      },
      "received_payment_method_details_financial_account": {
        "description": "",
        "properties": {
          "id": {
            "description": "The FinancialAccount ID.",
            "maxLength": 5000,
            "type": "string"
          },
          "network": {
            "description": "The rails the ReceivedCredit was sent over. A FinancialAccount can only send funds over `stripe`.",
            "enum": [
              "stripe"
            ],
            "type": "string"
          }
        },
        "required": [
          "id",
          "network"
        ],
        "title": "received_payment_method_details_financial_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "FinancialAccount",
          "in_class": "treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details"
        }
      },
      "recurring": {
        "description": "",
        "properties": {
          "aggregate_usage": {
            "description": "Specifies a usage aggregation strategy for prices of `usage_type=metered`. Allowed values are `sum` for summing up all usage during a period, `last_during_period` for using the last usage record reported within a period, `last_ever` for using the last usage record ever (across period bounds) or `max` which uses the usage record with the maximum reported usage during a period. Defaults to `sum`.",
            "enum": [
              "last_during_period",
              "last_ever",
              "max",
              "sum"
            ],
            "nullable": true,
            "type": "string"
          },
          "interval": {
            "description": "The frequency at which a subscription is billed. One of `day`, `week`, `month` or `year`.",
            "enum": [
              "day",
              "month",
              "week",
              "year"
            ],
            "type": "string"
          },
          "interval_count": {
            "description": "The number of intervals (specified in the `interval` attribute) between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months.",
            "type": "integer"
          },
          "trial_period_days": {
            "description": "Default number of trial days when subscribing a customer to this price using [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).",
            "nullable": true,
            "type": "integer"
          },
          "usage_type": {
            "description": "Configures how the quantity per period should be determined. Can be either `metered` or `licensed`. `licensed` automatically bills the `quantity` set when adding it to a subscription. `metered` aggregates the total usage based on usage records. Defaults to `licensed`.",
            "enum": [
              "licensed",
              "metered"
            ],
            "type": "string"
          }
        },
        "required": [
          "aggregate_usage",
          "interval",
          "interval_count",
          "trial_period_days",
          "usage_type"
        ],
        "title": "Recurring",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Recurring",
          "in_class": "price"
        }
      },
      "refund": {
        "description": "`Refund` objects allow you to refund a charge that has previously been created\nbut not yet refunded. Funds will be refunded to the credit or debit card that\nwas originally charged.\n\nStripe Tax users with recurring payments and invoices can create [Credit Notes](https://stripe.com/docs/api/credit_notes),\nwhich reduce overall tax liability because tax is correctly recalculated and\napportioned to the related invoice.\n\nRelated guide: [Refunds](https://stripe.com/docs/refunds).",
        "properties": {
          "amount": {
            "description": "Amount, in %s.",
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "Balance transaction that describes the impact on your account balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the charge that was refunded.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users. (Available on non-card refunds only)",
            "maxLength": 5000,
            "type": "string"
          },
          "failure_balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "failure_reason": {
            "description": "If the refund failed, the reason for refund failure if known. Possible values are `lost_or_stolen_card`, `expired_or_canceled_card`, or `unknown`.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "instructions_email": {
            "description": "Email to which refund instructions, if required, are sent to.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "next_action": {
            "$ref": "#/components/schemas/refund_next_action"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "refund"
            ],
            "type": "string"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "ID of the PaymentIntent that was refunded.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "reason": {
            "description": "Reason for the refund, either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).",
            "enum": [
              "duplicate",
              "expired_uncaptured_charge",
              "fraudulent",
              "requested_by_customer"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "receipt_number": {
            "description": "This is the transaction number that appears on email receipts sent for this refund.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "source_transfer_reversal": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/transfer_reversal"
              }
            ],
            "description": "The transfer reversal that is associated with the refund. Only present if the charge came from another Stripe account. See the Connect documentation for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ]
            }
          },
          "status": {
            "description": "Status of the refund. For credit card refunds, this can be `pending`, `succeeded`, or `failed`. For other types of refunds, it can be `pending`, `requires_action`, `succeeded`, `failed`, or `canceled`. Refer to our [refunds](https://stripe.com/docs/refunds#failed-refunds) documentation for more details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "transfer_reversal": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/transfer_reversal"
              }
            ],
            "description": "If the accompanying transfer was reversed, the transfer reversal object. Only applicable if the charge was created using the destination parameter.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/transfer_reversal"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "balance_transaction",
          "charge",
          "created",
          "currency",
          "id",
          "metadata",
          "object",
          "payment_intent",
          "reason",
          "receipt_number",
          "source_transfer_reversal",
          "status",
          "transfer_reversal"
        ],
        "title": "Refund",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "charge",
          "failure_balance_transaction",
          "next_action",
          "payment_intent",
          "source_transfer_reversal",
          "transfer_reversal"
        ],
        "x-resourceId": "refund",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/charges/{charge}/refunds"
          },
          {
            "method_name": "retrieve",
            "method_on": "collection",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/charges/{charge}/refunds/{refund}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/refunds"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/refunds"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/refunds/{refund}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/refunds/{refund}"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/refunds/{refund}/cancel"
          },
          {
            "method_name": "expire",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/refunds/{refund}/expire"
          }
        ],
        "x-stripeResource": {
          "class_name": "Refund",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "refund_next_action",
            "refund_next_action_display_details"
          ],
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "refund_next_action": {
        "description": "",
        "properties": {
          "display_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/refund_next_action_display_details"
              }
            ],
            "description": "Contains the refund details.",
            "nullable": true
          },
          "type": {
            "description": "Type of the next action to perform.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "display_details",
          "type"
        ],
        "title": "RefundNextAction",
        "type": "object",
        "x-expandableFields": [
          "display_details"
        ],
        "x-stripeResource": {
          "class_name": "NextAction",
          "in_class": "refund"
        }
      },
      "refund_next_action_display_details": {
        "description": "",
        "properties": {
          "email_sent": {
            "$ref": "#/components/schemas/email_sent"
          },
          "expires_at": {
            "description": "The expiry timestamp.",
            "format": "unix-time",
            "type": "integer"
          }
        },
        "required": [
          "email_sent",
          "expires_at"
        ],
        "title": "RefundNextActionDisplayDetails",
        "type": "object",
        "x-expandableFields": [
          "email_sent"
        ],
        "x-stripeResource": {
          "class_name": "NextActionDisplayDetails",
          "in_class": "refund",
          "inner_classes": [
            "email_sent"
          ]
        }
      },
      "reporting.report_run": {
        "description": "The Report Run object represents an instance of a report type generated with\nspecific run parameters. Once the object is created, Stripe begins processing the report.\nWhen the report has finished running, it will give you a reference to a file\nwhere you can retrieve your results. For an overview, see\n[API Access to Reports](https://stripe.com/docs/reporting/statements/api).\n\nNote that certain report types can only be run based on your live-mode data (not test-mode\ndata), and will error when queried without a [live-mode API key](https://stripe.com/docs/keys#test-live-modes).",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "error": {
            "description": "If something should go wrong during the run, a message about the failure (populated when\n `status=failed`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "`true` if the report is run on live mode data and `false` if it is run on test mode data.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "reporting.report_run"
            ],
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/financial_reporting_finance_report_run_run_parameters"
          },
          "report_type": {
            "description": "The ID of the [report type](https://stripe.com/docs/reports/report-types) to run, such as `\"balance.summary.1\"`.",
            "maxLength": 5000,
            "type": "string"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The file object representing the result of the report run (populated when\n `status=succeeded`).",
            "nullable": true
          },
          "status": {
            "description": "Status of this report run. This will be `pending` when the run is initially created.\n When the run finishes, this will be set to `succeeded` and the `result` field will be populated.\n Rarely, we may encounter an error, at which point this will be set to `failed` and the `error` field will be populated.",
            "maxLength": 5000,
            "type": "string"
          },
          "succeeded_at": {
            "description": "Timestamp at which this run successfully finished (populated when\n `status=succeeded`). Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "created",
          "error",
          "id",
          "livemode",
          "object",
          "parameters",
          "report_type",
          "result",
          "status",
          "succeeded_at"
        ],
        "title": "reporting_report_run",
        "type": "object",
        "x-expandableFields": [
          "parameters",
          "result"
        ],
        "x-resourceId": "reporting.report_run",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/reporting/report_runs/{report_run}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/reporting/report_runs"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/reporting/report_runs"
          }
        ],
        "x-stripeResource": {
          "class_name": "ReportRun",
          "has_collection_class": true,
          "in_package": "Reporting",
          "inner_classes": [
            "financial_reporting_finance_report_run_run_parameters"
          ]
        }
      },
      "reporting.report_type": {
        "description": "The Report Type resource corresponds to a particular type of report, such as\nthe \"Activity summary\" or \"Itemized payouts\" reports. These objects are\nidentified by an ID belonging to a set of enumerated values. See\n[API Access to Reports documentation](https://stripe.com/docs/reporting/statements/api)\nfor those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode\ndata), and will error when queried without a [live-mode API key](https://stripe.com/docs/keys#test-live-modes).",
        "properties": {
          "data_available_end": {
            "description": "Most recent time for which this Report Type is available. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "data_available_start": {
            "description": "Earliest time for which this Report Type is available. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "default_columns": {
            "description": "List of column names that are included by default when this Report Type gets run. (If the Report Type doesn't support the `columns` parameter, this will be null.)",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "The [ID of the Report Type](https://stripe.com/docs/reporting/statements/api#available-report-types), such as `balance.summary.1`.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "name": {
            "description": "Human-readable name of the Report Type",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "reporting.report_type"
            ],
            "type": "string"
          },
          "updated": {
            "description": "When this Report Type was latest updated. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "version": {
            "description": "Version of the Report Type. Different versions report with the same ID will have the same purpose, but may take different run parameters or have different result schemas.",
            "type": "integer"
          }
        },
        "required": [
          "data_available_end",
          "data_available_start",
          "default_columns",
          "id",
          "livemode",
          "name",
          "object",
          "updated",
          "version"
        ],
        "title": "reporting_report_type",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "reporting.report_type",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/reporting/report_types/{report_type}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/reporting/report_types"
          }
        ],
        "x-stripeResource": {
          "class_name": "ReportType",
          "has_collection_class": true,
          "in_package": "Reporting"
        }
      },
      "reserve_transaction": {
        "description": "",
        "properties": {
          "amount": {
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "reserve_transaction"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "description",
          "id",
          "object"
        ],
        "title": "ReserveTransaction",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ReserveTransaction",
          "in_package": "",
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "review": {
        "description": "Reviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](/radar) and reviewing payments\n[here](https://stripe.com/docs/radar/reviews).",
        "properties": {
          "billing_zip": {
            "description": "The ZIP or postal code of the card used, if applicable.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "The charge associated with this review.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "closed_reason": {
            "description": "The reason the review was closed, or null if it has not yet been closed. One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
            "enum": [
              "approved",
              "disputed",
              "redacted",
              "refunded",
              "refunded_as_fraud"
            ],
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "ip_address": {
            "description": "The IP address where the payment originated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "ip_address_location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/radar_review_resource_location"
              }
            ],
            "description": "Information related to the location of the payment. Note that this information is an approximation and attempts to locate the nearest population center - it should not be used to determine a specific address.",
            "nullable": true
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "review"
            ],
            "type": "string"
          },
          "open": {
            "description": "If `true`, the review needs action.",
            "type": "boolean"
          },
          "opened_reason": {
            "description": "The reason the review was opened. One of `rule` or `manual`.",
            "enum": [
              "manual",
              "rule"
            ],
            "type": "string"
          },
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "The PaymentIntent ID associated with this review, if one exists.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "reason": {
            "description": "The reason the review is currently open or closed. One of `rule`, `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or `redacted`.",
            "maxLength": 5000,
            "type": "string"
          },
          "session": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/radar_review_resource_session"
              }
            ],
            "description": "Information related to the browsing session of the user who initiated the payment.",
            "nullable": true
          }
        },
        "required": [
          "billing_zip",
          "charge",
          "closed_reason",
          "created",
          "id",
          "ip_address",
          "ip_address_location",
          "livemode",
          "object",
          "open",
          "opened_reason",
          "reason",
          "session"
        ],
        "title": "RadarReview",
        "type": "object",
        "x-expandableFields": [
          "charge",
          "ip_address_location",
          "payment_intent",
          "session"
        ],
        "x-resourceId": "review",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/reviews"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/reviews/{review}"
          },
          {
            "method_name": "approve",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/reviews/{review}/approve"
          }
        ],
        "x-stripeResource": {
          "class_name": "Review",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "radar_review_resource_location",
            "radar_review_resource_session"
          ]
        }
      },
      "rule": {
        "description": "",
        "properties": {
          "action": {
            "description": "The action taken on the payment.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "predicate": {
            "description": "The predicate to evaluate the payment against.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "action",
          "id",
          "predicate"
        ],
        "title": "RadarRule",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Rule",
          "in_package": "Radar"
        }
      },
      "scheduled_query_run": {
        "description": "If you have [scheduled a Sigma query](https://stripe.com/docs/sigma/scheduled-queries), you'll\nreceive a `sigma.scheduled_query_run.created` webhook each time the query\nruns. The webhook contains a `ScheduledQueryRun` object, which you can use to\nretrieve the query results.",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "data_load_time": {
            "description": "When the query was run, Sigma contained a snapshot of your Stripe data at this time.",
            "format": "unix-time",
            "type": "integer"
          },
          "error": {
            "$ref": "#/components/schemas/sigma_scheduled_query_run_error"
          },
          "file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "The file object representing the results of the query.",
            "nullable": true
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "scheduled_query_run"
            ],
            "type": "string"
          },
          "result_available_until": {
            "description": "Time at which the result expires and is no longer available for download.",
            "format": "unix-time",
            "type": "integer"
          },
          "sql": {
            "description": "SQL for the query.",
            "maxLength": 100000,
            "type": "string"
          },
          "status": {
            "description": "The query's execution status, which will be `completed` for successful runs, and `canceled`, `failed`, or `timed_out` otherwise.",
            "maxLength": 5000,
            "type": "string"
          },
          "title": {
            "description": "Title of the query.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "created",
          "data_load_time",
          "file",
          "id",
          "livemode",
          "object",
          "result_available_until",
          "sql",
          "status",
          "title"
        ],
        "title": "ScheduledQueryRun",
        "type": "object",
        "x-expandableFields": [
          "error",
          "file"
        ],
        "x-resourceId": "scheduled_query_run",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/sigma/scheduled_query_runs"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/sigma/scheduled_query_runs/{scheduled_query_run}"
          }
        ],
        "x-stripeResource": {
          "class_name": "ScheduledQueryRun",
          "has_collection_class": true,
          "in_package": "Sigma",
          "inner_classes": [
            "sigma_scheduled_query_run_error"
          ]
        }
      },
      "schedules_phase_automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Stripe automatically computes tax on invoices created during this phase.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "SchedulesPhaseAutomaticTax",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AutomaticTax",
          "in_class": "subscription_schedule_phase_configuration"
        }
      },
      "secret_service_resource_scope": {
        "description": "",
        "properties": {
          "type": {
            "description": "The secret scope type.",
            "enum": [
              "account",
              "user"
            ],
            "type": "string"
          },
          "user": {
            "description": "The user ID, if type is set to \"user\"",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "SecretServiceResourceScope",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Scope",
          "in_class": "apps.secret"
        }
      },
      "sepa_debit_generated_from": {
        "description": "",
        "properties": {
          "charge": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "The ID of the Charge that generated this PaymentMethod, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "setup_attempt": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/setup_attempt"
              }
            ],
            "description": "The ID of the SetupAttempt that generated this PaymentMethod, if any.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/setup_attempt"
                }
              ]
            }
          }
        },
        "required": [
          "charge",
          "setup_attempt"
        ],
        "title": "sepa_debit_generated_from",
        "type": "object",
        "x-expandableFields": [
          "charge",
          "setup_attempt"
        ],
        "x-stripeResource": {
          "class_name": "GeneratedFrom",
          "in_class": "payment_method_sepa_debit"
        }
      },
      "setup_attempt": {
        "description": "A SetupAttempt describes one attempted confirmation of a SetupIntent,\nwhether that confirmation was successful or unsuccessful. You can use\nSetupAttempts to inspect details of a specific attempt at setting up a\npayment method using a SetupIntent.",
        "properties": {
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              }
            ],
            "description": "The value of [application](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-application) on the SetupIntent at the time of this confirmation.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                }
              ]
            }
          },
          "attach_to_self": {
            "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
            "type": "boolean"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "The value of [customer](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-customer) on the SetupIntent at the time of this confirmation.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "flow_directions": {
            "description": "Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.",
            "items": {
              "enum": [
                "inbound",
                "outbound"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "setup_attempt"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The value of [on_behalf_of](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-on_behalf_of) on the SetupIntent at the time of this confirmation.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the payment method used with this SetupAttempt.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "payment_method_details": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details"
          },
          "setup_error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/api_errors"
              }
            ],
            "description": "The error encountered during this attempt to confirm the SetupIntent, if any.",
            "nullable": true
          },
          "setup_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/setup_intent"
              }
            ],
            "description": "ID of the SetupIntent that this attempt belongs to.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/setup_intent"
                }
              ]
            }
          },
          "status": {
            "description": "Status of this SetupAttempt, one of `requires_confirmation`, `requires_action`, `processing`, `succeeded`, `failed`, or `abandoned`.",
            "maxLength": 5000,
            "type": "string"
          },
          "usage": {
            "description": "The value of [usage](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-usage) on the SetupIntent at the time of this confirmation, one of `off_session` or `on_session`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "application",
          "created",
          "customer",
          "flow_directions",
          "id",
          "livemode",
          "object",
          "on_behalf_of",
          "payment_method",
          "payment_method_details",
          "setup_error",
          "setup_intent",
          "status",
          "usage"
        ],
        "title": "PaymentFlowsSetupIntentSetupAttempt",
        "type": "object",
        "x-expandableFields": [
          "application",
          "customer",
          "on_behalf_of",
          "payment_method",
          "payment_method_details",
          "setup_error",
          "setup_intent"
        ],
        "x-resourceId": "setup_attempt",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/setup_attempts"
          }
        ],
        "x-stripeResource": {
          "class_name": "SetupAttempt",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "setup_attempt_payment_method_details"
          ]
        }
      },
      "setup_attempt_payment_method_details": {
        "description": "",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_acss_debit"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_au_becs_debit"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_bacs_debit"
          },
          "bancontact": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_bancontact"
          },
          "blik": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_blik"
          },
          "boleto": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_boleto"
          },
          "card": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_card"
          },
          "card_present": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_card_present"
          },
          "ideal": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_ideal"
          },
          "klarna": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_klarna"
          },
          "link": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_link"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_sepa_debit"
          },
          "sofort": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_sofort"
          },
          "type": {
            "description": "The type of the payment method used in the SetupIntent (e.g., `card`). An additional hash is included on `payment_method_details` with a name matching this value. It contains confirmation-specific information for the payment method.",
            "maxLength": 5000,
            "type": "string"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/setup_attempt_payment_method_details_us_bank_account"
          }
        },
        "required": [
          "type"
        ],
        "title": "SetupAttemptPaymentMethodDetails",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "au_becs_debit",
          "bacs_debit",
          "bancontact",
          "blik",
          "boleto",
          "card",
          "card_present",
          "ideal",
          "klarna",
          "link",
          "sepa_debit",
          "sofort",
          "us_bank_account"
        ],
        "x-stripeResource": {
          "class_name": "PaymentMethodDetails",
          "in_class": "setup_attempt",
          "inner_classes": [
            "setup_attempt_payment_method_details_acss_debit",
            "setup_attempt_payment_method_details_au_becs_debit",
            "setup_attempt_payment_method_details_bacs_debit",
            "setup_attempt_payment_method_details_bancontact",
            "setup_attempt_payment_method_details_blik",
            "setup_attempt_payment_method_details_boleto",
            "setup_attempt_payment_method_details_card",
            "setup_attempt_payment_method_details_card_present",
            "setup_attempt_payment_method_details_ideal",
            "setup_attempt_payment_method_details_klarna",
            "setup_attempt_payment_method_details_link",
            "setup_attempt_payment_method_details_sepa_debit",
            "setup_attempt_payment_method_details_sofort",
            "setup_attempt_payment_method_details_us_bank_account"
          ]
        }
      },
      "setup_attempt_payment_method_details_acss_debit": {
        "description": "",
        "properties": {},
        "title": "setup_attempt_payment_method_details_acss_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AcssDebit",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_au_becs_debit": {
        "description": "",
        "properties": {},
        "title": "setup_attempt_payment_method_details_au_becs_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AuBecsDebit",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_bacs_debit": {
        "description": "",
        "properties": {},
        "title": "setup_attempt_payment_method_details_bacs_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BacsDebit",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_bancontact": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "Bank Identifier Code of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_sepa_debit": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "generated_sepa_debit_mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "iban_last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_language": {
            "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.\nCan be one of `en`, `de`, `fr`, or `nl`",
            "enum": [
              "de",
              "en",
              "fr",
              "nl"
            ],
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by Bancontact directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_code",
          "bank_name",
          "bic",
          "generated_sepa_debit",
          "generated_sepa_debit_mandate",
          "iban_last4",
          "preferred_language",
          "verified_name"
        ],
        "title": "setup_attempt_payment_method_details_bancontact",
        "type": "object",
        "x-expandableFields": [
          "generated_sepa_debit",
          "generated_sepa_debit_mandate"
        ],
        "x-stripeResource": {
          "class_name": "Bancontact",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_blik": {
        "description": "",
        "properties": {},
        "title": "setup_attempt_payment_method_details_blik",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Blik",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_boleto": {
        "description": "",
        "properties": {},
        "title": "setup_attempt_payment_method_details_boleto",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Boleto",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_card": {
        "description": "",
        "properties": {
          "three_d_secure": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/three_d_secure_details"
              }
            ],
            "description": "Populated if this authorization used 3D Secure authentication.",
            "nullable": true
          }
        },
        "required": [
          "three_d_secure"
        ],
        "title": "setup_attempt_payment_method_details_card",
        "type": "object",
        "x-expandableFields": [
          "three_d_secure"
        ],
        "x-stripeResource": {
          "class_name": "Card",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_card_present": {
        "description": "",
        "properties": {
          "generated_card": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "The ID of the Card PaymentMethod which was generated by this SetupAttempt.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          }
        },
        "required": [
          "generated_card"
        ],
        "title": "setup_attempt_payment_method_details_card_present",
        "type": "object",
        "x-expandableFields": [
          "generated_card"
        ],
        "x-stripeResource": {
          "class_name": "CardPresent",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_ideal": {
        "description": "",
        "properties": {
          "bank": {
            "description": "The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, or `van_lanschot`.",
            "enum": [
              "abn_amro",
              "asn_bank",
              "bunq",
              "handelsbanken",
              "ing",
              "knab",
              "moneyou",
              "rabobank",
              "regiobank",
              "revolut",
              "sns_bank",
              "triodos_bank",
              "van_lanschot"
            ],
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "The Bank Identifier Code of the customer's bank.",
            "enum": [
              "ABNANL2A",
              "ASNBNL21",
              "BUNQNL2A",
              "FVLBNL22",
              "HANDNL2A",
              "INGBNL2A",
              "KNABNL2H",
              "MOYONL21",
              "RABONL2U",
              "RBRBNL21",
              "REVOLT21",
              "SNSBNL2A",
              "TRIONL2U"
            ],
            "nullable": true,
            "type": "string"
          },
          "generated_sepa_debit": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "generated_sepa_debit_mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "iban_last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by iDEAL directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank",
          "bic",
          "generated_sepa_debit",
          "generated_sepa_debit_mandate",
          "iban_last4",
          "verified_name"
        ],
        "title": "setup_attempt_payment_method_details_ideal",
        "type": "object",
        "x-expandableFields": [
          "generated_sepa_debit",
          "generated_sepa_debit_mandate"
        ],
        "x-stripeResource": {
          "class_name": "Ideal",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_klarna": {
        "description": "",
        "properties": {},
        "title": "setup_attempt_payment_method_details_klarna",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Klarna",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_link": {
        "description": "",
        "properties": {},
        "title": "setup_attempt_payment_method_details_link",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Link",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_sepa_debit": {
        "description": "",
        "properties": {},
        "title": "setup_attempt_payment_method_details_sepa_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SepaDebit",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_sofort": {
        "description": "",
        "properties": {
          "bank_code": {
            "description": "Bank code of bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "description": "Bank Identifier Code of the bank associated with the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "generated_sepa_debit": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "The ID of the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "generated_sepa_debit_mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "The mandate for the SEPA Direct Debit PaymentMethod which was generated by this SetupAttempt.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "iban_last4": {
            "description": "Last four characters of the IBAN.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "preferred_language": {
            "description": "Preferred language of the Sofort authorization page that the customer is redirected to.\nCan be one of `en`, `de`, `fr`, or `nl`",
            "enum": [
              "de",
              "en",
              "fr",
              "nl"
            ],
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Owner's verified full name. Values are verified or provided by Sofort directly\n(if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_code",
          "bank_name",
          "bic",
          "generated_sepa_debit",
          "generated_sepa_debit_mandate",
          "iban_last4",
          "preferred_language",
          "verified_name"
        ],
        "title": "setup_attempt_payment_method_details_sofort",
        "type": "object",
        "x-expandableFields": [
          "generated_sepa_debit",
          "generated_sepa_debit_mandate"
        ],
        "x-stripeResource": {
          "class_name": "Sofort",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_attempt_payment_method_details_us_bank_account": {
        "description": "",
        "properties": {},
        "title": "setup_attempt_payment_method_details_us_bank_account",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "UsBankAccount",
          "in_class": "setup_attempt_payment_method_details"
        }
      },
      "setup_intent": {
        "description": "A SetupIntent guides you through the process of setting up and saving a customer's payment credentials for future payments.\nFor example, you could use a SetupIntent to set up and save your customer's card without immediately collecting a payment.\nLater, you can use [PaymentIntents](https://stripe.com/docs/api#payment_intents) to drive the payment flow.\n\nCreate a SetupIntent as soon as you're ready to collect your customer's payment credentials.\nDo not maintain long-lived, unconfirmed SetupIntents as they may no longer be valid.\nThe SetupIntent then transitions through multiple [statuses](https://stripe.com/docs/payments/intents#intent-statuses) as it guides\nyou through the setup process.\n\nSuccessful SetupIntents result in payment credentials that are optimized for future payments.\nFor example, cardholders in [certain regions](/guides/strong-customer-authentication) may need to be run through\n[Strong Customer Authentication](https://stripe.com/docs/strong-customer-authentication) at the time of payment method collection\nin order to streamline later [off-session payments](https://stripe.com/docs/payments/setup-intents).\nIf the SetupIntent is used with a [Customer](https://stripe.com/docs/api#setup_intent_object-customer), upon success,\nit will automatically attach the resulting payment method to that Customer.\nWe recommend using SetupIntents or [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) on\nPaymentIntents to save payment methods in order to prevent saving invalid or unoptimized payment methods.\n\nBy using SetupIntents, you ensure that your customers experience the minimum set of required friction,\neven as regulations change over time.\n\nRelated guide: [Setup Intents API](https://stripe.com/docs/payments/setup-intents).",
        "properties": {
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              }
            ],
            "description": "ID of the Connect application that created the SetupIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                }
              ]
            }
          },
          "attach_to_self": {
            "description": "If present, the SetupIntent's payment method will be attached to the in-context Stripe Account.\n\nIt can only be used for this Stripe Account’s own money movement flows like InboundTransfer and OutboundTransfers. It cannot be set to true when setting up a PaymentMethod for a Customer, and defaults to false when attaching a PaymentMethod to a Customer.",
            "type": "boolean"
          },
          "cancellation_reason": {
            "description": "Reason for cancellation of this SetupIntent, one of `abandoned`, `requested_by_customer`, or `duplicate`.",
            "enum": [
              "abandoned",
              "duplicate",
              "requested_by_customer"
            ],
            "nullable": true,
            "type": "string"
          },
          "client_secret": {
            "description": "The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.\n\nThe client secret can be used to complete payment setup from your frontend. It should not be stored, logged, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "ID of the Customer this SetupIntent belongs to, if one exists.\n\nIf present, the SetupIntent's payment method will be attached to the Customer on successful setup. Payment methods attached to other Customers cannot be used with this SetupIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "flow_directions": {
            "description": "Indicates the directions of money movement for which this payment method is intended to be used.\n\nInclude `inbound` if you intend to use the payment method as the origin to pull funds from. Include `outbound` if you intend to use the payment method as the destination to send funds to. You can include both if you intend to use the payment method for both purposes.",
            "items": {
              "enum": [
                "inbound",
                "outbound"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "last_setup_error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/api_errors"
              }
            ],
            "description": "The error encountered in the previous SetupIntent confirmation.",
            "nullable": true
          },
          "latest_attempt": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/setup_attempt"
              }
            ],
            "description": "The most recent SetupAttempt for this SetupIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/setup_attempt"
                }
              ]
            }
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "ID of the multi use Mandate generated by the SetupIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "next_action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/setup_intent_next_action"
              }
            ],
            "description": "If present, this property tells you what actions you need to take in order for your customer to continue payment setup.",
            "nullable": true
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "setup_intent"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) for which the setup is intended.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the payment method used with this SetupIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "payment_method_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/setup_intent_payment_method_options"
              }
            ],
            "description": "Payment-method-specific configuration for this SetupIntent.",
            "nullable": true
          },
          "payment_method_types": {
            "description": "The list of payment method types (e.g. card) that this SetupIntent is allowed to set up.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "single_use_mandate": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/mandate"
              }
            ],
            "description": "ID of the single_use Mandate generated by the SetupIntent.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/mandate"
                }
              ]
            }
          },
          "status": {
            "description": "[Status](https://stripe.com/docs/payments/intents#intent-statuses) of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `canceled`, or `succeeded`.",
            "enum": [
              "canceled",
              "processing",
              "requires_action",
              "requires_confirmation",
              "requires_payment_method",
              "succeeded"
            ],
            "type": "string"
          },
          "usage": {
            "description": "Indicates how the payment method is intended to be used in the future.\n\nUse `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "application",
          "cancellation_reason",
          "client_secret",
          "created",
          "customer",
          "description",
          "flow_directions",
          "id",
          "last_setup_error",
          "latest_attempt",
          "livemode",
          "mandate",
          "metadata",
          "next_action",
          "object",
          "on_behalf_of",
          "payment_method",
          "payment_method_options",
          "payment_method_types",
          "single_use_mandate",
          "status",
          "usage"
        ],
        "title": "SetupIntent",
        "type": "object",
        "x-expandableFields": [
          "application",
          "customer",
          "last_setup_error",
          "latest_attempt",
          "mandate",
          "next_action",
          "on_behalf_of",
          "payment_method",
          "payment_method_options",
          "single_use_mandate"
        ],
        "x-resourceId": "setup_intent",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/setup_intents"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/setup_intents"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/setup_intents/{intent}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/setup_intents/{intent}"
          },
          {
            "method_name": "confirm",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/setup_intents/{intent}/confirm"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/setup_intents/{intent}/cancel"
          },
          {
            "method_name": "verify_microdeposits",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/setup_intents/{intent}/verify_microdeposits"
          }
        ],
        "x-stripeResource": {
          "class_name": "SetupIntent",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "setup_intent_next_action",
            "setup_intent_next_action_redirect_to_url",
            "setup_intent_payment_method_options"
          ]
        }
      },
      "setup_intent_next_action": {
        "description": "",
        "properties": {
          "redirect_to_url": {
            "$ref": "#/components/schemas/setup_intent_next_action_redirect_to_url"
          },
          "type": {
            "description": "Type of the next action to perform, one of `redirect_to_url`, `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or `verify_with_microdeposits`.",
            "maxLength": 5000,
            "type": "string"
          },
          "use_stripe_sdk": {
            "description": "When confirming a SetupIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.",
            "type": "object"
          },
          "verify_with_microdeposits": {
            "$ref": "#/components/schemas/setup_intent_next_action_verify_with_microdeposits"
          }
        },
        "required": [
          "type"
        ],
        "title": "SetupIntentNextAction",
        "type": "object",
        "x-expandableFields": [
          "redirect_to_url",
          "verify_with_microdeposits"
        ],
        "x-stripeResource": {
          "class_name": "NextAction",
          "in_class": "setup_intent",
          "inner_classes": [
            "setup_intent_next_action_verify_with_microdeposits"
          ]
        }
      },
      "setup_intent_next_action_redirect_to_url": {
        "description": "",
        "properties": {
          "return_url": {
            "description": "If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "url": {
            "description": "The URL you must redirect your customer to in order to authenticate.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "return_url",
          "url"
        ],
        "title": "SetupIntentNextActionRedirectToUrl",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "NextActionRedirectToUrl",
          "in_class": "setup_intent"
        }
      },
      "setup_intent_next_action_verify_with_microdeposits": {
        "description": "",
        "properties": {
          "arrival_date": {
            "description": "The timestamp when the microdeposits are expected to land.",
            "format": "unix-time",
            "type": "integer"
          },
          "hosted_verification_url": {
            "description": "The URL for the hosted verification page, which allows customers to verify their bank account.",
            "maxLength": 5000,
            "type": "string"
          },
          "microdeposit_type": {
            "description": "The type of the microdeposit sent to the customer. Used to distinguish between different verification methods.",
            "enum": [
              "amounts",
              "descriptor_code"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "arrival_date",
          "hosted_verification_url",
          "microdeposit_type"
        ],
        "title": "SetupIntentNextActionVerifyWithMicrodeposits",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "VerifyWithMicrodeposits",
          "in_class": "setup_intent_next_action"
        }
      },
      "setup_intent_payment_method_options": {
        "description": "",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/setup_intent_payment_method_options_acss_debit"
          },
          "blik": {
            "$ref": "#/components/schemas/setup_intent_payment_method_options_blik"
          },
          "card": {
            "$ref": "#/components/schemas/setup_intent_payment_method_options_card"
          },
          "link": {
            "$ref": "#/components/schemas/setup_intent_payment_method_options_link"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/setup_intent_payment_method_options_sepa_debit"
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/setup_intent_payment_method_options_us_bank_account"
          }
        },
        "title": "SetupIntentPaymentMethodOptions",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "blik",
          "card",
          "link",
          "sepa_debit",
          "us_bank_account"
        ],
        "x-stripeResource": {
          "class_name": "PaymentMethodOptions",
          "in_class": "setup_intent",
          "inner_classes": [
            "setup_intent_payment_method_options_acss_debit",
            "setup_intent_payment_method_options_blik",
            "setup_intent_payment_method_options_card",
            "setup_intent_payment_method_options_link",
            "setup_intent_payment_method_options_mandate_options_blik",
            "setup_intent_payment_method_options_mandate_options_sepa_debit",
            "setup_intent_payment_method_options_sepa_debit",
            "setup_intent_payment_method_options_us_bank_account"
          ]
        }
      },
      "setup_intent_payment_method_options_acss_debit": {
        "description": "",
        "properties": {
          "currency": {
            "description": "Currency supported by the bank account",
            "enum": [
              "cad",
              "usd"
            ],
            "nullable": true,
            "type": "string"
          },
          "mandate_options": {
            "$ref": "#/components/schemas/setup_intent_payment_method_options_mandate_options_acss_debit"
          },
          "verification_method": {
            "description": "Bank account verification method.",
            "enum": [
              "automatic",
              "instant",
              "microdeposits"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "currency"
        ],
        "title": "setup_intent_payment_method_options_acss_debit",
        "type": "object",
        "x-expandableFields": [
          "mandate_options"
        ],
        "x-stripeResource": {
          "class_name": "AcssDebit",
          "in_class": "setup_intent_payment_method_options",
          "inner_classes": [
            "setup_intent_payment_method_options_mandate_options_acss_debit"
          ]
        }
      },
      "setup_intent_payment_method_options_blik": {
        "description": "",
        "properties": {
          "mandate_options": {
            "$ref": "#/components/schemas/setup_intent_payment_method_options_mandate_options_blik"
          }
        },
        "title": "setup_intent_payment_method_options_blik",
        "type": "object",
        "x-expandableFields": [
          "mandate_options"
        ],
        "x-stripeResource": {
          "class_name": "Blik",
          "in_class": "setup_intent_payment_method_options"
        }
      },
      "setup_intent_payment_method_options_card": {
        "description": "",
        "properties": {
          "mandate_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/setup_intent_payment_method_options_card_mandate_options"
              }
            ],
            "description": "Configuration options for setting up an eMandate for cards issued in India.",
            "nullable": true
          },
          "network": {
            "description": "Selected network to process this SetupIntent on. Depends on the available networks of the card attached to the setup intent. Can be only set confirm-time.",
            "enum": [
              "amex",
              "cartes_bancaires",
              "diners",
              "discover",
              "interac",
              "jcb",
              "mastercard",
              "unionpay",
              "unknown",
              "visa"
            ],
            "nullable": true,
            "type": "string"
          },
          "request_three_d_secure": {
            "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Permitted values include: `automatic` or `any`. If not provided, defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
            "enum": [
              "any",
              "automatic",
              "challenge_only"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "mandate_options",
          "network",
          "request_three_d_secure"
        ],
        "title": "setup_intent_payment_method_options_card",
        "type": "object",
        "x-expandableFields": [
          "mandate_options"
        ],
        "x-stripeResource": {
          "class_name": "Card",
          "in_class": "setup_intent_payment_method_options",
          "inner_classes": [
            "setup_intent_payment_method_options_card_mandate_options"
          ]
        }
      },
      "setup_intent_payment_method_options_card_mandate_options": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount to be charged for future payments.",
            "type": "integer"
          },
          "amount_type": {
            "description": "One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the exact amount to be charged in future payments. If `maximum`, the amount charged can be up to the value passed for the `amount` param.",
            "enum": [
              "fixed",
              "maximum"
            ],
            "type": "string"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "A description of the mandate or subscription that is meant to be displayed to the customer.",
            "maxLength": 200,
            "nullable": true,
            "type": "string"
          },
          "end_date": {
            "description": "End date of the mandate or subscription. If not provided, the mandate will be active until canceled. If provided, end date should be after start date.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "interval": {
            "description": "Specifies payment frequency. One of `day`, `week`, `month`, `year`, or `sporadic`.",
            "enum": [
              "day",
              "month",
              "sporadic",
              "week",
              "year"
            ],
            "type": "string"
          },
          "interval_count": {
            "description": "The number of intervals between payments. For example, `interval=month` and `interval_count=3` indicates one payment every three months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks). This parameter is optional when `interval=sporadic`.",
            "nullable": true,
            "type": "integer"
          },
          "reference": {
            "description": "Unique identifier for the mandate or subscription.",
            "maxLength": 80,
            "type": "string"
          },
          "start_date": {
            "description": "Start date of the mandate or subscription. Start date should not be lesser than yesterday.",
            "format": "unix-time",
            "type": "integer"
          },
          "supported_types": {
            "description": "Specifies the type of mandates supported. Possible values are `india`.",
            "items": {
              "enum": [
                "india"
              ],
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "amount",
          "amount_type",
          "currency",
          "description",
          "end_date",
          "interval",
          "interval_count",
          "reference",
          "start_date",
          "supported_types"
        ],
        "title": "setup_intent_payment_method_options_card_mandate_options",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "MandateOptions",
          "in_class": "setup_intent_payment_method_options_card"
        }
      },
      "setup_intent_payment_method_options_link": {
        "description": "",
        "properties": {
          "persistent_token": {
            "description": "Token used for persistent Link logins.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "persistent_token"
        ],
        "title": "setup_intent_payment_method_options_link",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Link",
          "in_class": "setup_intent_payment_method_options"
        }
      },
      "setup_intent_payment_method_options_mandate_options_acss_debit": {
        "description": "",
        "properties": {
          "custom_mandate_url": {
            "description": "A URL for custom mandate text",
            "maxLength": 5000,
            "type": "string"
          },
          "default_for": {
            "description": "List of Stripe products where this mandate can be selected automatically.",
            "items": {
              "enum": [
                "invoice",
                "subscription"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "interval_description": {
            "description": "Description of the interval. Only required if the 'payment_schedule' parameter is 'interval' or 'combined'.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "payment_schedule": {
            "description": "Payment schedule for the mandate.",
            "enum": [
              "combined",
              "interval",
              "sporadic"
            ],
            "nullable": true,
            "type": "string"
          },
          "transaction_type": {
            "description": "Transaction type of the mandate.",
            "enum": [
              "business",
              "personal"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "interval_description",
          "payment_schedule",
          "transaction_type"
        ],
        "title": "setup_intent_payment_method_options_mandate_options_acss_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "MandateOptions",
          "in_class": "setup_intent_payment_method_options_acss_debit"
        }
      },
      "setup_intent_payment_method_options_mandate_options_blik": {
        "description": "",
        "properties": {
          "expires_after": {
            "description": "Date at which the mandate expires.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "off_session": {
            "$ref": "#/components/schemas/mandate_options_off_session_details_blik"
          },
          "type": {
            "description": "Type of the mandate.",
            "enum": [
              "off_session",
              "on_session"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "expires_after",
          "type"
        ],
        "title": "setup_intent_payment_method_options_mandate_options_blik",
        "type": "object",
        "x-expandableFields": [
          "off_session"
        ],
        "x-stripeResource": {
          "class_name": "BlikMandateOptions",
          "in_class": "setup_intent_payment_method_options"
        }
      },
      "setup_intent_payment_method_options_mandate_options_sepa_debit": {
        "description": "",
        "properties": {},
        "title": "setup_intent_payment_method_options_mandate_options_sepa_debit",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SepaDebitMandateOptions",
          "in_class": "setup_intent_payment_method_options"
        }
      },
      "setup_intent_payment_method_options_sepa_debit": {
        "description": "",
        "properties": {
          "mandate_options": {
            "$ref": "#/components/schemas/setup_intent_payment_method_options_mandate_options_sepa_debit"
          }
        },
        "title": "setup_intent_payment_method_options_sepa_debit",
        "type": "object",
        "x-expandableFields": [
          "mandate_options"
        ],
        "x-stripeResource": {
          "class_name": "SepaDebit",
          "in_class": "setup_intent_payment_method_options"
        }
      },
      "setup_intent_payment_method_options_us_bank_account": {
        "description": "",
        "properties": {
          "financial_connections": {
            "$ref": "#/components/schemas/linked_account_options_us_bank_account"
          },
          "verification_method": {
            "description": "Bank account verification method.",
            "enum": [
              "automatic",
              "instant",
              "microdeposits"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "setup_intent_payment_method_options_us_bank_account",
        "type": "object",
        "x-expandableFields": [
          "financial_connections"
        ],
        "x-stripeResource": {
          "class_name": "UsBankAccount",
          "in_class": "setup_intent_payment_method_options"
        }
      },
      "setup_intent_type_specific_payment_method_options_client": {
        "description": "",
        "properties": {
          "verification_method": {
            "description": "Bank account verification method.",
            "enum": [
              "automatic",
              "instant",
              "microdeposits"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "title": "SetupIntentTypeSpecificPaymentMethodOptionsClient",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SetupIntentTypeSpecificPaymentMethodOptionsClient",
          "in_package": ""
        }
      },
      "shipping": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "carrier": {
            "description": "The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Recipient name.",
            "maxLength": 5000,
            "type": "string"
          },
          "phone": {
            "description": "Recipient phone (including extension).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "tracking_number": {
            "description": "The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "title": "Shipping",
        "type": "object",
        "x-expandableFields": [
          "address"
        ],
        "x-stripeResource": {
          "class_name": "ShippingDetails",
          "in_package": ""
        }
      },
      "shipping_rate": {
        "description": "Shipping rates describe the price of shipping presented to your customers and can be\napplied to [Checkout Sessions](https://stripe.com/docs/payments/checkout/shipping)\nand [Orders](https://stripe.com/docs/orders/shipping) to collect shipping costs.",
        "properties": {
          "active": {
            "description": "Whether the shipping rate can be used for new purchases. Defaults to `true`.",
            "type": "boolean"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "delivery_estimate": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping_rate_delivery_estimate"
              }
            ],
            "description": "The estimated range for how long shipping will take, meant to be displayable to the customer. This will appear on CheckoutSessions.",
            "nullable": true
          },
          "display_name": {
            "description": "The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "fixed_amount": {
            "$ref": "#/components/schemas/shipping_rate_fixed_amount"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "shipping_rate"
            ],
            "type": "string"
          },
          "tax_behavior": {
            "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "nullable": true,
            "type": "string"
          },
          "tax_code": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/tax_code"
              }
            ],
            "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping tax code is `txcd_92010001`.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/tax_code"
                }
              ]
            }
          },
          "type": {
            "description": "The type of calculation to use on the shipping rate. Can only be `fixed_amount` for now.",
            "enum": [
              "fixed_amount"
            ],
            "type": "string"
          }
        },
        "required": [
          "active",
          "created",
          "delivery_estimate",
          "display_name",
          "id",
          "livemode",
          "metadata",
          "object",
          "tax_behavior",
          "tax_code",
          "type"
        ],
        "title": "ShippingRate",
        "type": "object",
        "x-expandableFields": [
          "delivery_estimate",
          "fixed_amount",
          "tax_code"
        ],
        "x-resourceId": "shipping_rate",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/shipping_rates"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/shipping_rates/{shipping_rate_token}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/shipping_rates"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/shipping_rates/{shipping_rate_token}"
          }
        ],
        "x-stripeResource": {
          "class_name": "ShippingRate",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "shipping_rate_currency_option",
            "shipping_rate_delivery_estimate",
            "shipping_rate_fixed_amount"
          ]
        }
      },
      "shipping_rate_currency_option": {
        "description": "",
        "properties": {
          "amount": {
            "description": "A non-negative integer in cents representing how much to charge.",
            "type": "integer"
          },
          "tax_behavior": {
            "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.",
            "enum": [
              "exclusive",
              "inclusive",
              "unspecified"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "tax_behavior"
        ],
        "title": "ShippingRateCurrencyOption",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CurrencyOption",
          "in_class": "shipping_rate"
        }
      },
      "shipping_rate_delivery_estimate": {
        "description": "",
        "properties": {
          "maximum": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping_rate_delivery_estimate_bound"
              }
            ],
            "description": "The upper bound of the estimated range. If empty, represents no upper bound i.e., infinite.",
            "nullable": true
          },
          "minimum": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/shipping_rate_delivery_estimate_bound"
              }
            ],
            "description": "The lower bound of the estimated range. If empty, represents no lower bound.",
            "nullable": true
          }
        },
        "required": [
          "maximum",
          "minimum"
        ],
        "title": "ShippingRateDeliveryEstimate",
        "type": "object",
        "x-expandableFields": [
          "maximum",
          "minimum"
        ],
        "x-stripeResource": {
          "class_name": "DeliveryEstimate",
          "in_class": "shipping_rate",
          "inner_classes": [
            "shipping_rate_delivery_estimate_bound"
          ]
        }
      },
      "shipping_rate_delivery_estimate_bound": {
        "description": "",
        "properties": {
          "unit": {
            "description": "A unit of time.",
            "enum": [
              "business_day",
              "day",
              "hour",
              "month",
              "week"
            ],
            "type": "string"
          },
          "value": {
            "description": "Must be greater than 0.",
            "type": "integer"
          }
        },
        "required": [
          "unit",
          "value"
        ],
        "title": "ShippingRateDeliveryEstimateBound",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "DeliveryEstimateBound",
          "in_class": "shipping_rate_delivery_estimate"
        }
      },
      "shipping_rate_fixed_amount": {
        "description": "",
        "properties": {
          "amount": {
            "description": "A non-negative integer in cents representing how much to charge.",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "currency_options": {
            "additionalProperties": {
              "$ref": "#/components/schemas/shipping_rate_currency_option"
            },
            "description": "Shipping rates defined in each available currency option. Each key must be a three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html) and a [supported currency](https://stripe.com/docs/currencies).",
            "type": "object"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "title": "ShippingRateFixedAmount",
        "type": "object",
        "x-expandableFields": [
          "currency_options"
        ],
        "x-stripeResource": {
          "class_name": "FixedAmount",
          "in_class": "shipping_rate"
        }
      },
      "sigma_scheduled_query_run_error": {
        "description": "",
        "properties": {
          "message": {
            "description": "Information about the run failure.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "title": "SigmaScheduledQueryRunError",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "RunError",
          "in_class": "scheduled_query_run"
        }
      },
      "sku": {
        "description": "Stores representations of [stock keeping units](http://en.wikipedia.org/wiki/Stock_keeping_unit).\nSKUs describe specific product variations, taking into account any combination of: attributes,\ncurrency, and cost. For example, a product may be a T-shirt, whereas a specific SKU represents\nthe `size: large`, `color: red` version of that shirt.\n\nCan also be used to manage inventory.",
        "properties": {
          "active": {
            "description": "Whether the SKU is available for purchase.",
            "type": "boolean"
          },
          "attributes": {
            "additionalProperties": {
              "maxLength": 5000,
              "type": "string"
            },
            "description": "A dictionary of attributes and values for the attributes defined by the product. If, for example, a product's attributes are `[\"size\", \"gender\"]`, a valid SKU has the following dictionary of attributes: `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.",
            "type": "object"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "image": {
            "description": "The URL of an image for this SKU, meant to be displayable to the customer.",
            "maxLength": 2048,
            "nullable": true,
            "type": "string"
          },
          "inventory": {
            "$ref": "#/components/schemas/sku_inventory"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "sku"
            ],
            "type": "string"
          },
          "package_dimensions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/package_dimensions"
              }
            ],
            "description": "The dimensions of this SKU for shipping purposes.",
            "nullable": true
          },
          "price": {
            "description": "The cost of the item as a positive integer in the smallest currency unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100, Japanese Yen being a zero-decimal currency).",
            "type": "integer"
          },
          "product": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/product"
              }
            ],
            "description": "The ID of the product this SKU is associated with. The product must be currently active.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/product"
                }
              ]
            }
          },
          "updated": {
            "description": "Time at which the object was last updated. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          }
        },
        "required": [
          "active",
          "attributes",
          "created",
          "currency",
          "id",
          "image",
          "inventory",
          "livemode",
          "metadata",
          "object",
          "package_dimensions",
          "price",
          "product",
          "updated"
        ],
        "title": "Sku",
        "type": "object",
        "x-expandableFields": [
          "inventory",
          "package_dimensions",
          "product"
        ],
        "x-resourceId": "sku",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/skus/{id}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/skus"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/skus/{id}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/skus"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/skus/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Sku",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "sku_inventory"
          ]
        }
      },
      "sku_inventory": {
        "description": "",
        "properties": {
          "quantity": {
            "description": "The count of inventory available. Will be present if and only if `type` is `finite`.",
            "nullable": true,
            "type": "integer"
          },
          "type": {
            "description": "Inventory type. Possible values are `finite`, `bucket` (not quantified), and `infinite`.",
            "maxLength": 5000,
            "type": "string"
          },
          "value": {
            "description": "An indicator of the inventory available. Possible values are `in_stock`, `limited`, and `out_of_stock`. Will be present if and only if `type` is `bucket`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "quantity",
          "type",
          "value"
        ],
        "title": "SKUInventory",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Inventory",
          "in_class": "sku"
        }
      },
      "source": {
        "description": "`Source` objects allow you to accept a variety of payment methods. They\nrepresent a customer's payment instrument, and can be used with the Stripe API\njust like a `Card` object: once chargeable, they can be charged, or can be\nattached to customers.\n\nStripe doesn't recommend using the deprecated [Sources API](https://stripe.com/docs/api/sources).\nWe recommend that you adopt the [PaymentMethods API](https://stripe.com/docs/api/payment_methods).\nThis newer API provides access to our latest features and payment method types.\n\nRelated guides: [Sources API](https://stripe.com/docs/sources) and [Sources & Customers](https://stripe.com/docs/sources/customers).",
        "properties": {
          "ach_credit_transfer": {
            "$ref": "#/components/schemas/source_type_ach_credit_transfer"
          },
          "ach_debit": {
            "$ref": "#/components/schemas/source_type_ach_debit"
          },
          "acss_debit": {
            "$ref": "#/components/schemas/source_type_acss_debit"
          },
          "alipay": {
            "$ref": "#/components/schemas/source_type_alipay"
          },
          "amount": {
            "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount associated with the source. This is the amount for which the source will be chargeable once ready. Required for `single_use` sources.",
            "nullable": true,
            "type": "integer"
          },
          "au_becs_debit": {
            "$ref": "#/components/schemas/source_type_au_becs_debit"
          },
          "bancontact": {
            "$ref": "#/components/schemas/source_type_bancontact"
          },
          "card": {
            "$ref": "#/components/schemas/source_type_card"
          },
          "card_present": {
            "$ref": "#/components/schemas/source_type_card_present"
          },
          "client_secret": {
            "description": "The client secret of the source. Used for client-side retrieval using a publishable key.",
            "maxLength": 5000,
            "type": "string"
          },
          "code_verification": {
            "$ref": "#/components/schemas/source_code_verification_flow"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO code for the currency](https://stripe.com/docs/currencies) associated with the source. This is the currency for which the source will be chargeable once ready. Required for `single_use` sources.",
            "nullable": true,
            "type": "string"
          },
          "customer": {
            "description": "The ID of the customer to which this source is attached. This will not be present when the source has not been attached to a customer.",
            "maxLength": 5000,
            "type": "string"
          },
          "eps": {
            "$ref": "#/components/schemas/source_type_eps"
          },
          "flow": {
            "description": "The authentication `flow` of the source. `flow` is one of `redirect`, `receiver`, `code_verification`, `none`.",
            "maxLength": 5000,
            "type": "string"
          },
          "giropay": {
            "$ref": "#/components/schemas/source_type_giropay"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "ideal": {
            "$ref": "#/components/schemas/source_type_ideal"
          },
          "klarna": {
            "$ref": "#/components/schemas/source_type_klarna"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "multibanco": {
            "$ref": "#/components/schemas/source_type_multibanco"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "source"
            ],
            "type": "string"
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/source_owner"
              }
            ],
            "description": "Information about the owner of the payment instrument that may be used or required by particular source types.",
            "nullable": true
          },
          "p24": {
            "$ref": "#/components/schemas/source_type_p24"
          },
          "receiver": {
            "$ref": "#/components/schemas/source_receiver_flow"
          },
          "redirect": {
            "$ref": "#/components/schemas/source_redirect_flow"
          },
          "sepa_credit_transfer": {
            "$ref": "#/components/schemas/source_type_sepa_credit_transfer"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/source_type_sepa_debit"
          },
          "sofort": {
            "$ref": "#/components/schemas/source_type_sofort"
          },
          "source_order": {
            "$ref": "#/components/schemas/source_order"
          },
          "statement_descriptor": {
            "description": "Extra information about a source. This will appear on your customer's statement every time you charge the source.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the source, one of `canceled`, `chargeable`, `consumed`, `failed`, or `pending`. Only `chargeable` sources can be used to create a charge.",
            "maxLength": 5000,
            "type": "string"
          },
          "three_d_secure": {
            "$ref": "#/components/schemas/source_type_three_d_secure"
          },
          "type": {
            "description": "The `type` of the source. The `type` is a payment method, one of `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`, `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash is included on the source with a name matching this value. It contains additional information specific to the [payment method](https://stripe.com/docs/sources) used.",
            "enum": [
              "ach_credit_transfer",
              "ach_debit",
              "acss_debit",
              "alipay",
              "au_becs_debit",
              "bancontact",
              "card",
              "card_present",
              "eps",
              "giropay",
              "ideal",
              "klarna",
              "multibanco",
              "p24",
              "sepa_credit_transfer",
              "sepa_debit",
              "sofort",
              "three_d_secure",
              "wechat"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "usage": {
            "description": "Either `reusable` or `single_use`. Whether this source should be reusable or not. Some source types may or may not be reusable by construction, while others may leave the option at creation. If an incompatible value is passed, an error will be returned.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "wechat": {
            "$ref": "#/components/schemas/source_type_wechat"
          }
        },
        "required": [
          "amount",
          "client_secret",
          "created",
          "currency",
          "flow",
          "id",
          "livemode",
          "metadata",
          "object",
          "owner",
          "statement_descriptor",
          "status",
          "type",
          "usage"
        ],
        "title": "Source",
        "type": "object",
        "x-expandableFields": [
          "code_verification",
          "owner",
          "receiver",
          "redirect",
          "source_order"
        ],
        "x-resourceId": "source",
        "x-stripeOperations": [
          {
            "method_name": "detach",
            "method_on": "service",
            "method_type": "custom",
            "operation": "delete",
            "path": "/v1/customers/{customer}/sources/{id}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/sources/{source}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/sources"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/sources/{source}"
          },
          {
            "method_name": "verify",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/sources/{source}/verify"
          },
          {
            "method_name": "source_transactions",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/sources/{source}/source_transactions"
          }
        ],
        "x-stripeResource": {
          "class_name": "Source",
          "in_package": "",
          "inner_classes": [
            "source_code_verification_flow",
            "source_order",
            "source_order_item",
            "source_owner",
            "source_receiver_flow",
            "source_redirect_flow",
            "source_type_ach_credit_transfer",
            "source_type_ach_debit",
            "source_type_acss_debit",
            "source_type_alipay",
            "source_type_au_becs_debit",
            "source_type_bancontact",
            "source_type_card",
            "source_type_card_present",
            "source_type_eps",
            "source_type_giropay",
            "source_type_ideal",
            "source_type_klarna",
            "source_type_multibanco",
            "source_type_p24",
            "source_type_sepa_credit_transfer",
            "source_type_sepa_debit",
            "source_type_sofort",
            "source_type_three_d_secure",
            "source_type_wechat"
          ],
          "polymorphic_groups": [
            "deleted_payment_source",
            "payment_source"
          ]
        }
      },
      "source_code_verification_flow": {
        "description": "",
        "properties": {
          "attempts_remaining": {
            "description": "The number of attempts remaining to authenticate the source object with a verification code.",
            "type": "integer"
          },
          "status": {
            "description": "The status of the code verification, either `pending` (awaiting verification, `attempts_remaining` should be greater than 0), `succeeded` (successful verification) or `failed` (failed verification, cannot be verified anymore as `attempts_remaining` should be 0).",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "attempts_remaining",
          "status"
        ],
        "title": "SourceCodeVerificationFlow",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CodeVerificationFlow",
          "in_class": "source"
        }
      },
      "source_mandate_notification": {
        "description": "Source mandate notifications should be created when a notification related to\na source mandate must be sent to the payer. They will trigger a webhook or\ndeliver an email to the customer.",
        "properties": {
          "acss_debit": {
            "$ref": "#/components/schemas/source_mandate_notification_acss_debit_data"
          },
          "amount": {
            "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the amount associated with the mandate notification. The amount is expressed in the currency of the underlying source. Required if the notification type is `debit_initiated`.",
            "nullable": true,
            "type": "integer"
          },
          "bacs_debit": {
            "$ref": "#/components/schemas/source_mandate_notification_bacs_debit_data"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "source_mandate_notification"
            ],
            "type": "string"
          },
          "reason": {
            "description": "The reason of the mandate notification. Valid reasons are `mandate_confirmed` or `debit_initiated`.",
            "maxLength": 5000,
            "type": "string"
          },
          "sepa_debit": {
            "$ref": "#/components/schemas/source_mandate_notification_sepa_debit_data"
          },
          "source": {
            "$ref": "#/components/schemas/source"
          },
          "status": {
            "description": "The status of the mandate notification. Valid statuses are `pending` or `submitted`.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "The type of source this mandate notification is attached to. Should be the source type identifier code for the payment method, such as `three_d_secure`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "created",
          "id",
          "livemode",
          "object",
          "reason",
          "source",
          "status",
          "type"
        ],
        "title": "SourceMandateNotification",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "bacs_debit",
          "sepa_debit",
          "source"
        ],
        "x-stripeResource": {
          "class_name": "SourceMandateNotification",
          "in_package": "",
          "inner_classes": [
            "source_mandate_notification_acss_debit_data",
            "source_mandate_notification_bacs_debit_data",
            "source_mandate_notification_sepa_debit_data"
          ]
        }
      },
      "source_mandate_notification_acss_debit_data": {
        "description": "",
        "properties": {
          "statement_descriptor": {
            "description": "The statement descriptor associate with the debit.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceMandateNotificationAcssDebitData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AcssDebitData",
          "in_class": "source_mandate_notification"
        }
      },
      "source_mandate_notification_bacs_debit_data": {
        "description": "",
        "properties": {
          "last4": {
            "description": "Last 4 digits of the account number associated with the debit.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceMandateNotificationBacsDebitData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BacsDebitData",
          "in_class": "source_mandate_notification"
        }
      },
      "source_mandate_notification_sepa_debit_data": {
        "description": "",
        "properties": {
          "creditor_identifier": {
            "description": "SEPA creditor ID.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "Last 4 digits of the account number associated with the debit.",
            "maxLength": 5000,
            "type": "string"
          },
          "mandate_reference": {
            "description": "Mandate reference associated with the debit.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceMandateNotificationSepaDebitData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SepaDebitData",
          "in_class": "source_mandate_notification"
        }
      },
      "source_order": {
        "description": "",
        "properties": {
          "amount": {
            "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the total amount for the order.",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "email": {
            "description": "The email address of the customer placing the order.",
            "maxLength": 5000,
            "type": "string"
          },
          "items": {
            "description": "List of items constituting the order.",
            "items": {
              "$ref": "#/components/schemas/source_order_item"
            },
            "nullable": true,
            "type": "array"
          },
          "shipping": {
            "$ref": "#/components/schemas/shipping"
          }
        },
        "required": [
          "amount",
          "currency",
          "items"
        ],
        "title": "SourceOrder",
        "type": "object",
        "x-expandableFields": [
          "items",
          "shipping"
        ],
        "x-stripeResource": {
          "class_name": "Order",
          "in_class": "source"
        }
      },
      "source_order_item": {
        "description": "",
        "properties": {
          "amount": {
            "description": "The amount (price) for this order item.",
            "nullable": true,
            "type": "integer"
          },
          "currency": {
            "description": "This currency of this order item. Required when `amount` is present.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "Human-readable description for this order item.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "parent": {
            "description": "The ID of the associated object for this line item. Expandable if not null (e.g., expandable to a SKU).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of this order item. When type is `sku`, this is the number of instances of the SKU to be ordered.",
            "type": "integer"
          },
          "type": {
            "description": "The type of this order item. Must be `sku`, `tax`, or `shipping`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency",
          "description",
          "parent",
          "type"
        ],
        "title": "SourceOrderItem",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "OrderItem",
          "in_class": "source"
        }
      },
      "source_owner": {
        "description": "",
        "properties": {
          "address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Owner's address.",
            "nullable": true
          },
          "email": {
            "description": "Owner's email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Owner's full name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "phone": {
            "description": "Owner's phone number (including extension).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_address": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/address"
              }
            ],
            "description": "Verified owner's address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "nullable": true
          },
          "verified_email": {
            "description": "Verified owner's email address. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Verified owner's full name. Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_phone": {
            "description": "Verified owner's phone number (including extension). Verified values are verified or provided by the payment method directly (and if supported) at the time of authorization or settlement. They cannot be set or mutated.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "email",
          "name",
          "phone",
          "verified_address",
          "verified_email",
          "verified_name",
          "verified_phone"
        ],
        "title": "SourceOwner",
        "type": "object",
        "x-expandableFields": [
          "address",
          "verified_address"
        ],
        "x-stripeResource": {
          "class_name": "Owner",
          "in_class": "source"
        }
      },
      "source_receiver_flow": {
        "description": "",
        "properties": {
          "address": {
            "description": "The address of the receiver source. This is the value that should be communicated to the customer to send their funds to.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "amount_charged": {
            "description": "The total amount that was moved to your balance. This is almost always equal to the amount charged. In rare cases when customers deposit excess funds and we are unable to refund those, those funds get moved to your balance and show up in amount_charged as well. The amount charged is expressed in the source's currency.",
            "type": "integer"
          },
          "amount_received": {
            "description": "The total amount received by the receiver source. `amount_received = amount_returned + amount_charged` should be true for consumed sources unless customers deposit excess funds. The amount received is expressed in the source's currency.",
            "type": "integer"
          },
          "amount_returned": {
            "description": "The total amount that was returned to the customer. The amount returned is expressed in the source's currency.",
            "type": "integer"
          },
          "refund_attributes_method": {
            "description": "Type of refund attribute method, one of `email`, `manual`, or `none`.",
            "maxLength": 5000,
            "type": "string"
          },
          "refund_attributes_status": {
            "description": "Type of refund attribute status, one of `missing`, `requested`, or `available`.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "address",
          "amount_charged",
          "amount_received",
          "amount_returned",
          "refund_attributes_method",
          "refund_attributes_status"
        ],
        "title": "SourceReceiverFlow",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ReceiverFlow",
          "in_class": "source"
        }
      },
      "source_redirect_flow": {
        "description": "",
        "properties": {
          "failure_reason": {
            "description": "The failure reason for the redirect, either `user_abort` (the customer aborted or dropped out of the redirect flow), `declined` (the authentication failed or the transaction was declined), or `processing_error` (the redirect failed due to a technical error). Present only if the redirect status is `failed`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "return_url": {
            "description": "The URL you provide to redirect the customer to after they authenticated their payment.",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "The status of the redirect, either `pending` (ready to be used by your customer to authenticate the transaction), `succeeded` (succesful authentication, cannot be reused) or `not_required` (redirect should not be used) or `failed` (failed authentication, cannot be reused).",
            "maxLength": 5000,
            "type": "string"
          },
          "url": {
            "description": "The URL provided to you to redirect a customer to as part of a `redirect` authentication flow.",
            "maxLength": 2048,
            "type": "string"
          }
        },
        "required": [
          "failure_reason",
          "return_url",
          "status",
          "url"
        ],
        "title": "SourceRedirectFlow",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "RedirectFlow",
          "in_class": "source"
        }
      },
      "source_transaction": {
        "description": "Some payment methods have no required amount that a customer must send.\nCustomers can be instructed to send any amount, and it can be made up of\nmultiple transactions. As such, sources can have multiple associated\ntransactions.",
        "properties": {
          "ach_credit_transfer": {
            "$ref": "#/components/schemas/source_transaction_ach_credit_transfer_data"
          },
          "amount": {
            "description": "A positive integer in the smallest currency unit (that is, 100 cents for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency) representing the amount your customer has pushed to the receiver.",
            "type": "integer"
          },
          "chf_credit_transfer": {
            "$ref": "#/components/schemas/source_transaction_chf_credit_transfer_data"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "gbp_credit_transfer": {
            "$ref": "#/components/schemas/source_transaction_gbp_credit_transfer_data"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "source_transaction"
            ],
            "type": "string"
          },
          "paper_check": {
            "$ref": "#/components/schemas/source_transaction_paper_check_data"
          },
          "sepa_credit_transfer": {
            "$ref": "#/components/schemas/source_transaction_sepa_credit_transfer_data"
          },
          "source": {
            "description": "The ID of the source this transaction is attached to.",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "The status of the transaction, one of `succeeded`, `pending`, or `failed`.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "The type of source this transaction is attached to.",
            "enum": [
              "ach_credit_transfer",
              "ach_debit",
              "alipay",
              "bancontact",
              "card",
              "card_present",
              "eps",
              "giropay",
              "ideal",
              "klarna",
              "multibanco",
              "p24",
              "sepa_debit",
              "sofort",
              "three_d_secure",
              "wechat"
            ],
            "type": "string"
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "id",
          "livemode",
          "object",
          "source",
          "status",
          "type"
        ],
        "title": "SourceTransaction",
        "type": "object",
        "x-expandableFields": [
          "ach_credit_transfer",
          "chf_credit_transfer",
          "gbp_credit_transfer",
          "paper_check",
          "sepa_credit_transfer"
        ],
        "x-resourceId": "source_transaction",
        "x-stripeResource": {
          "class_name": "SourceTransaction",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "source_transaction_ach_credit_transfer_data",
            "source_transaction_chf_credit_transfer_data",
            "source_transaction_gbp_credit_transfer_data",
            "source_transaction_paper_check_data",
            "source_transaction_sepa_credit_transfer_data"
          ]
        }
      },
      "source_transaction_ach_credit_transfer_data": {
        "description": "",
        "properties": {
          "customer_data": {
            "description": "Customer data associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "fingerprint": {
            "description": "Bank account fingerprint associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "Last 4 digits of the account number associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "routing_number": {
            "description": "Routing number associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceTransactionAchCreditTransferData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AchCreditTransferData",
          "in_class": "source_transaction"
        }
      },
      "source_transaction_chf_credit_transfer_data": {
        "description": "",
        "properties": {
          "reference": {
            "description": "Reference associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_address_country": {
            "description": "Sender's country address.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_address_line1": {
            "description": "Sender's line 1 address.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_iban": {
            "description": "Sender's bank account IBAN.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_name": {
            "description": "Sender's name.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceTransactionChfCreditTransferData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ChfCreditTransferData",
          "in_class": "source_transaction"
        }
      },
      "source_transaction_gbp_credit_transfer_data": {
        "description": "",
        "properties": {
          "fingerprint": {
            "description": "Bank account fingerprint associated with the Stripe owned bank account receiving the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "funding_method": {
            "description": "The credit transfer rails the sender used to push this transfer. The possible rails are: Faster Payments, BACS, CHAPS, and wire transfers. Currently only Faster Payments is supported.",
            "maxLength": 5000,
            "type": "string"
          },
          "last4": {
            "description": "Last 4 digits of sender account number associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "reference": {
            "description": "Sender entered arbitrary information about the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_account_number": {
            "description": "Sender account number associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_name": {
            "description": "Sender name associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_sort_code": {
            "description": "Sender sort code associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceTransactionGbpCreditTransferData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "GbpCreditTransferData",
          "in_class": "source_transaction"
        }
      },
      "source_transaction_paper_check_data": {
        "description": "",
        "properties": {
          "available_at": {
            "description": "Time at which the deposited funds will be available for use. Measured in seconds since the Unix epoch.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoices": {
            "description": "Comma-separated list of invoice IDs associated with the paper check.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceTransactionPaperCheckData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PaperCheckData",
          "in_class": "source_transaction"
        }
      },
      "source_transaction_sepa_credit_transfer_data": {
        "description": "",
        "properties": {
          "reference": {
            "description": "Reference associated with the transfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_iban": {
            "description": "Sender's bank account IBAN.",
            "maxLength": 5000,
            "type": "string"
          },
          "sender_name": {
            "description": "Sender's name.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "title": "SourceTransactionSepaCreditTransferData",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "SepaCreditTransferData",
          "in_class": "source_transaction"
        }
      },
      "source_type_ach_credit_transfer": {
        "properties": {
          "account_number": {
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_name": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_type": {
            "nullable": true,
            "type": "string"
          },
          "refund_routing_number": {
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "nullable": true,
            "type": "string"
          },
          "swift_code": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "AchCreditTransfer",
          "in_class": "source"
        }
      },
      "source_type_ach_debit": {
        "properties": {
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "nullable": true,
            "type": "string"
          },
          "type": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "AchDebit",
          "in_class": "source"
        }
      },
      "source_type_acss_debit": {
        "properties": {
          "bank_address_city": {
            "nullable": true,
            "type": "string"
          },
          "bank_address_line_1": {
            "nullable": true,
            "type": "string"
          },
          "bank_address_line_2": {
            "nullable": true,
            "type": "string"
          },
          "bank_address_postal_code": {
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "category": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "AcssDebit",
          "in_class": "source"
        }
      },
      "source_type_alipay": {
        "properties": {
          "data_string": {
            "nullable": true,
            "type": "string"
          },
          "native_url": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "Alipay",
          "in_class": "source"
        }
      },
      "source_type_au_becs_debit": {
        "properties": {
          "bsb_number": {
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "AuBecsDebit",
          "in_class": "source"
        }
      },
      "source_type_bancontact": {
        "properties": {
          "bank_code": {
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "nullable": true,
            "type": "string"
          },
          "iban_last4": {
            "nullable": true,
            "type": "string"
          },
          "preferred_language": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "Bancontact",
          "in_class": "source"
        }
      },
      "source_type_card": {
        "properties": {
          "address_line1_check": {
            "nullable": true,
            "type": "string"
          },
          "address_zip_check": {
            "nullable": true,
            "type": "string"
          },
          "brand": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "cvc_check": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dynamic_last4": {
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "nullable": true,
            "type": "integer"
          },
          "exp_year": {
            "nullable": true,
            "type": "integer"
          },
          "fingerprint": {
            "type": "string"
          },
          "funding": {
            "nullable": true,
            "type": "string"
          },
          "iin": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "three_d_secure": {
            "type": "string"
          },
          "tokenization_method": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "Card",
          "in_class": "source"
        }
      },
      "source_type_card_present": {
        "properties": {
          "application_cryptogram": {
            "type": "string"
          },
          "application_preferred_name": {
            "type": "string"
          },
          "authorization_code": {
            "nullable": true,
            "type": "string"
          },
          "authorization_response_code": {
            "type": "string"
          },
          "brand": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "cvm_type": {
            "type": "string"
          },
          "data_type": {
            "nullable": true,
            "type": "string"
          },
          "dedicated_file_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "emv_auth_data": {
            "type": "string"
          },
          "evidence_customer_signature": {
            "nullable": true,
            "type": "string"
          },
          "evidence_transaction_certificate": {
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "nullable": true,
            "type": "integer"
          },
          "exp_year": {
            "nullable": true,
            "type": "integer"
          },
          "fingerprint": {
            "type": "string"
          },
          "funding": {
            "nullable": true,
            "type": "string"
          },
          "iin": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "pos_device_id": {
            "nullable": true,
            "type": "string"
          },
          "pos_entry_mode": {
            "type": "string"
          },
          "read_method": {
            "nullable": true,
            "type": "string"
          },
          "reader": {
            "nullable": true,
            "type": "string"
          },
          "terminal_verification_results": {
            "type": "string"
          },
          "transaction_status_information": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "CardPresent",
          "in_class": "source"
        }
      },
      "source_type_eps": {
        "properties": {
          "reference": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "Eps",
          "in_class": "source"
        }
      },
      "source_type_giropay": {
        "properties": {
          "bank_code": {
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "Giropay",
          "in_class": "source"
        }
      },
      "source_type_ideal": {
        "properties": {
          "bank": {
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "nullable": true,
            "type": "string"
          },
          "iban_last4": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "Ideal",
          "in_class": "source"
        }
      },
      "source_type_klarna": {
        "properties": {
          "background_image_url": {
            "type": "string"
          },
          "client_token": {
            "nullable": true,
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          },
          "page_title": {
            "type": "string"
          },
          "pay_later_asset_urls_descriptive": {
            "type": "string"
          },
          "pay_later_asset_urls_standard": {
            "type": "string"
          },
          "pay_later_name": {
            "type": "string"
          },
          "pay_later_redirect_url": {
            "type": "string"
          },
          "pay_now_asset_urls_descriptive": {
            "type": "string"
          },
          "pay_now_asset_urls_standard": {
            "type": "string"
          },
          "pay_now_name": {
            "type": "string"
          },
          "pay_now_redirect_url": {
            "type": "string"
          },
          "pay_over_time_asset_urls_descriptive": {
            "type": "string"
          },
          "pay_over_time_asset_urls_standard": {
            "type": "string"
          },
          "pay_over_time_name": {
            "type": "string"
          },
          "pay_over_time_redirect_url": {
            "type": "string"
          },
          "payment_method_categories": {
            "type": "string"
          },
          "purchase_country": {
            "type": "string"
          },
          "purchase_type": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "shipping_delay": {
            "type": "integer"
          },
          "shipping_first_name": {
            "type": "string"
          },
          "shipping_last_name": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "Klarna",
          "in_class": "source"
        }
      },
      "source_type_multibanco": {
        "properties": {
          "entity": {
            "nullable": true,
            "type": "string"
          },
          "reference": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_city": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_country": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_line1": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_line2": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_postal_code": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_state": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_name": {
            "nullable": true,
            "type": "string"
          },
          "refund_iban": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "Multibanco",
          "in_class": "source"
        }
      },
      "source_type_p24": {
        "properties": {
          "reference": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "P24",
          "in_class": "source"
        }
      },
      "source_type_sepa_credit_transfer": {
        "properties": {
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "nullable": true,
            "type": "string"
          },
          "iban": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_city": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_country": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_line1": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_line2": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_postal_code": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_address_state": {
            "nullable": true,
            "type": "string"
          },
          "refund_account_holder_name": {
            "nullable": true,
            "type": "string"
          },
          "refund_iban": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "SepaCreditTransfer",
          "in_class": "source"
        }
      },
      "source_type_sepa_debit": {
        "properties": {
          "bank_code": {
            "nullable": true,
            "type": "string"
          },
          "branch_code": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "fingerprint": {
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "mandate_reference": {
            "nullable": true,
            "type": "string"
          },
          "mandate_url": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "SepaDebit",
          "in_class": "source"
        }
      },
      "source_type_sofort": {
        "properties": {
          "bank_code": {
            "nullable": true,
            "type": "string"
          },
          "bank_name": {
            "nullable": true,
            "type": "string"
          },
          "bic": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "iban_last4": {
            "nullable": true,
            "type": "string"
          },
          "preferred_language": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "Sofort",
          "in_class": "source"
        }
      },
      "source_type_three_d_secure": {
        "properties": {
          "address_line1_check": {
            "nullable": true,
            "type": "string"
          },
          "address_zip_check": {
            "nullable": true,
            "type": "string"
          },
          "authenticated": {
            "nullable": true,
            "type": "boolean"
          },
          "brand": {
            "nullable": true,
            "type": "string"
          },
          "card": {
            "nullable": true,
            "type": "string"
          },
          "country": {
            "nullable": true,
            "type": "string"
          },
          "customer": {
            "nullable": true,
            "type": "string"
          },
          "cvc_check": {
            "nullable": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dynamic_last4": {
            "nullable": true,
            "type": "string"
          },
          "exp_month": {
            "nullable": true,
            "type": "integer"
          },
          "exp_year": {
            "nullable": true,
            "type": "integer"
          },
          "fingerprint": {
            "type": "string"
          },
          "funding": {
            "nullable": true,
            "type": "string"
          },
          "iin": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "last4": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "three_d_secure": {
            "type": "string"
          },
          "tokenization_method": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "ThreeDSecure",
          "in_class": "source"
        }
      },
      "source_type_wechat": {
        "properties": {
          "prepay_id": {
            "type": "string"
          },
          "qr_code_url": {
            "nullable": true,
            "type": "string"
          },
          "statement_descriptor": {
            "type": "string"
          }
        },
        "type": "object",
        "x-stripeResource": {
          "class_name": "Wechat",
          "in_class": "source"
        }
      },
      "subscription": {
        "description": "Subscriptions allow you to charge a customer on a recurring basis.\n\nRelated guide: [Creating Subscriptions](https://stripe.com/docs/billing/subscriptions/creating).",
        "properties": {
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              },
              {
                "$ref": "#/components/schemas/deleted_application"
              }
            ],
            "description": "ID of the Connect Application that created the subscription.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ]
            }
          },
          "application_fee_percent": {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account.",
            "nullable": true,
            "type": "number"
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/subscription_automatic_tax"
          },
          "billing_cycle_anchor": {
            "description": "Determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
            "format": "unix-time",
            "type": "integer"
          },
          "billing_thresholds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_billing_thresholds"
              }
            ],
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
            "nullable": true
          },
          "cancel_at": {
            "description": "A date in the future at which the subscription will automatically get canceled",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "cancel_at_period_end": {
            "description": "If the subscription has been canceled with the `at_period_end` flag set to `true`, `cancel_at_period_end` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.",
            "type": "boolean"
          },
          "canceled_at": {
            "description": "If the subscription has been canceled, the date of that cancellation. If the subscription was canceled with `cancel_at_period_end`, `canceled_at` will reflect the time of the most recent update request, not the end of the subscription period when the subscription is automatically moved to a canceled state.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this subscription at the end of the cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "current_period_end": {
            "description": "End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.",
            "format": "unix-time",
            "type": "integer"
          },
          "current_period_start": {
            "description": "Start of the current period that the subscription has been invoiced for.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "ID of the customer who owns the subscription.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "days_until_due": {
            "description": "Number of days a customer has to pay invoices generated by this subscription. This value will be `null` for subscriptions where `collection_method=charge_automatically`.",
            "nullable": true,
            "type": "integer"
          },
          "default_payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the default payment method for the subscription. It must belong to the customer associated with the subscription. This takes precedence over `default_source`. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "default_source": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_source"
              }
            ],
            "description": "ID of the default payment source for the subscription. It must belong to the customer associated with the subscription and be in a chargeable state. If `default_payment_method` is also set, `default_payment_method` will take precedence. If neither are set, invoices will use the customer's [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method) or [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_source"
                }
              ]
            }
          },
          "default_tax_rates": {
            "description": "The tax rates that will apply to any subscription item that does not have `tax_rates` set. Invoices created will have their `default_tax_rates` populated from the subscription.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "nullable": true,
            "type": "array"
          },
          "description": {
            "description": "The subscription's description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription for rendering in Stripe surfaces.",
            "maxLength": 500,
            "nullable": true,
            "type": "string"
          },
          "discount": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/discount"
              }
            ],
            "description": "Describes the current discount applied to this subscription, if there is one. When billing, a discount applied to a subscription overrides a discount applied on a customer-wide basis.",
            "nullable": true
          },
          "ended_at": {
            "description": "If the subscription has ended, the date the subscription ended.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "items": {
            "description": "List of subscription items, each with an attached price.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/subscription_item"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "SubscriptionItemList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "latest_invoice": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/invoice"
              }
            ],
            "description": "The most recent invoice this subscription has generated.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/invoice"
                }
              ]
            }
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "next_pending_invoice_item_invoice": {
            "description": "Specifies the approximate timestamp on which any pending invoice items will be billed according to the schedule provided at `pending_invoice_item_interval`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "subscription"
            ],
            "type": "string"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) the charge was made on behalf of for charges associated with this subscription. See the Connect documentation for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "pause_collection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscriptions_resource_pause_collection"
              }
            ],
            "description": "If specified, payment collection for this subscription will be paused.",
            "nullable": true
          },
          "payment_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscriptions_resource_payment_settings"
              }
            ],
            "description": "Payment settings passed on to invoices created by the subscription.",
            "nullable": true
          },
          "pending_invoice_item_interval": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_pending_invoice_item_interval"
              }
            ],
            "description": "Specifies an interval for how often to bill for any pending invoice items. It is analogous to calling [Create an invoice](https://stripe.com/docs/api#create_invoice) for the given subscription at the specified interval.",
            "nullable": true
          },
          "pending_setup_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/setup_intent"
              }
            ],
            "description": "You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect user authentication when creating a subscription without immediate payment or updating a subscription's payment method, allowing you to optimize for off-session payments. Learn more in the [SCA Migration Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/setup_intent"
                }
              ]
            }
          },
          "pending_update": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscriptions_resource_pending_update"
              }
            ],
            "description": "If specified, [pending updates](https://stripe.com/docs/billing/subscriptions/pending-updates) that will be applied to the subscription once the `latest_invoice` has been paid.",
            "nullable": true
          },
          "schedule": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription_schedule"
              }
            ],
            "description": "The schedule attached to the subscription",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription_schedule"
                }
              ]
            }
          },
          "start_date": {
            "description": "Date when the subscription was first created. The date might differ from the `created` date due to backdating.",
            "format": "unix-time",
            "type": "integer"
          },
          "status": {
            "description": "Possible values are `incomplete`, `incomplete_expired`, `trialing`, `active`, `past_due`, `canceled`, or `unpaid`. \n\nFor `collection_method=charge_automatically` a subscription moves into `incomplete` if the initial payment attempt fails. A subscription in this state can only have metadata and default_source updated. Once the first invoice is paid, the subscription moves into an `active` state. If the first invoice is not paid within 23 hours, the subscription transitions to `incomplete_expired`. This is a terminal state, the open invoice will be voided and no further invoices will be generated. \n\nA subscription that is currently in a trial period is `trialing` and moves to `active` when the trial period is over. \n\nIf subscription `collection_method=charge_automatically` it becomes `past_due` when payment to renew it fails and `canceled` or `unpaid` (depending on your subscriptions settings) when Stripe has exhausted all payment retry attempts. \n\nIf subscription `collection_method=send_invoice` it becomes `past_due` when its invoice is not paid by the due date, and `canceled` or `unpaid` if it is still not paid by an additional deadline after that. Note that when a subscription has a status of `unpaid`, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed). After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.",
            "enum": [
              "active",
              "canceled",
              "incomplete",
              "incomplete_expired",
              "past_due",
              "trialing",
              "unpaid"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "test_clock": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/test_helpers.test_clock"
              }
            ],
            "description": "ID of the test clock this subscription belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ]
            }
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_transfer_data"
              }
            ],
            "description": "The account (if any) the subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
            "nullable": true
          },
          "trial_end": {
            "description": "If the subscription has a trial, the end of that trial.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "trial_start": {
            "description": "If the subscription has a trial, the beginning of that trial.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "application",
          "application_fee_percent",
          "automatic_tax",
          "billing_cycle_anchor",
          "billing_thresholds",
          "cancel_at",
          "cancel_at_period_end",
          "canceled_at",
          "collection_method",
          "created",
          "currency",
          "current_period_end",
          "current_period_start",
          "customer",
          "days_until_due",
          "default_payment_method",
          "default_source",
          "description",
          "discount",
          "ended_at",
          "id",
          "items",
          "latest_invoice",
          "livemode",
          "metadata",
          "next_pending_invoice_item_invoice",
          "object",
          "on_behalf_of",
          "pause_collection",
          "payment_settings",
          "pending_invoice_item_interval",
          "pending_setup_intent",
          "pending_update",
          "schedule",
          "start_date",
          "status",
          "test_clock",
          "transfer_data",
          "trial_end",
          "trial_start"
        ],
        "title": "Subscription",
        "type": "object",
        "x-expandableFields": [
          "application",
          "automatic_tax",
          "billing_thresholds",
          "customer",
          "default_payment_method",
          "default_source",
          "default_tax_rates",
          "discount",
          "items",
          "latest_invoice",
          "on_behalf_of",
          "pause_collection",
          "payment_settings",
          "pending_invoice_item_interval",
          "pending_setup_intent",
          "pending_update",
          "schedule",
          "test_clock",
          "transfer_data"
        ],
        "x-resourceId": "subscription",
        "x-stripeOperations": [
          {
            "method_name": "search",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/subscriptions/search"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/subscriptions"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/subscriptions"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/subscriptions/{subscription_exposed_id}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/subscriptions/{subscription_exposed_id}"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "delete",
            "path": "/v1/subscriptions/{subscription_exposed_id}"
          },
          {
            "method_name": "delete_discount",
            "method_on": "service",
            "method_type": "custom",
            "operation": "delete",
            "path": "/v1/subscriptions/{subscription_exposed_id}/discount"
          }
        ],
        "x-stripeResource": {
          "class_name": "Subscription",
          "has_collection_class": true,
          "has_search_result_class": true,
          "in_package": "",
          "inner_classes": [
            "subscription_automatic_tax",
            "subscription_billing_thresholds",
            "subscription_pending_invoice_item_interval",
            "subscription_transfer_data",
            "subscriptions_resource_pause_collection",
            "subscriptions_resource_payment_method_options",
            "subscriptions_resource_payment_settings",
            "subscriptions_resource_pending_update"
          ]
        }
      },
      "subscription_automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Stripe automatically computes tax on this subscription.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "SubscriptionAutomaticTax",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AutomaticTax",
          "in_class": "subscription"
        }
      },
      "subscription_billing_thresholds": {
        "description": "",
        "properties": {
          "amount_gte": {
            "description": "Monetary threshold that triggers the subscription to create an invoice",
            "nullable": true,
            "type": "integer"
          },
          "reset_billing_cycle_anchor": {
            "description": "Indicates if the `billing_cycle_anchor` should be reset when a threshold is reached. If true, `billing_cycle_anchor` will be updated to the date/time the threshold was last reached; otherwise, the value will remain unchanged. This value may not be `true` if the subscription contains items with plans that have `aggregate_usage=last_ever`.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "amount_gte",
          "reset_billing_cycle_anchor"
        ],
        "title": "SubscriptionBillingThresholds",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BillingThresholds",
          "in_class": "subscription"
        }
      },
      "subscription_item": {
        "description": "Subscription items allow you to create customer subscriptions with more than\none plan, making it easy to represent complex billing relationships.",
        "properties": {
          "billing_thresholds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_item_billing_thresholds"
              }
            ],
            "description": "Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period",
            "nullable": true
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "subscription_item"
            ],
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/plan"
          },
          "price": {
            "$ref": "#/components/schemas/price"
          },
          "quantity": {
            "description": "The [quantity](https://stripe.com/docs/subscriptions/quantities) of the plan to which the customer should be subscribed.",
            "type": "integer"
          },
          "subscription": {
            "description": "The `subscription` this `subscription_item` belongs to.",
            "maxLength": 5000,
            "type": "string"
          },
          "tax_rates": {
            "description": "The tax rates which apply to this `subscription_item`. When set, the `default_tax_rates` on the subscription do not apply to this `subscription_item`.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "billing_thresholds",
          "created",
          "id",
          "metadata",
          "object",
          "plan",
          "price",
          "subscription",
          "tax_rates"
        ],
        "title": "SubscriptionItem",
        "type": "object",
        "x-expandableFields": [
          "billing_thresholds",
          "plan",
          "price",
          "tax_rates"
        ],
        "x-resourceId": "subscription_item",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/subscription_items"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/subscription_items/{item}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/subscription_items"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/subscription_items/{item}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/subscription_items/{item}"
          },
          {
            "method_name": "usage_record_summaries",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/subscription_items/{subscription_item}/usage_record_summaries"
          }
        ],
        "x-stripeResource": {
          "class_name": "SubscriptionItem",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "subscription_item_billing_thresholds"
          ]
        }
      },
      "subscription_item_billing_thresholds": {
        "description": "",
        "properties": {
          "usage_gte": {
            "description": "Usage threshold that triggers the subscription to create an invoice",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "usage_gte"
        ],
        "title": "SubscriptionItemBillingThresholds",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BillingThresholds",
          "in_class": "subscription_item"
        }
      },
      "subscription_payment_method_options_card": {
        "description": "",
        "properties": {
          "mandate_options": {
            "$ref": "#/components/schemas/invoice_mandate_options_card"
          },
          "network": {
            "description": "Selected network to process this Subscription on. Depends on the available networks of the card attached to the Subscription. Can be only set confirm-time.",
            "enum": [
              "amex",
              "cartes_bancaires",
              "diners",
              "discover",
              "interac",
              "jcb",
              "mastercard",
              "unionpay",
              "unknown",
              "visa"
            ],
            "nullable": true,
            "type": "string"
          },
          "request_three_d_secure": {
            "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
            "enum": [
              "any",
              "automatic"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "network",
          "request_three_d_secure"
        ],
        "title": "subscription_payment_method_options_card",
        "type": "object",
        "x-expandableFields": [
          "mandate_options"
        ],
        "x-stripeResource": {
          "class_name": "Card",
          "in_class": "subscriptions_resource_payment_method_options",
          "inner_classes": [
            "invoice_mandate_options_card"
          ]
        }
      },
      "subscription_pending_invoice_item_interval": {
        "description": "",
        "properties": {
          "interval": {
            "description": "Specifies invoicing frequency. Either `day`, `week`, `month` or `year`.",
            "enum": [
              "day",
              "month",
              "week",
              "year"
            ],
            "type": "string"
          },
          "interval_count": {
            "description": "The number of intervals between invoices. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).",
            "type": "integer"
          }
        },
        "required": [
          "interval",
          "interval_count"
        ],
        "title": "SubscriptionPendingInvoiceItemInterval",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PendingInvoiceItemInterval",
          "in_class": "subscription"
        }
      },
      "subscription_schedule": {
        "description": "A subscription schedule allows you to create and manage the lifecycle of a subscription by predefining expected changes.\n\nRelated guide: [Subscription Schedules](https://stripe.com/docs/billing/subscriptions/subscription-schedules).",
        "properties": {
          "application": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/application"
              },
              {
                "$ref": "#/components/schemas/deleted_application"
              }
            ],
            "description": "ID of the Connect Application that created the schedule.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/application"
                },
                {
                  "$ref": "#/components/schemas/deleted_application"
                }
              ]
            }
          },
          "canceled_at": {
            "description": "Time at which the subscription schedule was canceled. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "completed_at": {
            "description": "Time at which the subscription schedule was completed. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "current_phase": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_schedule_current_phase"
              }
            ],
            "description": "Object representing the start and end dates for the current phase of the subscription schedule, if it is `active`.",
            "nullable": true
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              },
              {
                "$ref": "#/components/schemas/deleted_customer"
              }
            ],
            "description": "ID of the customer who owns the subscription schedule.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                },
                {
                  "$ref": "#/components/schemas/deleted_customer"
                }
              ]
            }
          },
          "default_settings": {
            "$ref": "#/components/schemas/subscription_schedules_resource_default_settings"
          },
          "end_behavior": {
            "description": "Behavior of the subscription schedule and underlying subscription when it ends. Possible values are `release` and `cancel`.",
            "enum": [
              "cancel",
              "none",
              "release",
              "renew"
            ],
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "subscription_schedule"
            ],
            "type": "string"
          },
          "phases": {
            "description": "Configuration for the subscription schedule's phases.",
            "items": {
              "$ref": "#/components/schemas/subscription_schedule_phase_configuration"
            },
            "type": "array"
          },
          "released_at": {
            "description": "Time at which the subscription schedule was released. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "released_subscription": {
            "description": "ID of the subscription once managed by the subscription schedule (if it is released).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "The present status of the subscription schedule. Possible values are `not_started`, `active`, `completed`, `released`, and `canceled`. You can read more about the different states in our [behavior guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).",
            "enum": [
              "active",
              "canceled",
              "completed",
              "not_started",
              "released"
            ],
            "type": "string"
          },
          "subscription": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/subscription"
              }
            ],
            "description": "ID of the subscription managed by the subscription schedule.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/subscription"
                }
              ]
            }
          },
          "test_clock": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/test_helpers.test_clock"
              }
            ],
            "description": "ID of the test clock this subscription schedule belongs to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/test_helpers.test_clock"
                }
              ]
            }
          }
        },
        "required": [
          "application",
          "canceled_at",
          "completed_at",
          "created",
          "current_phase",
          "customer",
          "default_settings",
          "end_behavior",
          "id",
          "livemode",
          "metadata",
          "object",
          "phases",
          "released_at",
          "released_subscription",
          "status",
          "subscription",
          "test_clock"
        ],
        "title": "SubscriptionSchedule",
        "type": "object",
        "x-expandableFields": [
          "application",
          "current_phase",
          "customer",
          "default_settings",
          "phases",
          "subscription",
          "test_clock"
        ],
        "x-resourceId": "subscription_schedule",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/subscription_schedules"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/subscription_schedules"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/subscription_schedules/{schedule}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/subscription_schedules/{schedule}"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/subscription_schedules/{schedule}/cancel"
          },
          {
            "method_name": "release",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/subscription_schedules/{schedule}/release"
          }
        ],
        "x-stripeResource": {
          "class_name": "SubscriptionSchedule",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "invoice_setting_subscription_schedule_setting",
            "subscription_schedule_add_invoice_item",
            "subscription_schedule_configuration_item",
            "subscription_schedule_current_phase",
            "subscription_schedule_phase_configuration",
            "subscription_schedules_resource_default_settings"
          ]
        }
      },
      "subscription_schedule_add_invoice_item": {
        "description": "An Add Invoice Item describes the prices and quantities that will be added as pending invoice items when entering a phase.",
        "properties": {
          "price": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/price"
              },
              {
                "$ref": "#/components/schemas/deleted_price"
              }
            ],
            "description": "ID of the price used to generate the invoice item.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/price"
                },
                {
                  "$ref": "#/components/schemas/deleted_price"
                }
              ]
            }
          },
          "quantity": {
            "description": "The quantity of the invoice item.",
            "nullable": true,
            "type": "integer"
          },
          "tax_rates": {
            "description": "The tax rates which apply to the item. When set, the `default_tax_rates` do not apply to this item.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "price",
          "quantity"
        ],
        "title": "SubscriptionScheduleAddInvoiceItem",
        "type": "object",
        "x-expandableFields": [
          "price",
          "tax_rates"
        ],
        "x-stripeResource": {
          "class_name": "AddInvoiceItem",
          "in_class": "subscription_schedule"
        }
      },
      "subscription_schedule_configuration_item": {
        "description": "A phase item describes the price and quantity of a phase.",
        "properties": {
          "billing_thresholds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_item_billing_thresholds"
              }
            ],
            "description": "Define thresholds at which an invoice will be sent, and the related subscription advanced to a new billing period",
            "nullable": true
          },
          "plan": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/plan"
              },
              {
                "$ref": "#/components/schemas/deleted_plan"
              }
            ],
            "description": "ID of the plan to which the customer should be subscribed.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/plan"
                },
                {
                  "$ref": "#/components/schemas/deleted_plan"
                }
              ]
            }
          },
          "price": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/price"
              },
              {
                "$ref": "#/components/schemas/deleted_price"
              }
            ],
            "description": "ID of the price to which the customer should be subscribed.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/price"
                },
                {
                  "$ref": "#/components/schemas/deleted_price"
                }
              ]
            }
          },
          "quantity": {
            "description": "Quantity of the plan to which the customer should be subscribed.",
            "type": "integer"
          },
          "tax_rates": {
            "description": "The tax rates which apply to this `phase_item`. When set, the `default_tax_rates` on the phase do not apply to this `phase_item`.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "required": [
          "billing_thresholds",
          "plan",
          "price"
        ],
        "title": "SubscriptionScheduleConfigurationItem",
        "type": "object",
        "x-expandableFields": [
          "billing_thresholds",
          "plan",
          "price",
          "tax_rates"
        ],
        "x-stripeResource": {
          "class_name": "PhaseItem",
          "in_class": "subscription_schedule"
        }
      },
      "subscription_schedule_current_phase": {
        "description": "",
        "properties": {
          "end_date": {
            "description": "The end of this phase of the subscription schedule.",
            "format": "unix-time",
            "type": "integer"
          },
          "start_date": {
            "description": "The start of this phase of the subscription schedule.",
            "format": "unix-time",
            "type": "integer"
          }
        },
        "required": [
          "end_date",
          "start_date"
        ],
        "title": "SubscriptionScheduleCurrentPhase",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CurrentPhase",
          "in_class": "subscription_schedule"
        }
      },
      "subscription_schedule_phase_configuration": {
        "description": "A phase describes the plans, coupon, and trialing status of a subscription for a predefined time period.",
        "properties": {
          "add_invoice_items": {
            "description": "A list of prices and quantities that will generate invoice items appended to the next invoice for this phase.",
            "items": {
              "$ref": "#/components/schemas/subscription_schedule_add_invoice_item"
            },
            "type": "array"
          },
          "application_fee_percent": {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account during this phase of the schedule.",
            "nullable": true,
            "type": "number"
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/schedules_phase_automatic_tax"
          },
          "billing_cycle_anchor": {
            "description": "Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).",
            "enum": [
              "automatic",
              "phase_start"
            ],
            "nullable": true,
            "type": "string"
          },
          "billing_thresholds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_billing_thresholds"
              }
            ],
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
            "nullable": true
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "nullable": true,
            "type": "string"
          },
          "coupon": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/coupon"
              },
              {
                "$ref": "#/components/schemas/deleted_coupon"
              }
            ],
            "description": "ID of the coupon to use during this phase of the subscription schedule.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/coupon"
                },
                {
                  "$ref": "#/components/schemas/deleted_coupon"
                }
              ]
            }
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "default_payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the default payment method for the subscription schedule. It must belong to the customer associated with the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "default_tax_rates": {
            "description": "The default tax rates to apply to the subscription during this phase of the subscription schedule.",
            "items": {
              "$ref": "#/components/schemas/tax_rate"
            },
            "nullable": true,
            "type": "array"
          },
          "description": {
            "description": "Subscription description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "end_date": {
            "description": "The end of this phase of the subscription schedule.",
            "format": "unix-time",
            "type": "integer"
          },
          "invoice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_setting_subscription_schedule_setting"
              }
            ],
            "description": "The invoice settings applicable during this phase.",
            "nullable": true
          },
          "items": {
            "description": "Subscription items to configure the subscription to during this phase of the subscription schedule.",
            "items": {
              "$ref": "#/components/schemas/subscription_schedule_configuration_item"
            },
            "type": "array"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to a phase. Metadata on a schedule's phase will update the underlying subscription's `metadata` when the phase is entered. Updating the underlying subscription's `metadata` directly will not affect the current phase's `metadata`.",
            "nullable": true,
            "type": "object"
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) the charge was made on behalf of for charges associated with the schedule's subscription. See the Connect documentation for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "proration_behavior": {
            "description": "If the subscription schedule will prorate when transitioning to this phase. Possible values are `create_prorations` and `none`.",
            "enum": [
              "always_invoice",
              "create_prorations",
              "none"
            ],
            "type": "string"
          },
          "start_date": {
            "description": "The start of this phase of the subscription schedule.",
            "format": "unix-time",
            "type": "integer"
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_transfer_data"
              }
            ],
            "description": "The account (if any) the associated subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
            "nullable": true
          },
          "trial_end": {
            "description": "When the trial ends within the phase.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "add_invoice_items",
          "application_fee_percent",
          "billing_cycle_anchor",
          "billing_thresholds",
          "collection_method",
          "coupon",
          "currency",
          "default_payment_method",
          "description",
          "end_date",
          "invoice_settings",
          "items",
          "metadata",
          "on_behalf_of",
          "proration_behavior",
          "start_date",
          "transfer_data",
          "trial_end"
        ],
        "title": "SubscriptionSchedulePhaseConfiguration",
        "type": "object",
        "x-expandableFields": [
          "add_invoice_items",
          "automatic_tax",
          "billing_thresholds",
          "coupon",
          "default_payment_method",
          "default_tax_rates",
          "invoice_settings",
          "items",
          "on_behalf_of",
          "transfer_data"
        ],
        "x-stripeResource": {
          "class_name": "Phase",
          "in_class": "subscription_schedule",
          "inner_classes": [
            "schedules_phase_automatic_tax"
          ]
        }
      },
      "subscription_schedules_resource_default_settings": {
        "description": "",
        "properties": {
          "application_fee_percent": {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner's Stripe account during this phase of the schedule.",
            "nullable": true,
            "type": "number"
          },
          "automatic_tax": {
            "$ref": "#/components/schemas/subscription_schedules_resource_default_settings_automatic_tax"
          },
          "billing_cycle_anchor": {
            "description": "Possible values are `phase_start` or `automatic`. If `phase_start` then billing cycle anchor of the subscription is set to the start of the phase when entering the phase. If `automatic` then the billing cycle anchor is automatically modified as needed when entering the phase. For more information, see the billing cycle [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).",
            "enum": [
              "automatic",
              "phase_start"
            ],
            "type": "string"
          },
          "billing_thresholds": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_billing_thresholds"
              }
            ],
            "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period",
            "nullable": true
          },
          "collection_method": {
            "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay the underlying subscription at the end of each billing cycle using the default source attached to the customer. When sending an invoice, Stripe will email your customer an invoice with payment instructions and mark the subscription as `active`.",
            "enum": [
              "charge_automatically",
              "send_invoice"
            ],
            "nullable": true,
            "type": "string"
          },
          "default_payment_method": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_method"
              }
            ],
            "description": "ID of the default payment method for the subscription schedule. If not set, invoices will use the default payment method in the customer's invoice settings.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_method"
                }
              ]
            }
          },
          "description": {
            "description": "Subscription description, meant to be displayable to the customer. Use this field to optionally store an explanation of the subscription.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "invoice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_setting_subscription_schedule_setting"
              }
            ],
            "description": "The subscription schedule's default invoice settings.",
            "nullable": true
          },
          "on_behalf_of": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) the charge was made on behalf of for charges associated with the schedule's subscription. See the Connect documentation for details.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "transfer_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_transfer_data"
              }
            ],
            "description": "The account (if any) the associated subscription's payments will be attributed to for tax reporting, and where funds from each payment will be transferred to for each of the subscription's invoices.",
            "nullable": true
          }
        },
        "required": [
          "application_fee_percent",
          "billing_cycle_anchor",
          "billing_thresholds",
          "collection_method",
          "default_payment_method",
          "description",
          "invoice_settings",
          "on_behalf_of",
          "transfer_data"
        ],
        "title": "SubscriptionSchedulesResourceDefaultSettings",
        "type": "object",
        "x-expandableFields": [
          "automatic_tax",
          "billing_thresholds",
          "default_payment_method",
          "invoice_settings",
          "on_behalf_of",
          "transfer_data"
        ],
        "x-stripeResource": {
          "class_name": "DefaultSettings",
          "in_class": "subscription_schedule",
          "inner_classes": [
            "subscription_schedules_resource_default_settings_automatic_tax"
          ]
        }
      },
      "subscription_schedules_resource_default_settings_automatic_tax": {
        "description": "",
        "properties": {
          "enabled": {
            "description": "Whether Stripe automatically computes tax on invoices created during this phase.",
            "type": "boolean"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "SubscriptionSchedulesResourceDefaultSettingsAutomaticTax",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "AutomaticTax",
          "in_class": "subscription_schedules_resource_default_settings"
        }
      },
      "subscription_transfer_data": {
        "description": "",
        "properties": {
          "amount_percent": {
            "description": "A non-negative decimal between 0 and 100, with at most two decimal places. This represents the percentage of the subscription invoice subtotal that will be transferred to the destination account. By default, the entire amount is transferred to the destination.",
            "nullable": true,
            "type": "number"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account where funds from the payment will be transferred to upon payment success.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          }
        },
        "required": [
          "amount_percent",
          "destination"
        ],
        "title": "SubscriptionTransferData",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ],
        "x-stripeResource": {
          "class_name": "TransferData",
          "in_class": "subscription"
        }
      },
      "subscriptions_resource_pause_collection": {
        "description": "The Pause Collection settings determine how we will pause collection for this subscription and for how long the subscription\nshould be paused.",
        "properties": {
          "behavior": {
            "description": "The payment collection behavior for this subscription while paused. One of `keep_as_draft`, `mark_uncollectible`, or `void`.",
            "enum": [
              "keep_as_draft",
              "mark_uncollectible",
              "void"
            ],
            "type": "string"
          },
          "resumes_at": {
            "description": "The time after which the subscription will resume collecting payments.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "behavior",
          "resumes_at"
        ],
        "title": "SubscriptionsResourcePauseCollection",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PauseCollection",
          "in_class": "subscription"
        }
      },
      "subscriptions_resource_payment_method_options": {
        "description": "",
        "properties": {
          "acss_debit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_acss_debit"
              }
            ],
            "description": "This sub-hash contains details about the Canadian pre-authorized debit payment method options to pass to invoices created by the subscription.",
            "nullable": true
          },
          "bancontact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_bancontact"
              }
            ],
            "description": "This sub-hash contains details about the Bancontact payment method options to pass to invoices created by the subscription.",
            "nullable": true
          },
          "card": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscription_payment_method_options_card"
              }
            ],
            "description": "This sub-hash contains details about the Card payment method options to pass to invoices created by the subscription.",
            "nullable": true
          },
          "customer_balance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_customer_balance"
              }
            ],
            "description": "This sub-hash contains details about the Bank transfer payment method options to pass to invoices created by the subscription.",
            "nullable": true
          },
          "konbini": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_konbini"
              }
            ],
            "description": "This sub-hash contains details about the Konbini payment method options to pass to invoices created by the subscription.",
            "nullable": true
          },
          "us_bank_account": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/invoice_payment_method_options_us_bank_account"
              }
            ],
            "description": "This sub-hash contains details about the ACH direct debit payment method options to pass to invoices created by the subscription.",
            "nullable": true
          }
        },
        "required": [
          "acss_debit",
          "bancontact",
          "card",
          "customer_balance",
          "konbini",
          "us_bank_account"
        ],
        "title": "SubscriptionsResourcePaymentMethodOptions",
        "type": "object",
        "x-expandableFields": [
          "acss_debit",
          "bancontact",
          "card",
          "customer_balance",
          "konbini",
          "us_bank_account"
        ],
        "x-stripeResource": {
          "class_name": "PaymentMethodOptions",
          "in_class": "subscription",
          "inner_classes": [
            "subscription_payment_method_options_card"
          ]
        }
      },
      "subscriptions_resource_payment_settings": {
        "description": "",
        "properties": {
          "payment_method_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/subscriptions_resource_payment_method_options"
              }
            ],
            "description": "Payment-method-specific configuration to provide to invoices created by the subscription.",
            "nullable": true
          },
          "payment_method_types": {
            "description": "The list of payment method types to provide to every invoice created by the subscription. If not set, Stripe attempts to automatically determine the types to use by looking at the invoice’s default payment method, the subscription’s default payment method, the customer’s default payment method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice).",
            "items": {
              "enum": [
                "ach_credit_transfer",
                "ach_debit",
                "acss_debit",
                "au_becs_debit",
                "bacs_debit",
                "bancontact",
                "boleto",
                "card",
                "customer_balance",
                "fpx",
                "giropay",
                "grabpay",
                "ideal",
                "konbini",
                "link",
                "paynow",
                "promptpay",
                "sepa_credit_transfer",
                "sepa_debit",
                "sofort",
                "us_bank_account",
                "wechat_pay"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "nullable": true,
            "type": "array"
          },
          "save_default_payment_method": {
            "description": "Either `off`, or `on_subscription`. With `on_subscription` Stripe updates `subscription.default_payment_method` when a subscription payment succeeds.",
            "enum": [
              "off",
              "on_subscription"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "payment_method_options",
          "payment_method_types",
          "save_default_payment_method"
        ],
        "title": "SubscriptionsResourcePaymentSettings",
        "type": "object",
        "x-expandableFields": [
          "payment_method_options"
        ],
        "x-stripeResource": {
          "class_name": "PaymentSettings",
          "in_class": "subscription"
        }
      },
      "subscriptions_resource_pending_update": {
        "description": "Pending Updates store the changes pending from a previous update that will be applied\nto the Subscription upon successful payment.",
        "properties": {
          "billing_cycle_anchor": {
            "description": "If the update is applied, determines the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. The timestamp is in UTC format.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "expires_at": {
            "description": "The point after which the changes reflected by this update will be discarded and no longer applied.",
            "format": "unix-time",
            "type": "integer"
          },
          "subscription_items": {
            "description": "List of subscription items, each with an attached plan, that will be set if the update is applied.",
            "items": {
              "$ref": "#/components/schemas/subscription_item"
            },
            "nullable": true,
            "type": "array"
          },
          "trial_end": {
            "description": "Unix timestamp representing the end of the trial period the customer will get before being charged for the first time, if the update is applied.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "trial_from_plan": {
            "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "nullable": true,
            "type": "boolean"
          }
        },
        "required": [
          "billing_cycle_anchor",
          "expires_at",
          "subscription_items",
          "trial_end",
          "trial_from_plan"
        ],
        "title": "SubscriptionsResourcePendingUpdate",
        "type": "object",
        "x-expandableFields": [
          "subscription_items"
        ],
        "x-stripeResource": {
          "class_name": "PendingUpdate",
          "in_class": "subscription"
        }
      },
      "tax_code": {
        "description": "[Tax codes](https://stripe.com/docs/tax/tax-categories) classify goods and services for tax purposes.",
        "properties": {
          "description": {
            "description": "A detailed description of which types of products the tax code represents.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "name": {
            "description": "A short name for the tax code.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "tax_code"
            ],
            "type": "string"
          }
        },
        "required": [
          "description",
          "id",
          "name",
          "object"
        ],
        "title": "TaxProductResourceTaxCode",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "tax_code",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/tax_codes"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/tax_codes/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "TaxCode",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "tax_deducted_at_source": {
        "description": "",
        "properties": {
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "tax_deducted_at_source"
            ],
            "type": "string"
          },
          "period_end": {
            "description": "The end of the invoicing period. This TDS applies to Stripe fees collected during this invoicing period.",
            "format": "unix-time",
            "type": "integer"
          },
          "period_start": {
            "description": "The start of the invoicing period. This TDS applies to Stripe fees collected during this invoicing period.",
            "format": "unix-time",
            "type": "integer"
          },
          "tax_deduction_account_number": {
            "description": "The TAN that was supplied to Stripe when TDS was assessed",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "id",
          "object",
          "period_end",
          "period_start",
          "tax_deduction_account_number"
        ],
        "title": "TaxDeductedAtSource",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "TaxDeductedAtSource",
          "in_package": "",
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "tax_id": {
        "description": "You can add one or multiple tax IDs to a [customer](https://stripe.com/docs/api/customers).\nA customer's tax IDs are displayed on invoices and credit notes issued for the customer.\n\nRelated guide: [Customer Tax Identification Numbers](https://stripe.com/docs/billing/taxes/tax-ids).",
        "properties": {
          "country": {
            "description": "Two-letter ISO code representing the country of the tax ID.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "customer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/customer"
              }
            ],
            "description": "ID of the customer.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/customer"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "tax_id"
            ],
            "type": "string"
          },
          "type": {
            "description": "Type of the tax ID, one of `ae_trn`, `au_abn`, `au_arn`, `bg_uic`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_vat`, `cl_tin`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `no_vat`, `nz_gst`, `ph_tin`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, or `za_vat`. Note that some legacy tax IDs have type `unknown`",
            "enum": [
              "ae_trn",
              "au_abn",
              "au_arn",
              "bg_uic",
              "br_cnpj",
              "br_cpf",
              "ca_bn",
              "ca_gst_hst",
              "ca_pst_bc",
              "ca_pst_mb",
              "ca_pst_sk",
              "ca_qst",
              "ch_vat",
              "cl_tin",
              "eg_tin",
              "es_cif",
              "eu_oss_vat",
              "eu_vat",
              "gb_vat",
              "ge_vat",
              "hk_br",
              "hu_tin",
              "id_npwp",
              "il_vat",
              "in_gst",
              "is_vat",
              "jp_cn",
              "jp_rn",
              "jp_trn",
              "ke_pin",
              "kr_brn",
              "li_uid",
              "mx_rfc",
              "my_frp",
              "my_itn",
              "my_sst",
              "no_vat",
              "nz_gst",
              "ph_tin",
              "ru_inn",
              "ru_kpp",
              "sa_vat",
              "sg_gst",
              "sg_uen",
              "si_tin",
              "th_vat",
              "tr_tin",
              "tw_vat",
              "ua_vat",
              "unknown",
              "us_ein",
              "za_vat"
            ],
            "type": "string"
          },
          "value": {
            "description": "Value of the tax ID.",
            "maxLength": 5000,
            "type": "string"
          },
          "verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/tax_id_verification"
              }
            ],
            "description": "Tax ID verification information.",
            "nullable": true
          }
        },
        "required": [
          "country",
          "created",
          "customer",
          "id",
          "livemode",
          "object",
          "type",
          "value",
          "verification"
        ],
        "title": "tax_id",
        "type": "object",
        "x-expandableFields": [
          "customer",
          "verification"
        ],
        "x-resourceId": "tax_id",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "collection",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/customers/{customer}/tax_ids"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/customers/{customer}/tax_ids"
          },
          {
            "method_name": "retrieve",
            "method_on": "collection",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/customers/{customer}/tax_ids/{id}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/customers/{customer}/tax_ids/{id}"
          },
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/customers/{customer}/tax_ids"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/customers/{customer}/tax_ids"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/customers/{customer}/tax_ids/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "TaxId",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "tax_id_verification"
          ]
        }
      },
      "tax_id_verification": {
        "description": "",
        "properties": {
          "status": {
            "description": "Verification status, one of `pending`, `verified`, `unverified`, or `unavailable`.",
            "enum": [
              "pending",
              "unavailable",
              "unverified",
              "verified"
            ],
            "type": "string"
          },
          "verified_address": {
            "description": "Verified address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "verified_name": {
            "description": "Verified name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "status",
          "verified_address",
          "verified_name"
        ],
        "title": "tax_id_verification",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Verification",
          "in_class": "tax_id"
        }
      },
      "tax_rate": {
        "description": "Tax rates can be applied to [invoices](https://stripe.com/docs/billing/invoices/tax-rates), [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and [Checkout Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates) to collect tax.\n\nRelated guide: [Tax Rates](https://stripe.com/docs/billing/taxes/tax-rates).",
        "properties": {
          "active": {
            "description": "Defaults to `true`. When set to `false`, this tax rate cannot be used with new applications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.",
            "type": "boolean"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "description": {
            "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "display_name": {
            "description": "The display name of the tax rates as it will appear to your customer on their receipt email, PDF, and the hosted invoice page.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "inclusive": {
            "description": "This specifies if the tax rate is inclusive or exclusive.",
            "type": "boolean"
          },
          "jurisdiction": {
            "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes. It also appears on your customer’s invoice.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "tax_rate"
            ],
            "type": "string"
          },
          "percentage": {
            "description": "This represents the tax rate percent out of 100.",
            "type": "number"
          },
          "state": {
            "description": "[ISO 3166-2 subdivision code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country prefix. For example, \"NY\" for New York, United States.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "tax_type": {
            "description": "The high-level tax type, such as `vat` or `sales_tax`.",
            "enum": [
              "gst",
              "hst",
              "jct",
              "pst",
              "qst",
              "rst",
              "sales_tax",
              "vat"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "active",
          "country",
          "created",
          "description",
          "display_name",
          "id",
          "inclusive",
          "jurisdiction",
          "livemode",
          "metadata",
          "object",
          "percentage",
          "state",
          "tax_type"
        ],
        "title": "TaxRate",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "tax_rate",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/tax_rates"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/tax_rates/{tax_rate}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/tax_rates"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/tax_rates/{tax_rate}"
          }
        ],
        "x-stripeResource": {
          "class_name": "TaxRate",
          "has_collection_class": true,
          "in_package": ""
        }
      },
      "terminal.configuration": {
        "description": "A Configurations object represents how features should be configured for terminal readers.",
        "properties": {
          "bbpos_wisepos_e": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_device_type_specific_config"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "is_account_default": {
            "description": "Whether this Configuration is the default for your account",
            "nullable": true,
            "type": "boolean"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "terminal.configuration"
            ],
            "type": "string"
          },
          "tipping": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_tipping"
          },
          "verifone_p400": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_device_type_specific_config"
          }
        },
        "required": [
          "id",
          "is_account_default",
          "livemode",
          "object"
        ],
        "title": "TerminalConfigurationConfiguration",
        "type": "object",
        "x-expandableFields": [
          "bbpos_wisepos_e",
          "tipping",
          "verifone_p400"
        ],
        "x-resourceId": "terminal.configuration",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/terminal/configurations"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/terminal/configurations"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/terminal/configurations/{configuration}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/terminal/configurations/{configuration}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/terminal/configurations/{configuration}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Configuration",
          "has_collection_class": true,
          "in_package": "Terminal",
          "inner_classes": [
            "terminal_configuration_configuration_resource_currency_specific_config",
            "terminal_configuration_configuration_resource_device_type_specific_config",
            "terminal_configuration_configuration_resource_tipping"
          ]
        }
      },
      "terminal.connection_token": {
        "description": "A Connection Token is used by the Stripe Terminal SDK to connect to a reader.\n\nRelated guide: [Fleet Management](https://stripe.com/docs/terminal/fleet/locations).",
        "properties": {
          "location": {
            "description": "The id of the location that this connection token is scoped to. Note that location scoping only applies to internet-connected readers. For more details, see [the docs on scoping connection tokens](https://stripe.com/docs/terminal/fleet/locations#connection-tokens).",
            "maxLength": 5000,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "terminal.connection_token"
            ],
            "type": "string"
          },
          "secret": {
            "description": "Your application should pass this token to the Stripe Terminal SDK.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "object",
          "secret"
        ],
        "title": "TerminalConnectionToken",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "terminal.connection_token",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/terminal/connection_tokens"
          }
        ],
        "x-stripeResource": {
          "class_name": "ConnectionToken",
          "in_package": "Terminal"
        }
      },
      "terminal.location": {
        "description": "A Location represents a grouping of readers.\n\nRelated guide: [Fleet Management](https://stripe.com/docs/terminal/fleet/locations).",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "configuration_overrides": {
            "description": "The ID of a configuration that will be used to customize all readers in this location.",
            "maxLength": 5000,
            "type": "string"
          },
          "display_name": {
            "description": "The display name of the location.",
            "maxLength": 5000,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "terminal.location"
            ],
            "type": "string"
          }
        },
        "required": [
          "address",
          "display_name",
          "id",
          "livemode",
          "metadata",
          "object"
        ],
        "title": "TerminalLocationLocation",
        "type": "object",
        "x-expandableFields": [
          "address"
        ],
        "x-resourceId": "terminal.location",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/terminal/locations/{location}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/terminal/locations"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/terminal/locations/{location}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/terminal/locations"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/terminal/locations/{location}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Location",
          "has_collection_class": true,
          "in_package": "Terminal"
        }
      },
      "terminal.reader": {
        "description": "A Reader represents a physical device for accepting payment details.\n\nRelated guide: [Connecting to a Reader](https://stripe.com/docs/terminal/payments/connect-reader).",
        "properties": {
          "action": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/terminal_reader_reader_resource_reader_action"
              }
            ],
            "description": "The most recent action performed by the reader.",
            "nullable": true
          },
          "device_sw_version": {
            "description": "The current software version of the reader.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "device_type": {
            "description": "Type of reader, one of `bbpos_wisepad3`, `stripe_m2`, `bbpos_chipper2x`, `bbpos_wisepos_e`, `verifone_P400`, or `simulated_wisepos_e`.",
            "enum": [
              "bbpos_chipper2x",
              "bbpos_wisepad3",
              "bbpos_wisepos_e",
              "simulated_wisepos_e",
              "stripe_m2",
              "verifone_P400"
            ],
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "ip_address": {
            "description": "The local IP address of the reader.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "label": {
            "description": "Custom label given to the reader for easier identification.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "location": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/terminal.location"
              }
            ],
            "description": "The location identifier of the reader.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/terminal.location"
                }
              ]
            }
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "terminal.reader"
            ],
            "type": "string"
          },
          "serial_number": {
            "description": "Serial number of the reader.",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "The networking status of the reader.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "action",
          "device_sw_version",
          "device_type",
          "id",
          "ip_address",
          "label",
          "livemode",
          "location",
          "metadata",
          "object",
          "serial_number",
          "status"
        ],
        "title": "TerminalReaderReader",
        "type": "object",
        "x-expandableFields": [
          "action",
          "location"
        ],
        "x-resourceId": "terminal.reader",
        "x-stripeOperations": [
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/terminal/readers/{reader}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/terminal/readers/{reader}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/terminal/readers"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/terminal/readers"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/terminal/readers/{reader}"
          },
          {
            "method_name": "process_payment_intent",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/terminal/readers/{reader}/process_payment_intent"
          },
          {
            "method_name": "process_setup_intent",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/terminal/readers/{reader}/process_setup_intent"
          },
          {
            "method_name": "cancel_action",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/terminal/readers/{reader}/cancel_action"
          },
          {
            "method_name": "set_reader_display",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/terminal/readers/{reader}/set_reader_display"
          },
          {
            "method_name": "present_payment_method",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/terminal/readers/{reader}/present_payment_method"
          }
        ],
        "x-stripeResource": {
          "class_name": "Reader",
          "has_collection_class": true,
          "in_package": "Terminal",
          "inner_classes": [
            "terminal_reader_reader_resource_reader_action"
          ]
        }
      },
      "terminal_configuration_configuration_resource_currency_specific_config": {
        "description": "",
        "properties": {
          "fixed_amounts": {
            "description": "Fixed amounts displayed when collecting a tip",
            "items": {
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "percentages": {
            "description": "Percentages displayed when collecting a tip",
            "items": {
              "type": "integer"
            },
            "nullable": true,
            "type": "array"
          },
          "smart_tip_threshold": {
            "description": "Below this amount, fixed amounts will be displayed; above it, percentages will be displayed",
            "type": "integer"
          }
        },
        "title": "TerminalConfigurationConfigurationResourceCurrencySpecificConfig",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "CurrencySpecificConfig",
          "in_class": "terminal.configuration"
        }
      },
      "terminal_configuration_configuration_resource_device_type_specific_config": {
        "description": "",
        "properties": {
          "splashscreen": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/file"
              }
            ],
            "description": "A File ID representing an image you would like displayed on the reader.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/file"
                }
              ]
            }
          }
        },
        "title": "TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig",
        "type": "object",
        "x-expandableFields": [
          "splashscreen"
        ],
        "x-stripeResource": {
          "class_name": "DeviceTypeSpecificConfig",
          "in_class": "terminal.configuration"
        }
      },
      "terminal_configuration_configuration_resource_tipping": {
        "description": "",
        "properties": {
          "aud": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "cad": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "chf": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "czk": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "dkk": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "eur": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "gbp": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "hkd": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "myr": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "nok": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "nzd": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "sek": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "sgd": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          },
          "usd": {
            "$ref": "#/components/schemas/terminal_configuration_configuration_resource_currency_specific_config"
          }
        },
        "title": "TerminalConfigurationConfigurationResourceTipping",
        "type": "object",
        "x-expandableFields": [
          "aud",
          "cad",
          "chf",
          "czk",
          "dkk",
          "eur",
          "gbp",
          "hkd",
          "myr",
          "nok",
          "nzd",
          "sek",
          "sgd",
          "usd"
        ],
        "x-stripeResource": {
          "class_name": "Tipping",
          "in_class": "terminal.configuration"
        }
      },
      "terminal_reader_reader_resource_cart": {
        "description": "Represents a cart to be displayed on the reader",
        "properties": {
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "line_items": {
            "description": "List of line items in the cart.",
            "items": {
              "$ref": "#/components/schemas/terminal_reader_reader_resource_line_item"
            },
            "type": "array"
          },
          "tax": {
            "description": "Tax amount for the entire cart. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "nullable": true,
            "type": "integer"
          },
          "total": {
            "description": "Total amount for the entire cart, including tax. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          }
        },
        "required": [
          "currency",
          "line_items",
          "tax",
          "total"
        ],
        "title": "TerminalReaderReaderResourceCart",
        "type": "object",
        "x-expandableFields": [
          "line_items"
        ],
        "x-stripeResource": {
          "class_name": "Cart",
          "in_class": "terminal_reader_reader_resource_set_reader_display_action",
          "inner_classes": [
            "terminal_reader_reader_resource_line_item"
          ]
        }
      },
      "terminal_reader_reader_resource_line_item": {
        "description": "Represents a line item to be displayed on the reader",
        "properties": {
          "amount": {
            "description": "The amount of the line item. A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal).",
            "type": "integer"
          },
          "description": {
            "description": "Description of the line item.",
            "maxLength": 5000,
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of the line item.",
            "type": "integer"
          }
        },
        "required": [
          "amount",
          "description",
          "quantity"
        ],
        "title": "TerminalReaderReaderResourceLineItem",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "LineItem",
          "in_class": "terminal_reader_reader_resource_cart"
        }
      },
      "terminal_reader_reader_resource_process_config": {
        "description": "Represents a per-transaction override of a reader configuration",
        "properties": {
          "skip_tipping": {
            "description": "Override showing a tipping selection screen on this transaction.",
            "type": "boolean"
          },
          "tipping": {
            "$ref": "#/components/schemas/terminal_reader_reader_resource_tipping_config"
          }
        },
        "title": "TerminalReaderReaderResourceProcessConfig",
        "type": "object",
        "x-expandableFields": [
          "tipping"
        ],
        "x-stripeResource": {
          "class_name": "ProcessConfig",
          "in_class": "terminal_reader_reader_resource_process_payment_intent_action"
        }
      },
      "terminal_reader_reader_resource_process_payment_intent_action": {
        "description": "Represents a reader action to process a payment intent",
        "properties": {
          "payment_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/payment_intent"
              }
            ],
            "description": "Most recent PaymentIntent processed by the reader.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/payment_intent"
                }
              ]
            }
          },
          "process_config": {
            "$ref": "#/components/schemas/terminal_reader_reader_resource_process_config"
          }
        },
        "required": [
          "payment_intent"
        ],
        "title": "TerminalReaderReaderResourceProcessPaymentIntentAction",
        "type": "object",
        "x-expandableFields": [
          "payment_intent",
          "process_config"
        ],
        "x-stripeResource": {
          "class_name": "ProcessPaymentIntentAction",
          "in_class": "terminal_reader_reader_resource_reader_action",
          "inner_classes": [
            "terminal_reader_reader_resource_process_config",
            "terminal_reader_reader_resource_tipping_config"
          ]
        }
      },
      "terminal_reader_reader_resource_process_setup_intent_action": {
        "description": "Represents a reader action to process a setup intent",
        "properties": {
          "generated_card": {
            "description": "ID of a card PaymentMethod generated from the card_present PaymentMethod that may be attached to a Customer for future transactions. Only present if it was possible to generate a card PaymentMethod.",
            "maxLength": 5000,
            "type": "string"
          },
          "setup_intent": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/setup_intent"
              }
            ],
            "description": "Most recent SetupIntent processed by the reader.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/setup_intent"
                }
              ]
            }
          }
        },
        "required": [
          "setup_intent"
        ],
        "title": "TerminalReaderReaderResourceProcessSetupIntentAction",
        "type": "object",
        "x-expandableFields": [
          "setup_intent"
        ],
        "x-stripeResource": {
          "class_name": "ProcessSetupIntentAction",
          "in_class": "terminal_reader_reader_resource_reader_action"
        }
      },
      "terminal_reader_reader_resource_reader_action": {
        "description": "Represents an action performed by the reader",
        "properties": {
          "failure_code": {
            "description": "Failure code, only set if status is `failed`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "failure_message": {
            "description": "Detailed failure message, only set if status is `failed`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "process_payment_intent": {
            "$ref": "#/components/schemas/terminal_reader_reader_resource_process_payment_intent_action"
          },
          "process_setup_intent": {
            "$ref": "#/components/schemas/terminal_reader_reader_resource_process_setup_intent_action"
          },
          "set_reader_display": {
            "$ref": "#/components/schemas/terminal_reader_reader_resource_set_reader_display_action"
          },
          "status": {
            "description": "Status of the action performed by the reader.",
            "enum": [
              "failed",
              "in_progress",
              "succeeded"
            ],
            "type": "string"
          },
          "type": {
            "description": "Type of action performed by the reader.",
            "enum": [
              "process_payment_intent",
              "process_setup_intent",
              "set_reader_display"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "failure_code",
          "failure_message",
          "status",
          "type"
        ],
        "title": "TerminalReaderReaderResourceReaderAction",
        "type": "object",
        "x-expandableFields": [
          "process_payment_intent",
          "process_setup_intent",
          "set_reader_display"
        ],
        "x-stripeResource": {
          "class_name": "ReaderAction",
          "in_class": "terminal.reader",
          "inner_classes": [
            "terminal_reader_reader_resource_process_payment_intent_action",
            "terminal_reader_reader_resource_process_setup_intent_action",
            "terminal_reader_reader_resource_set_reader_display_action"
          ]
        }
      },
      "terminal_reader_reader_resource_set_reader_display_action": {
        "description": "Represents a reader action to set the reader display",
        "properties": {
          "cart": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/terminal_reader_reader_resource_cart"
              }
            ],
            "description": "Cart object to be displayed by the reader.",
            "nullable": true
          },
          "type": {
            "description": "Type of information to be displayed by the reader.",
            "enum": [
              "cart"
            ],
            "type": "string"
          }
        },
        "required": [
          "cart",
          "type"
        ],
        "title": "TerminalReaderReaderResourceSetReaderDisplayAction",
        "type": "object",
        "x-expandableFields": [
          "cart"
        ],
        "x-stripeResource": {
          "class_name": "SetReaderDisplayAction",
          "in_class": "terminal_reader_reader_resource_reader_action",
          "inner_classes": [
            "terminal_reader_reader_resource_cart"
          ]
        }
      },
      "terminal_reader_reader_resource_tipping_config": {
        "description": "Represents a per-transaction tipping configuration",
        "properties": {
          "amount_eligible": {
            "description": "Amount used to calculate tip suggestions on tipping selection screen for this transaction. Must be a positive integer in the smallest currency unit (e.g., 100 cents to represent $1.00 or 100 to represent ¥100, a zero-decimal currency).",
            "type": "integer"
          }
        },
        "title": "TerminalReaderReaderResourceTippingConfig",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "TippingConfig",
          "in_class": "terminal_reader_reader_resource_process_payment_intent_action"
        }
      },
      "test_helpers.test_clock": {
        "description": "A test clock enables deterministic control over objects in testmode. With a test clock, you can create\nobjects at a frozen time in the past or future, and advance to a specific future time to observe webhooks and state changes. After the clock advances,\nyou can either validate the current state of your scenario (and test your assumptions), change the current state of your scenario (and test more complex scenarios), or keep advancing forward in time.",
        "properties": {
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "deletes_after": {
            "description": "Time at which this clock is scheduled to auto delete.",
            "format": "unix-time",
            "type": "integer"
          },
          "frozen_time": {
            "description": "Time at which all objects belonging to this clock are frozen.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "name": {
            "description": "The custom name supplied at creation.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "test_helpers.test_clock"
            ],
            "type": "string"
          },
          "status": {
            "description": "The status of the Test Clock.",
            "enum": [
              "advancing",
              "internal_failure",
              "ready"
            ],
            "type": "string"
          }
        },
        "required": [
          "created",
          "deletes_after",
          "frozen_time",
          "id",
          "livemode",
          "name",
          "object",
          "status"
        ],
        "title": "TestClock",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "test_helpers.test_clock",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/test_helpers/test_clocks/{test_clock}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/test_helpers/test_clocks"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/test_helpers/test_clocks/{test_clock}"
          },
          {
            "method_name": "advance",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/test_clocks/{test_clock}/advance"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/test_helpers/test_clocks"
          }
        ],
        "x-stripeResource": {
          "class_name": "TestClock",
          "has_collection_class": true,
          "in_package": "TestHelpers"
        }
      },
      "three_d_secure_details": {
        "description": "",
        "properties": {
          "authentication_flow": {
            "description": "For authenticated transactions: how the customer was authenticated by\nthe issuing bank.",
            "enum": [
              "challenge",
              "frictionless"
            ],
            "nullable": true,
            "type": "string"
          },
          "result": {
            "description": "Indicates the outcome of 3D Secure authentication.",
            "enum": [
              "attempt_acknowledged",
              "authenticated",
              "exempted",
              "failed",
              "not_supported",
              "processing_error"
            ],
            "nullable": true,
            "type": "string"
          },
          "result_reason": {
            "description": "Additional information about why 3D Secure succeeded or failed based\non the `result`.",
            "enum": [
              "abandoned",
              "bypassed",
              "canceled",
              "card_not_enrolled",
              "network_not_supported",
              "protocol_error",
              "rejected"
            ],
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "The version of 3D Secure that was used.",
            "enum": [
              "1.0.2",
              "2.1.0",
              "2.2.0"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "authentication_flow",
          "result",
          "result_reason",
          "version"
        ],
        "title": "three_d_secure_details",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ThreeDSecure",
          "in_class": "payment_method_details_card"
        }
      },
      "three_d_secure_usage": {
        "description": "",
        "properties": {
          "supported": {
            "description": "Whether 3D Secure is supported on this card.",
            "type": "boolean"
          }
        },
        "required": [
          "supported"
        ],
        "title": "three_d_secure_usage",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ThreeDSecureUsage",
          "in_class": "payment_method_card"
        }
      },
      "token": {
        "description": "Tokenization is the process Stripe uses to collect sensitive card or bank\naccount details, or personally identifiable information (PII), directly from\nyour customers in a secure manner. A token representing this information is\nreturned to your server to use. You should use our\n[recommended payments integrations](https://stripe.com/docs/payments) to perform this process\nclient-side. This ensures that no sensitive card data touches your server,\nand allows your integration to operate in a PCI-compliant way.\n\nIf you cannot use client-side tokenization, you can also create tokens using\nthe API with either your publishable or secret API key. Keep in mind that if\nyour integration uses this method, you are responsible for any PCI compliance\nthat may be required, and you must keep your secret API key safe. Unlike with\nclient-side tokenization, your customer's information is not sent directly to\nStripe, so we cannot determine how it is handled or stored.\n\nTokens cannot be stored or used more than once. To store card or bank account\ninformation for later use, you can create [Customer](https://stripe.com/docs/api#customers)\nobjects or [Custom accounts](https://stripe.com/docs/api#external_accounts). Note that\n[Radar](https://stripe.com/docs/radar), our integrated solution for automatic fraud protection,\nperforms best with integrations that use client-side tokenization.\n\nRelated guide: [Accept a payment](https://stripe.com/docs/payments/accept-a-payment-charges#web-create-token)",
        "properties": {
          "bank_account": {
            "$ref": "#/components/schemas/bank_account"
          },
          "card": {
            "$ref": "#/components/schemas/card"
          },
          "client_ip": {
            "description": "IP address of the client that generated the token.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "token"
            ],
            "type": "string"
          },
          "type": {
            "description": "Type of the token: `account`, `bank_account`, `card`, or `pii`.",
            "maxLength": 5000,
            "type": "string"
          },
          "used": {
            "description": "Whether this token has already been used (tokens can be used only once).",
            "type": "boolean"
          }
        },
        "required": [
          "client_ip",
          "created",
          "id",
          "livemode",
          "object",
          "type",
          "used"
        ],
        "title": "Token",
        "type": "object",
        "x-expandableFields": [
          "bank_account",
          "card"
        ],
        "x-resourceId": "token",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/tokens/{token}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/tokens"
          }
        ],
        "x-stripeResource": {
          "class_name": "Token",
          "in_package": ""
        }
      },
      "topup": {
        "description": "To top up your Stripe balance, you create a top-up object. You can retrieve\nindividual top-ups, as well as list all top-ups. Top-ups are identified by a\nunique, random ID.\n\nRelated guide: [Topping Up your Platform Account](https://stripe.com/docs/connect/top-ups).",
        "properties": {
          "amount": {
            "description": "Amount transferred.",
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "ID of the balance transaction that describes the impact of this top-up on your account balance. May not be specified depending on status of top-up.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "maxLength": 5000,
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "expected_availability_date": {
            "description": "Date the funds are expected to arrive in your Stripe account for payouts. This factors in delays like weekends or bank holidays. May not be specified depending on status of top-up.",
            "nullable": true,
            "type": "integer"
          },
          "failure_code": {
            "description": "Error code explaining reason for top-up failure if available (see [the errors section](https://stripe.com/docs/api#errors) for a list of codes).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "failure_message": {
            "description": "Message to user further explaining reason for top-up failure if available.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "topup"
            ],
            "type": "string"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/source"
              }
            ],
            "description": "For most Stripe users, the source of every top-up is a bank account. This hash is then the [source object](https://stripe.com/docs/api#source_object) describing that bank account.",
            "nullable": true
          },
          "statement_descriptor": {
            "description": "Extra information about a top-up. This will appear on your source's bank statement. It must contain at least one letter.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the top-up is either `canceled`, `failed`, `pending`, `reversed`, or `succeeded`.",
            "enum": [
              "canceled",
              "failed",
              "pending",
              "reversed",
              "succeeded"
            ],
            "type": "string"
          },
          "transfer_group": {
            "description": "A string that identifies this top-up as part of a group.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "balance_transaction",
          "created",
          "currency",
          "description",
          "expected_availability_date",
          "failure_code",
          "failure_message",
          "id",
          "livemode",
          "metadata",
          "object",
          "source",
          "statement_descriptor",
          "status",
          "transfer_group"
        ],
        "title": "Topup",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "source"
        ],
        "x-resourceId": "topup",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/topups"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/topups"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/topups/{topup}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/topups/{topup}"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/topups/{topup}/cancel"
          }
        ],
        "x-stripeResource": {
          "class_name": "Topup",
          "has_collection_class": true,
          "in_package": "",
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "transfer": {
        "description": "A `Transfer` object is created when you move funds between Stripe accounts as\npart of Connect.\n\nBefore April 6, 2017, transfers also represented movement of funds from a\nStripe account to a card or bank account. This behavior has since been split\nout into a [Payout](https://stripe.com/docs/api#payout_object) object, with corresponding payout endpoints. For more\ninformation, read about the\n[transfer/payout split](https://stripe.com/docs/transfer-payout-split).\n\nRelated guide: [Creating Separate Charges and Transfers](https://stripe.com/docs/connect/charges-transfers).",
        "properties": {
          "amount": {
            "description": "Amount in %s to be transferred.",
            "type": "integer"
          },
          "amount_reversed": {
            "description": "Amount in %s reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).",
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "Balance transaction that describes the impact of this transfer on your account balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "created": {
            "description": "Time that this record of the transfer was first created.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "ID of the Stripe account the transfer was sent to.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          },
          "destination_payment": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "transfer"
            ],
            "type": "string"
          },
          "reversals": {
            "description": "A list of reversals that have been applied to the transfer.",
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/transfer_reversal"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "TransferReversalList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "reversed": {
            "description": "Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false.",
            "type": "boolean"
          },
          "source_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/charge"
              }
            ],
            "description": "ID of the charge or payment that was used to fund the transfer. If null, the transfer was funded from the available balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/charge"
                }
              ]
            }
          },
          "source_type": {
            "description": "The source balance this transfer came from. One of `card`, `fpx`, or `bank_account`.",
            "maxLength": 5000,
            "type": "string"
          },
          "transfer_group": {
            "description": "A string that identifies this transaction as part of a group. See the [Connect documentation](https://stripe.com/docs/connect/charges-transfers#transfer-options) for details.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "amount",
          "amount_reversed",
          "balance_transaction",
          "created",
          "currency",
          "description",
          "destination",
          "id",
          "livemode",
          "metadata",
          "object",
          "reversals",
          "reversed",
          "source_transaction",
          "transfer_group"
        ],
        "title": "Transfer",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "destination",
          "destination_payment",
          "reversals",
          "source_transaction"
        ],
        "x-resourceId": "transfer",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/transfers"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/transfers"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/transfers/{transfer}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/transfers/{transfer}"
          }
        ],
        "x-stripeResource": {
          "class_name": "Transfer",
          "has_collection_class": true,
          "in_package": "",
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "transfer_data": {
        "description": "",
        "properties": {
          "amount": {
            "description": "Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).",
            "type": "integer"
          },
          "destination": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/account"
              }
            ],
            "description": "The account (if any) the payment will be attributed to for tax\nreporting, and where funds from the payment will be transferred to upon\npayment success.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/account"
                }
              ]
            }
          }
        },
        "required": [
          "destination"
        ],
        "title": "transfer_data",
        "type": "object",
        "x-expandableFields": [
          "destination"
        ],
        "x-stripeResource": {
          "class_name": "TransferData",
          "in_class": "payment_intent"
        }
      },
      "transfer_reversal": {
        "description": "[Stripe Connect](https://stripe.com/docs/connect) platforms can reverse transfers made to a\nconnected account, either entirely or partially, and can also specify whether\nto refund any related application fees. Transfer reversals add to the\nplatform's balance and subtract from the destination account's balance.\n\nReversing a transfer that was made for a [destination\ncharge](/docs/connect/destination-charges) is allowed only up to the amount of\nthe charge. It is possible to reverse a\n[transfer_group](https://stripe.com/docs/connect/charges-transfers#transfer-options)\ntransfer only if the destination account has enough balance to cover the\nreversal.\n\nRelated guide: [Reversing Transfers](https://stripe.com/docs/connect/charges-transfers#reversing-transfers).",
        "properties": {
          "amount": {
            "description": "Amount, in %s.",
            "type": "integer"
          },
          "balance_transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/balance_transaction"
              }
            ],
            "description": "Balance transaction that describes the impact on your account balance.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/balance_transaction"
                }
              ]
            }
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "destination_payment_refund": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/refund"
              }
            ],
            "description": "Linked payment refund for the transfer reversal.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/refund"
                }
              ]
            }
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "transfer_reversal"
            ],
            "type": "string"
          },
          "source_refund": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/refund"
              }
            ],
            "description": "ID of the refund responsible for the transfer reversal.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/refund"
                }
              ]
            }
          },
          "transfer": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/transfer"
              }
            ],
            "description": "ID of the transfer that was reversed.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/transfer"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "balance_transaction",
          "created",
          "currency",
          "destination_payment_refund",
          "id",
          "metadata",
          "object",
          "source_refund",
          "transfer"
        ],
        "title": "TransferReversal",
        "type": "object",
        "x-expandableFields": [
          "balance_transaction",
          "destination_payment_refund",
          "source_refund",
          "transfer"
        ],
        "x-resourceId": "transfer_reversal",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "collection",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/transfers/{id}/reversals"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/transfers/{id}/reversals"
          },
          {
            "method_name": "list",
            "method_on": "collection",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/transfers/{id}/reversals"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/transfers/{id}/reversals"
          },
          {
            "method_name": "retrieve",
            "method_on": "collection",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/transfers/{transfer}/reversals/{id}"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/transfers/{transfer}/reversals/{id}"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/transfers/{transfer}/reversals/{id}"
          }
        ],
        "x-stripeResource": {
          "class_name": "TransferReversal",
          "has_collection_class": true,
          "in_package": "",
          "polymorphic_groups": [
            "balance_transaction_source"
          ]
        }
      },
      "transfer_schedule": {
        "description": "",
        "properties": {
          "delay_days": {
            "description": "The number of days charges for the account will be held before being paid out.",
            "type": "integer"
          },
          "interval": {
            "description": "How frequently funds will be paid out. One of `manual` (payouts only created via API call), `daily`, `weekly`, or `monthly`.",
            "maxLength": 5000,
            "type": "string"
          },
          "monthly_anchor": {
            "description": "The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.",
            "type": "integer"
          },
          "weekly_anchor": {
            "description": "The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "delay_days",
          "interval"
        ],
        "title": "TransferSchedule",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PayoutSchedule",
          "in_class": "account"
        }
      },
      "transform_quantity": {
        "description": "",
        "properties": {
          "divide_by": {
            "description": "Divide usage by this number.",
            "type": "integer"
          },
          "round": {
            "description": "After division, either round the result `up` or `down`.",
            "enum": [
              "down",
              "up"
            ],
            "type": "string"
          }
        },
        "required": [
          "divide_by",
          "round"
        ],
        "title": "TransformQuantity",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "TransformQuantity",
          "in_class": "price"
        }
      },
      "transform_usage": {
        "description": "",
        "properties": {
          "divide_by": {
            "description": "Divide usage by this number.",
            "type": "integer"
          },
          "round": {
            "description": "After division, either round the result `up` or `down`.",
            "enum": [
              "down",
              "up"
            ],
            "type": "string"
          }
        },
        "required": [
          "divide_by",
          "round"
        ],
        "title": "TransformUsage",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "TransformUsage",
          "in_class": "plan"
        }
      },
      "treasury.credit_reversal": {
        "description": "You can reverse some [ReceivedCredits](https://stripe.com/docs/api#received_credits) depending on their network and source flow. Reversing a ReceivedCredit leads to the creation of a new object known as a CreditReversal.",
        "properties": {
          "amount": {
            "description": "Amount (in cents) transferred.",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "financial_account": {
            "description": "The FinancialAccount to reverse funds from.",
            "maxLength": 5000,
            "type": "string"
          },
          "hosted_regulatory_receipt_url": {
            "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "network": {
            "description": "The rails used to reverse the funds.",
            "enum": [
              "ach",
              "stripe"
            ],
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.credit_reversal"
            ],
            "type": "string"
          },
          "received_credit": {
            "description": "The ReceivedCredit being reversed.",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "Status of the CreditReversal",
            "enum": [
              "canceled",
              "posted",
              "processing"
            ],
            "type": "string"
          },
          "status_transitions": {
            "$ref": "#/components/schemas/treasury_received_credits_resource_status_transitions"
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/treasury.transaction"
              }
            ],
            "description": "The Transaction associated with this object.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "financial_account",
          "hosted_regulatory_receipt_url",
          "id",
          "livemode",
          "metadata",
          "network",
          "object",
          "received_credit",
          "status",
          "status_transitions",
          "transaction"
        ],
        "title": "TreasuryReceivedCreditsResourceCreditReversal",
        "type": "object",
        "x-expandableFields": [
          "status_transitions",
          "transaction"
        ],
        "x-resourceId": "treasury.credit_reversal",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/treasury/credit_reversals"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/treasury/credit_reversals/{credit_reversal}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/treasury/credit_reversals"
          }
        ],
        "x-stripeResource": {
          "class_name": "CreditReversal",
          "has_collection_class": true,
          "in_package": "Treasury"
        }
      },
      "treasury.debit_reversal": {
        "description": "You can reverse some [ReceivedDebits](https://stripe.com/docs/api#received_debits) depending on their network and source flow. Reversing a ReceivedDebit leads to the creation of a new object known as a DebitReversal.",
        "properties": {
          "amount": {
            "description": "Amount (in cents) transferred.",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "financial_account": {
            "description": "The FinancialAccount to reverse funds from.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "hosted_regulatory_receipt_url": {
            "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "linked_flows": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_received_debits_resource_debit_reversal_linked_flows"
              }
            ],
            "description": "Other flows linked to a DebitReversal.",
            "nullable": true
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "network": {
            "description": "The rails used to reverse the funds.",
            "enum": [
              "ach",
              "card"
            ],
            "type": "string"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.debit_reversal"
            ],
            "type": "string"
          },
          "received_debit": {
            "description": "The ReceivedDebit being reversed.",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "Status of the DebitReversal",
            "enum": [
              "failed",
              "processing",
              "succeeded"
            ],
            "type": "string"
          },
          "status_transitions": {
            "$ref": "#/components/schemas/treasury_received_debits_resource_status_transitions"
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/treasury.transaction"
              }
            ],
            "description": "The Transaction associated with this object.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "financial_account",
          "hosted_regulatory_receipt_url",
          "id",
          "linked_flows",
          "livemode",
          "metadata",
          "network",
          "object",
          "received_debit",
          "status",
          "status_transitions",
          "transaction"
        ],
        "title": "TreasuryReceivedDebitsResourceDebitReversal",
        "type": "object",
        "x-expandableFields": [
          "linked_flows",
          "status_transitions",
          "transaction"
        ],
        "x-resourceId": "treasury.debit_reversal",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/treasury/debit_reversals"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/treasury/debit_reversals/{debit_reversal}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/treasury/debit_reversals"
          }
        ],
        "x-stripeResource": {
          "class_name": "DebitReversal",
          "has_collection_class": true,
          "in_package": "Treasury",
          "inner_classes": [
            "treasury_received_debits_resource_debit_reversal_linked_flows"
          ]
        }
      },
      "treasury.financial_account": {
        "description": "Stripe Treasury provides users with a container for money called a FinancialAccount that is separate from their Payments balance.\nFinancialAccounts serve as the source and destination of Treasury’s money movement APIs.",
        "properties": {
          "active_features": {
            "description": "The array of paths to active Features in the Features hash.",
            "items": {
              "enum": [
                "card_issuing",
                "deposit_insurance",
                "financial_addresses.aba",
                "inbound_transfers.ach",
                "intra_stripe_flows",
                "outbound_payments.ach",
                "outbound_payments.us_domestic_wire",
                "outbound_transfers.ach",
                "outbound_transfers.us_domestic_wire",
                "remote_deposit_capture"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          },
          "balance": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_balance"
          },
          "country": {
            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
            "maxLength": 5000,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "features": {
            "$ref": "#/components/schemas/treasury.financial_account_features"
          },
          "financial_addresses": {
            "description": "The set of credentials that resolve to a FinancialAccount.",
            "items": {
              "$ref": "#/components/schemas/treasury_financial_accounts_resource_financial_address"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "nullable": true,
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.financial_account"
            ],
            "type": "string"
          },
          "pending_features": {
            "description": "The array of paths to pending Features in the Features hash.",
            "items": {
              "enum": [
                "card_issuing",
                "deposit_insurance",
                "financial_addresses.aba",
                "inbound_transfers.ach",
                "intra_stripe_flows",
                "outbound_payments.ach",
                "outbound_payments.us_domestic_wire",
                "outbound_transfers.ach",
                "outbound_transfers.us_domestic_wire",
                "remote_deposit_capture"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          },
          "platform_restrictions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_financial_accounts_resource_platform_restrictions"
              }
            ],
            "description": "The set of functionalities that the platform can restrict on the FinancialAccount.",
            "nullable": true
          },
          "restricted_features": {
            "description": "The array of paths to restricted Features in the Features hash.",
            "items": {
              "enum": [
                "card_issuing",
                "deposit_insurance",
                "financial_addresses.aba",
                "inbound_transfers.ach",
                "intra_stripe_flows",
                "outbound_payments.ach",
                "outbound_payments.us_domestic_wire",
                "outbound_transfers.ach",
                "outbound_transfers.us_domestic_wire",
                "remote_deposit_capture"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          },
          "status": {
            "description": "The enum specifying what state the account is in.",
            "enum": [
              "closed",
              "open"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "status_details": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_status_details"
          },
          "supported_currencies": {
            "description": "The currencies the FinancialAccount can hold a balance in. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "balance",
          "country",
          "created",
          "financial_addresses",
          "id",
          "livemode",
          "metadata",
          "object",
          "status",
          "status_details",
          "supported_currencies"
        ],
        "title": "TreasuryFinancialAccountsResourceFinancialAccount",
        "type": "object",
        "x-expandableFields": [
          "balance",
          "features",
          "financial_addresses",
          "platform_restrictions",
          "status_details"
        ],
        "x-resourceId": "treasury.financial_account",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/treasury/financial_accounts"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/treasury/financial_accounts/{financial_account}"
          },
          {
            "method_name": "update_features",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/treasury/financial_accounts/{financial_account}/features"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/treasury/financial_accounts"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/treasury/financial_accounts/{financial_account}"
          },
          {
            "method_name": "retrieve_features",
            "method_on": "service",
            "method_type": "custom",
            "operation": "get",
            "path": "/v1/treasury/financial_accounts/{financial_account}/features"
          }
        ],
        "x-stripeResource": {
          "class_name": "FinancialAccount",
          "has_collection_class": true,
          "in_package": "Treasury",
          "inner_classes": [
            "treasury_financial_accounts_resource_ach_toggle_settings",
            "treasury_financial_accounts_resource_balance",
            "treasury_financial_accounts_resource_financial_address",
            "treasury_financial_accounts_resource_status_details",
            "treasury_financial_accounts_resource_toggle_settings"
          ]
        }
      },
      "treasury.financial_account_features": {
        "description": "Encodes whether a FinancialAccount has access to a particular Feature, with a `status` enum and associated `status_details`.\nStripe or the platform can control Features via the requested field.",
        "properties": {
          "card_issuing": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggle_settings"
          },
          "deposit_insurance": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggle_settings"
          },
          "financial_addresses": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_financial_addresses_features"
          },
          "inbound_transfers": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_inbound_transfers"
          },
          "intra_stripe_flows": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggle_settings"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.financial_account_features"
            ],
            "type": "string"
          },
          "outbound_payments": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_outbound_payments"
          },
          "outbound_transfers": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_outbound_transfers"
          }
        },
        "required": [
          "object"
        ],
        "title": "TreasuryFinancialAccountsResourceFinancialAccountFeatures",
        "type": "object",
        "x-expandableFields": [
          "card_issuing",
          "deposit_insurance",
          "financial_addresses",
          "inbound_transfers",
          "intra_stripe_flows",
          "outbound_payments",
          "outbound_transfers"
        ],
        "x-resourceId": "treasury.financial_account_features",
        "x-stripeResource": {
          "class_name": "FinancialAccountFeatures",
          "in_package": "Treasury",
          "inner_classes": [
            "treasury_financial_accounts_resource_financial_addresses_features",
            "treasury_financial_accounts_resource_inbound_transfers",
            "treasury_financial_accounts_resource_outbound_payments",
            "treasury_financial_accounts_resource_outbound_transfers",
            "treasury_financial_accounts_resource_platform_restrictions"
          ]
        }
      },
      "treasury.inbound_transfer": {
        "description": "Use [InboundTransfers](https://stripe.com/docs/treasury/moving-money/financial-accounts/into/inbound-transfers) to add funds to your [FinancialAccount](https://stripe.com/docs/api#financial_accounts) via a PaymentMethod that is owned by you. The funds will be transferred via an ACH debit.",
        "properties": {
          "amount": {
            "description": "Amount (in cents) transferred.",
            "type": "integer"
          },
          "cancelable": {
            "description": "Returns `true` if the InboundTransfer is able to be canceled.",
            "type": "boolean"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "failure_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_inbound_transfers_resource_failure_details"
              }
            ],
            "description": "Details about this InboundTransfer's failure. Only set when status is `failed`.",
            "nullable": true
          },
          "financial_account": {
            "description": "The FinancialAccount that received the funds.",
            "maxLength": 5000,
            "type": "string"
          },
          "hosted_regulatory_receipt_url": {
            "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "linked_flows": {
            "$ref": "#/components/schemas/treasury_inbound_transfers_resource_inbound_transfer_resource_linked_flows"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.inbound_transfer"
            ],
            "type": "string"
          },
          "origin_payment_method": {
            "description": "The origin payment method to be debited for an InboundTransfer.",
            "maxLength": 5000,
            "type": "string"
          },
          "origin_payment_method_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/inbound_transfers"
              }
            ],
            "description": "Details about the PaymentMethod for an InboundTransfer.",
            "nullable": true
          },
          "returned": {
            "description": "Returns `true` if the funds for an InboundTransfer were returned after the InboundTransfer went to the `succeeded` state.",
            "nullable": true,
            "type": "boolean"
          },
          "statement_descriptor": {
            "description": "Statement descriptor shown when funds are debited from the source. Not all payment networks support `statement_descriptor`.",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "Status of the InboundTransfer: `processing`, `succeeded`, `failed`, and `canceled`. An InboundTransfer is `processing` if it is created and pending. The status changes to `succeeded` once the funds have been \"confirmed\" and a `transaction` is created and posted. The status changes to `failed` if the transfer fails.",
            "enum": [
              "canceled",
              "failed",
              "processing",
              "succeeded"
            ],
            "type": "string"
          },
          "status_transitions": {
            "$ref": "#/components/schemas/treasury_inbound_transfers_resource_inbound_transfer_resource_status_transitions"
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/treasury.transaction"
              }
            ],
            "description": "The Transaction associated with this object.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "cancelable",
          "created",
          "currency",
          "description",
          "failure_details",
          "financial_account",
          "hosted_regulatory_receipt_url",
          "id",
          "linked_flows",
          "livemode",
          "metadata",
          "object",
          "origin_payment_method",
          "origin_payment_method_details",
          "returned",
          "statement_descriptor",
          "status",
          "status_transitions",
          "transaction"
        ],
        "title": "TreasuryInboundTransfersResourceInboundTransfer",
        "type": "object",
        "x-expandableFields": [
          "failure_details",
          "linked_flows",
          "origin_payment_method_details",
          "status_transitions",
          "transaction"
        ],
        "x-resourceId": "treasury.inbound_transfer",
        "x-stripeOperations": [
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/treasury/inbound_transfers/{inbound_transfer}/cancel"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/treasury/inbound_transfers"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/treasury/inbound_transfers/{id}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/treasury/inbound_transfers"
          },
          {
            "method_name": "succeed",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/inbound_transfers/{id}/succeed"
          },
          {
            "method_name": "fail",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/inbound_transfers/{id}/fail"
          },
          {
            "method_name": "return_inbound_transfer",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/inbound_transfers/{id}/return"
          }
        ],
        "x-stripeResource": {
          "class_name": "InboundTransfer",
          "has_collection_class": true,
          "in_package": "Treasury",
          "inner_classes": [
            "inbound_transfers",
            "treasury_inbound_transfers_resource_failure_details",
            "treasury_inbound_transfers_resource_inbound_transfer_resource_linked_flows",
            "treasury_inbound_transfers_resource_inbound_transfer_resource_status_transitions"
          ]
        }
      },
      "treasury.outbound_payment": {
        "description": "Use OutboundPayments to send funds to another party's external bank account or [FinancialAccount](https://stripe.com/docs/api#financial_accounts). To send money to an account belonging to the same user, use an [OutboundTransfer](https://stripe.com/docs/api#outbound_transfers).\n\nSimulate OutboundPayment state changes with the `/v1/test_helpers/treasury/outbound_payments` endpoints. These methods can only be called on test mode objects.",
        "properties": {
          "amount": {
            "description": "Amount (in cents) transferred.",
            "type": "integer"
          },
          "cancelable": {
            "description": "Returns `true` if the object can be canceled, and `false` otherwise.",
            "type": "boolean"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "customer": {
            "description": "ID of the [customer](https://stripe.com/docs/api/customers) to whom an OutboundPayment is sent.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "destination_payment_method": {
            "description": "The PaymentMethod via which an OutboundPayment is sent. This field can be empty if the OutboundPayment was created using `destination_payment_method_data`.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "destination_payment_method_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/outbound_payments_payment_method_details"
              }
            ],
            "description": "Details about the PaymentMethod for an OutboundPayment.",
            "nullable": true
          },
          "end_user_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_outbound_payments_resource_outbound_payment_resource_end_user_details"
              }
            ],
            "description": "Details about the end user.",
            "nullable": true
          },
          "expected_arrival_date": {
            "description": "The date when funds are expected to arrive in the destination account.",
            "format": "unix-time",
            "type": "integer"
          },
          "financial_account": {
            "description": "The FinancialAccount that funds were pulled from.",
            "maxLength": 5000,
            "type": "string"
          },
          "hosted_regulatory_receipt_url": {
            "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.outbound_payment"
            ],
            "type": "string"
          },
          "returned_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_outbound_payments_resource_returned_status"
              }
            ],
            "description": "Details about a returned OutboundPayment. Only set when the status is `returned`.",
            "nullable": true
          },
          "statement_descriptor": {
            "description": "The description that appears on the receiving end for an OutboundPayment (for example, bank statement for external bank transfer).",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "Current status of the OutboundPayment: `processing`, `failed`, `posted`, `returned`, `canceled`. An OutboundPayment is `processing` if it has been created and is pending. The status changes to `posted` once the OutboundPayment has been \"confirmed\" and funds have left the account, or to `failed` or `canceled`. If an OutboundPayment fails to arrive at its destination, its status will change to `returned`.",
            "enum": [
              "canceled",
              "failed",
              "posted",
              "processing",
              "returned"
            ],
            "type": "string"
          },
          "status_transitions": {
            "$ref": "#/components/schemas/treasury_outbound_payments_resource_outbound_payment_resource_status_transitions"
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/treasury.transaction"
              }
            ],
            "description": "The Transaction associated with this object.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "cancelable",
          "created",
          "currency",
          "customer",
          "description",
          "destination_payment_method",
          "destination_payment_method_details",
          "end_user_details",
          "expected_arrival_date",
          "financial_account",
          "hosted_regulatory_receipt_url",
          "id",
          "livemode",
          "metadata",
          "object",
          "returned_details",
          "statement_descriptor",
          "status",
          "status_transitions",
          "transaction"
        ],
        "title": "TreasuryOutboundPaymentsResourceOutboundPayment",
        "type": "object",
        "x-expandableFields": [
          "destination_payment_method_details",
          "end_user_details",
          "returned_details",
          "status_transitions",
          "transaction"
        ],
        "x-resourceId": "treasury.outbound_payment",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/treasury/outbound_payments"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/treasury/outbound_payments/{id}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/treasury/outbound_payments"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/treasury/outbound_payments/{id}/cancel"
          },
          {
            "method_name": "fail",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/outbound_payments/{id}/fail"
          },
          {
            "method_name": "post",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/outbound_payments/{id}/post"
          },
          {
            "method_name": "return_outbound_payment",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/outbound_payments/{id}/return"
          }
        ],
        "x-stripeResource": {
          "class_name": "OutboundPayment",
          "has_collection_class": true,
          "in_package": "Treasury",
          "inner_classes": [
            "outbound_payments_payment_method_details",
            "treasury_outbound_payments_resource_outbound_payment_resource_end_user_details",
            "treasury_outbound_payments_resource_outbound_payment_resource_status_transitions",
            "treasury_outbound_payments_resource_returned_status"
          ]
        }
      },
      "treasury.outbound_transfer": {
        "description": "Use OutboundTransfers to transfer funds from a [FinancialAccount](https://stripe.com/docs/api#financial_accounts) to a PaymentMethod belonging to the same entity. To send funds to a different party, use [OutboundPayments](https://stripe.com/docs/api#outbound_payments) instead. You can send funds over ACH rails or through a domestic wire transfer to a user's own external bank account.\n\nSimulate OutboundTransfer state changes with the `/v1/test_helpers/treasury/outbound_transfers` endpoints. These methods can only be called on test mode objects.",
        "properties": {
          "amount": {
            "description": "Amount (in cents) transferred.",
            "type": "integer"
          },
          "cancelable": {
            "description": "Returns `true` if the object can be canceled, and `false` otherwise.",
            "type": "boolean"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "destination_payment_method": {
            "description": "The PaymentMethod used as the payment instrument for an OutboundTransfer.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "destination_payment_method_details": {
            "$ref": "#/components/schemas/outbound_transfers_payment_method_details"
          },
          "expected_arrival_date": {
            "description": "The date when funds are expected to arrive in the destination account.",
            "format": "unix-time",
            "type": "integer"
          },
          "financial_account": {
            "description": "The FinancialAccount that funds were pulled from.",
            "maxLength": 5000,
            "type": "string"
          },
          "hosted_regulatory_receipt_url": {
            "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.outbound_transfer"
            ],
            "type": "string"
          },
          "returned_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_outbound_transfers_resource_returned_details"
              }
            ],
            "description": "Details about a returned OutboundTransfer. Only set when the status is `returned`.",
            "nullable": true
          },
          "statement_descriptor": {
            "description": "Information about the OutboundTransfer to be sent to the recipient account.",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "Current status of the OutboundTransfer: `processing`, `failed`, `canceled`, `posted`, `returned`. An OutboundTransfer is `processing` if it has been created and is pending. The status changes to `posted` once the OutboundTransfer has been \"confirmed\" and funds have left the account, or to `failed` or `canceled`. If an OutboundTransfer fails to arrive at its destination, its status will change to `returned`.",
            "enum": [
              "canceled",
              "failed",
              "posted",
              "processing",
              "returned"
            ],
            "type": "string"
          },
          "status_transitions": {
            "$ref": "#/components/schemas/treasury_outbound_transfers_resource_status_transitions"
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/treasury.transaction"
              }
            ],
            "description": "The Transaction associated with this object.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "cancelable",
          "created",
          "currency",
          "description",
          "destination_payment_method",
          "destination_payment_method_details",
          "expected_arrival_date",
          "financial_account",
          "hosted_regulatory_receipt_url",
          "id",
          "livemode",
          "metadata",
          "object",
          "returned_details",
          "statement_descriptor",
          "status",
          "status_transitions",
          "transaction"
        ],
        "title": "TreasuryOutboundTransfersResourceOutboundTransfer",
        "type": "object",
        "x-expandableFields": [
          "destination_payment_method_details",
          "returned_details",
          "status_transitions",
          "transaction"
        ],
        "x-resourceId": "treasury.outbound_transfer",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/treasury/outbound_transfers"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/treasury/outbound_transfers/{outbound_transfer}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/treasury/outbound_transfers"
          },
          {
            "method_name": "cancel",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/treasury/outbound_transfers/{outbound_transfer}/cancel"
          },
          {
            "method_name": "fail",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/fail"
          },
          {
            "method_name": "post",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/post"
          },
          {
            "method_name": "return_outbound_transfer",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/return"
          }
        ],
        "x-stripeResource": {
          "class_name": "OutboundTransfer",
          "has_collection_class": true,
          "in_package": "Treasury",
          "inner_classes": [
            "outbound_transfers_payment_method_details",
            "treasury_outbound_transfers_resource_returned_details",
            "treasury_outbound_transfers_resource_status_transitions"
          ]
        }
      },
      "treasury.received_credit": {
        "description": "ReceivedCredits represent funds sent to a [FinancialAccount](https://stripe.com/docs/api#financial_accounts) (for example, via ACH or wire). These money movements are not initiated from the FinancialAccount.",
        "properties": {
          "amount": {
            "description": "Amount (in cents) transferred.",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "type": "string"
          },
          "failure_code": {
            "description": "Reason for the failure. A ReceivedCredit might fail because the receiving FinancialAccount is closed or frozen.",
            "enum": [
              "account_closed",
              "account_frozen",
              "other"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "financial_account": {
            "description": "The FinancialAccount that received the funds.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "hosted_regulatory_receipt_url": {
            "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "initiating_payment_method_details": {
            "$ref": "#/components/schemas/treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details"
          },
          "linked_flows": {
            "$ref": "#/components/schemas/treasury_received_credits_resource_linked_flows"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "network": {
            "description": "The rails used to send the funds.",
            "enum": [
              "ach",
              "card",
              "stripe",
              "us_domestic_wire"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.received_credit"
            ],
            "type": "string"
          },
          "reversal_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_received_credits_resource_reversal_details"
              }
            ],
            "description": "Details describing when a ReceivedCredit may be reversed.",
            "nullable": true
          },
          "status": {
            "description": "Status of the ReceivedCredit. ReceivedCredits are created either `succeeded` (approved) or `failed` (declined). If a ReceivedCredit is declined, the failure reason can be found in the `failure_code` field.",
            "enum": [
              "failed",
              "succeeded"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/treasury.transaction"
              }
            ],
            "description": "The Transaction associated with this object.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "description",
          "failure_code",
          "financial_account",
          "hosted_regulatory_receipt_url",
          "id",
          "initiating_payment_method_details",
          "linked_flows",
          "livemode",
          "network",
          "object",
          "reversal_details",
          "status",
          "transaction"
        ],
        "title": "TreasuryReceivedCreditsResourceReceivedCredit",
        "type": "object",
        "x-expandableFields": [
          "initiating_payment_method_details",
          "linked_flows",
          "reversal_details",
          "transaction"
        ],
        "x-resourceId": "treasury.received_credit",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/treasury/received_credits"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/treasury/received_credits/{id}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/received_credits"
          }
        ],
        "x-stripeResource": {
          "class_name": "ReceivedCredit",
          "has_collection_class": true,
          "in_package": "Treasury",
          "inner_classes": [
            "treasury_received_credits_resource_linked_flows",
            "treasury_received_credits_resource_reversal_details",
            "treasury_received_credits_resource_status_transitions",
            "treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details"
          ]
        }
      },
      "treasury.received_debit": {
        "description": "ReceivedDebits represent funds pulled from a [FinancialAccount](https://stripe.com/docs/api#financial_accounts). These are not initiated from the FinancialAccount.",
        "properties": {
          "amount": {
            "description": "Amount (in cents) transferred.",
            "type": "integer"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "type": "string"
          },
          "failure_code": {
            "description": "Reason for the failure. A ReceivedDebit might fail because the FinancialAccount doesn't have sufficient funds, is closed, or is frozen.",
            "enum": [
              "account_closed",
              "account_frozen",
              "insufficient_funds",
              "other"
            ],
            "nullable": true,
            "type": "string"
          },
          "financial_account": {
            "description": "The FinancialAccount that funds were pulled from.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "hosted_regulatory_receipt_url": {
            "description": "A [hosted transaction receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts) URL that is provided when money movement is considered regulated under Stripe's money transmission licenses.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "initiating_payment_method_details": {
            "$ref": "#/components/schemas/treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details"
          },
          "linked_flows": {
            "$ref": "#/components/schemas/treasury_received_debits_resource_linked_flows"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "network": {
            "description": "The network used for the ReceivedDebit.",
            "enum": [
              "ach",
              "card",
              "stripe"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.received_debit"
            ],
            "type": "string"
          },
          "reversal_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_received_debits_resource_reversal_details"
              }
            ],
            "description": "Details describing when a ReceivedDebit might be reversed.",
            "nullable": true
          },
          "status": {
            "description": "Status of the ReceivedDebit. ReceivedDebits are created with a status of either `succeeded` (approved) or `failed` (declined). The failure reason can be found under the `failure_code`.",
            "enum": [
              "failed",
              "succeeded"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/treasury.transaction"
              }
            ],
            "description": "The Transaction associated with this object.",
            "nullable": true,
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ]
            }
          }
        },
        "required": [
          "amount",
          "created",
          "currency",
          "description",
          "failure_code",
          "financial_account",
          "hosted_regulatory_receipt_url",
          "id",
          "linked_flows",
          "livemode",
          "network",
          "object",
          "reversal_details",
          "status",
          "transaction"
        ],
        "title": "TreasuryReceivedDebitsResourceReceivedDebit",
        "type": "object",
        "x-expandableFields": [
          "initiating_payment_method_details",
          "linked_flows",
          "reversal_details",
          "transaction"
        ],
        "x-resourceId": "treasury.received_debit",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/treasury/received_debits"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/treasury/received_debits/{id}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/test_helpers/treasury/received_debits"
          }
        ],
        "x-stripeResource": {
          "class_name": "ReceivedDebit",
          "has_collection_class": true,
          "in_package": "Treasury",
          "inner_classes": [
            "treasury_received_debits_resource_linked_flows",
            "treasury_received_debits_resource_reversal_details",
            "treasury_received_debits_resource_status_transitions"
          ]
        }
      },
      "treasury.transaction": {
        "description": "Transactions represent changes to a [FinancialAccount's](https://stripe.com/docs/api#financial_accounts) balance.",
        "properties": {
          "amount": {
            "description": "Amount (in cents) transferred.",
            "type": "integer"
          },
          "balance_impact": {
            "$ref": "#/components/schemas/treasury_transactions_resource_balance_impact"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "description": {
            "description": "An arbitrary string attached to the object. Often useful for displaying to users.",
            "maxLength": 5000,
            "type": "string"
          },
          "entries": {
            "description": "A list of TransactionEntries that are part of this Transaction. This cannot be expanded in any list endpoints.",
            "nullable": true,
            "properties": {
              "data": {
                "description": "Details about each object.",
                "items": {
                  "$ref": "#/components/schemas/treasury.transaction_entry"
                },
                "type": "array"
              },
              "has_more": {
                "description": "True if this list has another page of items after this one that can be fetched.",
                "type": "boolean"
              },
              "object": {
                "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                "enum": [
                  "list"
                ],
                "type": "string"
              },
              "url": {
                "description": "The URL where this list can be accessed.",
                "maxLength": 5000,
                "pattern": "^/v1/treasury/transaction_entries",
                "type": "string"
              }
            },
            "required": [
              "data",
              "has_more",
              "object",
              "url"
            ],
            "title": "TreasuryTransactionsResourceTransactionEntryList",
            "type": "object",
            "x-expandableFields": [
              "data"
            ]
          },
          "financial_account": {
            "description": "The FinancialAccount associated with this object.",
            "maxLength": 5000,
            "type": "string"
          },
          "flow": {
            "description": "ID of the flow that created the Transaction.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "flow_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_transactions_resource_flow_details"
              }
            ],
            "description": "Details of the flow that created the Transaction.",
            "nullable": true
          },
          "flow_type": {
            "description": "Type of the flow that created the Transaction.",
            "enum": [
              "credit_reversal",
              "debit_reversal",
              "inbound_transfer",
              "issuing_authorization",
              "other",
              "outbound_payment",
              "outbound_transfer",
              "received_credit",
              "received_debit"
            ],
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.transaction"
            ],
            "type": "string"
          },
          "status": {
            "description": "Status of the Transaction.",
            "enum": [
              "open",
              "posted",
              "void"
            ],
            "type": "string"
          },
          "status_transitions": {
            "$ref": "#/components/schemas/treasury_transactions_resource_abstract_transaction_resource_status_transitions"
          }
        },
        "required": [
          "amount",
          "balance_impact",
          "created",
          "currency",
          "description",
          "entries",
          "financial_account",
          "flow",
          "flow_details",
          "flow_type",
          "id",
          "livemode",
          "object",
          "status",
          "status_transitions"
        ],
        "title": "TreasuryTransactionsResourceTransaction",
        "type": "object",
        "x-expandableFields": [
          "balance_impact",
          "entries",
          "flow_details",
          "status_transitions"
        ],
        "x-resourceId": "treasury.transaction",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/treasury/transactions/{id}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/treasury/transactions"
          }
        ],
        "x-stripeResource": {
          "class_name": "Transaction",
          "has_collection_class": true,
          "in_package": "Treasury",
          "inner_classes": [
            "treasury_transactions_resource_abstract_transaction_resource_status_transitions",
            "treasury_transactions_resource_balance_impact"
          ]
        }
      },
      "treasury.transaction_entry": {
        "description": "TransactionEntries represent individual units of money movements within a single [Transaction](https://stripe.com/docs/api#transactions).",
        "properties": {
          "balance_impact": {
            "$ref": "#/components/schemas/treasury_transactions_resource_balance_impact"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "currency": {
            "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
            "type": "string"
          },
          "effective_at": {
            "description": "When the TransactionEntry will impact the FinancialAccount's balance.",
            "format": "unix-time",
            "type": "integer"
          },
          "financial_account": {
            "description": "The FinancialAccount associated with this object.",
            "maxLength": 5000,
            "type": "string"
          },
          "flow": {
            "description": "Token of the flow associated with the TransactionEntry.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "flow_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_transactions_resource_flow_details"
              }
            ],
            "description": "Details of the flow associated with the TransactionEntry.",
            "nullable": true
          },
          "flow_type": {
            "description": "Type of the flow associated with the TransactionEntry.",
            "enum": [
              "credit_reversal",
              "debit_reversal",
              "inbound_transfer",
              "issuing_authorization",
              "other",
              "outbound_payment",
              "outbound_transfer",
              "received_credit",
              "received_debit"
            ],
            "type": "string"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "treasury.transaction_entry"
            ],
            "type": "string"
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/treasury.transaction"
              }
            ],
            "description": "The Transaction associated with this object.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ]
            }
          },
          "type": {
            "description": "The specific money movement that generated the TransactionEntry.",
            "enum": [
              "credit_reversal",
              "credit_reversal_posting",
              "debit_reversal",
              "inbound_transfer",
              "inbound_transfer_return",
              "issuing_authorization_hold",
              "issuing_authorization_release",
              "other",
              "outbound_payment",
              "outbound_payment_cancellation",
              "outbound_payment_failure",
              "outbound_payment_posting",
              "outbound_payment_return",
              "outbound_transfer",
              "outbound_transfer_cancellation",
              "outbound_transfer_failure",
              "outbound_transfer_posting",
              "outbound_transfer_return",
              "received_credit",
              "received_debit"
            ],
            "type": "string"
          }
        },
        "required": [
          "balance_impact",
          "created",
          "currency",
          "effective_at",
          "financial_account",
          "flow",
          "flow_details",
          "flow_type",
          "id",
          "livemode",
          "object",
          "transaction",
          "type"
        ],
        "title": "TreasuryTransactionsResourceTransactionEntry",
        "type": "object",
        "x-expandableFields": [
          "balance_impact",
          "flow_details",
          "transaction"
        ],
        "x-resourceId": "treasury.transaction_entry",
        "x-stripeOperations": [
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/treasury/transaction_entries/{id}"
          },
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/treasury/transaction_entries"
          }
        ],
        "x-stripeResource": {
          "class_name": "TransactionEntry",
          "has_collection_class": true,
          "in_package": "Treasury"
        }
      },
      "treasury_financial_accounts_resource_aba_record": {
        "description": "ABA Records contain U.S. bank account details per the ABA format.",
        "properties": {
          "account_holder_name": {
            "description": "The name of the person or business that owns the bank account.",
            "maxLength": 5000,
            "type": "string"
          },
          "account_number": {
            "description": "The account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "account_number_last4": {
            "description": "The last four characters of the account number.",
            "maxLength": 5000,
            "type": "string"
          },
          "bank_name": {
            "description": "Name of the bank.",
            "maxLength": 5000,
            "type": "string"
          },
          "routing_number": {
            "description": "Routing number for the account.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "account_holder_name",
          "account_number",
          "account_number_last4",
          "bank_name",
          "routing_number"
        ],
        "title": "TreasuryFinancialAccountsResourceABARecord",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Aba",
          "in_class": "treasury_financial_accounts_resource_financial_address"
        }
      },
      "treasury_financial_accounts_resource_ach_toggle_settings": {
        "description": "Toggle settings for enabling/disabling an ACH specific feature",
        "properties": {
          "requested": {
            "description": "Whether the FinancialAccount should have the Feature.",
            "type": "boolean"
          },
          "status": {
            "description": "Whether the Feature is operational.",
            "enum": [
              "active",
              "pending",
              "restricted"
            ],
            "type": "string"
          },
          "status_details": {
            "description": "Additional details; includes at least one entry when the status is not `active`.",
            "items": {
              "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggles_setting_status_details"
            },
            "type": "array"
          }
        },
        "required": [
          "requested",
          "status",
          "status_details"
        ],
        "title": "TreasuryFinancialAccountsResourceAchToggleSettings",
        "type": "object",
        "x-expandableFields": [
          "status_details"
        ],
        "x-stripeResource": {
          "class_name": "AchToggleSettings",
          "in_class": "treasury.financial_account"
        }
      },
      "treasury_financial_accounts_resource_balance": {
        "description": "Balance information for the FinancialAccount",
        "properties": {
          "cash": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "Funds the user can spend right now.",
            "type": "object"
          },
          "inbound_pending": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "Funds not spendable yet, but will become available at a later time.",
            "type": "object"
          },
          "outbound_pending": {
            "additionalProperties": {
              "type": "integer"
            },
            "description": "Funds in the account, but not spendable because they are being held for pending outbound flows.",
            "type": "object"
          }
        },
        "required": [
          "cash",
          "inbound_pending",
          "outbound_pending"
        ],
        "title": "TreasuryFinancialAccountsResourceBalance",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Balance",
          "in_class": "treasury.financial_account"
        }
      },
      "treasury_financial_accounts_resource_closed_status_details": {
        "description": "",
        "properties": {
          "reasons": {
            "description": "The array that contains reasons for a FinancialAccount closure.",
            "items": {
              "enum": [
                "account_rejected",
                "closed_by_platform",
                "other"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "reasons"
        ],
        "title": "TreasuryFinancialAccountsResourceClosedStatusDetails",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Closed",
          "in_class": "treasury_financial_accounts_resource_status_details"
        }
      },
      "treasury_financial_accounts_resource_financial_address": {
        "description": "FinancialAddresses contain identifying information that resolves to a FinancialAccount.",
        "properties": {
          "aba": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_aba_record"
          },
          "supported_networks": {
            "description": "The list of networks that the address supports",
            "items": {
              "enum": [
                "ach",
                "us_domestic_wire"
              ],
              "type": "string",
              "x-stripeBypassValidation": true
            },
            "type": "array"
          },
          "type": {
            "description": "The type of financial address",
            "enum": [
              "aba"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "type"
        ],
        "title": "TreasuryFinancialAccountsResourceFinancialAddress",
        "type": "object",
        "x-expandableFields": [
          "aba"
        ],
        "x-stripeResource": {
          "class_name": "FinancialAddress",
          "in_class": "treasury.financial_account",
          "inner_classes": [
            "treasury_financial_accounts_resource_aba_record"
          ]
        }
      },
      "treasury_financial_accounts_resource_financial_addresses_features": {
        "description": "Settings related to Financial Addresses features on a Financial Account",
        "properties": {
          "aba": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggle_settings"
          }
        },
        "title": "TreasuryFinancialAccountsResourceFinancialAddressesFeatures",
        "type": "object",
        "x-expandableFields": [
          "aba"
        ],
        "x-stripeResource": {
          "class_name": "FinancialAddresses",
          "in_class": "treasury.financial_account_features"
        }
      },
      "treasury_financial_accounts_resource_inbound_transfers": {
        "description": "InboundTransfers contains inbound transfers features for a FinancialAccount.",
        "properties": {
          "ach": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_ach_toggle_settings"
          }
        },
        "title": "TreasuryFinancialAccountsResourceInboundTransfers",
        "type": "object",
        "x-expandableFields": [
          "ach"
        ],
        "x-stripeResource": {
          "class_name": "InboundTransfers",
          "in_class": "treasury.financial_account_features"
        }
      },
      "treasury_financial_accounts_resource_outbound_payments": {
        "description": "Settings related to Outbound Payments features on a Financial Account",
        "properties": {
          "ach": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_ach_toggle_settings"
          },
          "us_domestic_wire": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggle_settings"
          }
        },
        "title": "TreasuryFinancialAccountsResourceOutboundPayments",
        "type": "object",
        "x-expandableFields": [
          "ach",
          "us_domestic_wire"
        ],
        "x-stripeResource": {
          "class_name": "OutboundPayments",
          "in_class": "treasury.financial_account_features"
        }
      },
      "treasury_financial_accounts_resource_outbound_transfers": {
        "description": "OutboundTransfers contains outbound transfers features for a FinancialAccount.",
        "properties": {
          "ach": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_ach_toggle_settings"
          },
          "us_domestic_wire": {
            "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggle_settings"
          }
        },
        "title": "TreasuryFinancialAccountsResourceOutboundTransfers",
        "type": "object",
        "x-expandableFields": [
          "ach",
          "us_domestic_wire"
        ],
        "x-stripeResource": {
          "class_name": "OutboundTransfers",
          "in_class": "treasury.financial_account_features"
        }
      },
      "treasury_financial_accounts_resource_platform_restrictions": {
        "description": "Restrictions that a Connect Platform has placed on this FinancialAccount.",
        "properties": {
          "inbound_flows": {
            "description": "Restricts all inbound money movement.",
            "enum": [
              "restricted",
              "unrestricted"
            ],
            "nullable": true,
            "type": "string"
          },
          "outbound_flows": {
            "description": "Restricts all outbound money movement.",
            "enum": [
              "restricted",
              "unrestricted"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "inbound_flows",
          "outbound_flows"
        ],
        "title": "TreasuryFinancialAccountsResourcePlatformRestrictions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "PlatformRestriction",
          "in_class": "treasury.financial_account_features"
        }
      },
      "treasury_financial_accounts_resource_status_details": {
        "description": "",
        "properties": {
          "closed": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_financial_accounts_resource_closed_status_details"
              }
            ],
            "description": "Details related to the closure of this FinancialAccount",
            "nullable": true
          }
        },
        "required": [
          "closed"
        ],
        "title": "TreasuryFinancialAccountsResourceStatusDetails",
        "type": "object",
        "x-expandableFields": [
          "closed"
        ],
        "x-stripeResource": {
          "class_name": "StatusDetails",
          "in_class": "treasury.financial_account",
          "inner_classes": [
            "treasury_financial_accounts_resource_closed_status_details"
          ]
        }
      },
      "treasury_financial_accounts_resource_toggle_settings": {
        "description": "Toggle settings for enabling/disabling a feature",
        "properties": {
          "requested": {
            "description": "Whether the FinancialAccount should have the Feature.",
            "type": "boolean"
          },
          "status": {
            "description": "Whether the Feature is operational.",
            "enum": [
              "active",
              "pending",
              "restricted"
            ],
            "type": "string"
          },
          "status_details": {
            "description": "Additional details; includes at least one entry when the status is not `active`.",
            "items": {
              "$ref": "#/components/schemas/treasury_financial_accounts_resource_toggles_setting_status_details"
            },
            "type": "array"
          }
        },
        "required": [
          "requested",
          "status",
          "status_details"
        ],
        "title": "TreasuryFinancialAccountsResourceToggleSettings",
        "type": "object",
        "x-expandableFields": [
          "status_details"
        ],
        "x-stripeResource": {
          "class_name": "ToggleSettings",
          "in_class": "treasury.financial_account",
          "inner_classes": [
            "treasury_financial_accounts_resource_toggles_setting_status_details"
          ]
        }
      },
      "treasury_financial_accounts_resource_toggles_setting_status_details": {
        "description": "Additional details on the FinancialAccount Features information.",
        "properties": {
          "code": {
            "description": "Represents the reason why the status is `pending` or `restricted`.",
            "enum": [
              "activating",
              "capability_not_requested",
              "financial_account_closed",
              "rejected_other",
              "rejected_unsupported_business",
              "requirements_past_due",
              "requirements_pending_verification",
              "restricted_by_platform",
              "restricted_other"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "resolution": {
            "description": "Represents what the user should do, if anything, to activate the Feature.",
            "enum": [
              "contact_stripe",
              "provide_information",
              "remove_restriction"
            ],
            "nullable": true,
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "restriction": {
            "description": "The `platform_restrictions` that are restricting this Feature.",
            "enum": [
              "inbound_flows",
              "outbound_flows"
            ],
            "type": "string"
          }
        },
        "required": [
          "code",
          "resolution"
        ],
        "title": "TreasuryFinancialAccountsResourceTogglesSettingStatusDetails",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "StatusDetails",
          "in_class": "treasury_financial_accounts_resource_toggle_settings"
        }
      },
      "treasury_inbound_transfers_resource_failure_details": {
        "description": "",
        "properties": {
          "code": {
            "description": "Reason for the failure.",
            "enum": [
              "account_closed",
              "account_frozen",
              "bank_account_restricted",
              "bank_ownership_changed",
              "debit_not_authorized",
              "incorrect_account_holder_address",
              "incorrect_account_holder_name",
              "incorrect_account_holder_tax_id",
              "insufficient_funds",
              "invalid_account_number",
              "invalid_currency",
              "no_account",
              "other"
            ],
            "type": "string"
          }
        },
        "required": [
          "code"
        ],
        "title": "TreasuryInboundTransfersResourceFailureDetails",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "FailureDetails",
          "in_class": "treasury.inbound_transfer"
        }
      },
      "treasury_inbound_transfers_resource_inbound_transfer_resource_linked_flows": {
        "description": "",
        "properties": {
          "received_debit": {
            "description": "If funds for this flow were returned after the flow went to the `succeeded` state, this field contains a reference to the ReceivedDebit return.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "received_debit"
        ],
        "title": "TreasuryInboundTransfersResourceInboundTransferResourceLinkedFlows",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "LinkedFlows",
          "in_class": "treasury.inbound_transfer"
        }
      },
      "treasury_inbound_transfers_resource_inbound_transfer_resource_status_transitions": {
        "description": "",
        "properties": {
          "canceled_at": {
            "description": "Timestamp describing when an InboundTransfer changed status to `canceled`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "failed_at": {
            "description": "Timestamp describing when an InboundTransfer changed status to `failed`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "succeeded_at": {
            "description": "Timestamp describing when an InboundTransfer changed status to `succeeded`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "failed_at",
          "succeeded_at"
        ],
        "title": "TreasuryInboundTransfersResourceInboundTransferResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "StatusTransitions",
          "in_class": "treasury.inbound_transfer"
        }
      },
      "treasury_outbound_payments_resource_outbound_payment_resource_end_user_details": {
        "description": "",
        "properties": {
          "ip_address": {
            "description": "IP address of the user initiating the OutboundPayment. Set if `present` is set to `true`. IP address collection is required for risk and compliance reasons. This will be used to help determine if the OutboundPayment is authorized or should be blocked.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "present": {
            "description": "`true`` if the OutboundPayment creation request is being made on behalf of an end user by a platform. Otherwise, `false`.",
            "type": "boolean"
          }
        },
        "required": [
          "ip_address",
          "present"
        ],
        "title": "TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "EndUserDetails",
          "in_class": "treasury.outbound_payment"
        }
      },
      "treasury_outbound_payments_resource_outbound_payment_resource_status_transitions": {
        "description": "",
        "properties": {
          "canceled_at": {
            "description": "Timestamp describing when an OutboundPayment changed status to `canceled`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "failed_at": {
            "description": "Timestamp describing when an OutboundPayment changed status to `failed`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "posted_at": {
            "description": "Timestamp describing when an OutboundPayment changed status to `posted`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "returned_at": {
            "description": "Timestamp describing when an OutboundPayment changed status to `returned`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "canceled_at",
          "failed_at",
          "posted_at",
          "returned_at"
        ],
        "title": "TreasuryOutboundPaymentsResourceOutboundPaymentResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "StatusTransitions",
          "in_class": "treasury.outbound_payment"
        }
      },
      "treasury_outbound_payments_resource_returned_status": {
        "description": "",
        "properties": {
          "code": {
            "description": "Reason for the return.",
            "enum": [
              "account_closed",
              "account_frozen",
              "bank_account_restricted",
              "bank_ownership_changed",
              "declined",
              "incorrect_account_holder_name",
              "invalid_account_number",
              "invalid_currency",
              "no_account",
              "other"
            ],
            "type": "string"
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/treasury.transaction"
              }
            ],
            "description": "The Transaction associated with this object.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ]
            }
          }
        },
        "required": [
          "code",
          "transaction"
        ],
        "title": "TreasuryOutboundPaymentsResourceReturnedStatus",
        "type": "object",
        "x-expandableFields": [
          "transaction"
        ],
        "x-stripeResource": {
          "class_name": "ReturnedDetails",
          "in_class": "treasury.outbound_payment"
        }
      },
      "treasury_outbound_transfers_resource_returned_details": {
        "description": "",
        "properties": {
          "code": {
            "description": "Reason for the return.",
            "enum": [
              "account_closed",
              "account_frozen",
              "bank_account_restricted",
              "bank_ownership_changed",
              "declined",
              "incorrect_account_holder_name",
              "invalid_account_number",
              "invalid_currency",
              "no_account",
              "other"
            ],
            "type": "string"
          },
          "transaction": {
            "anyOf": [
              {
                "maxLength": 5000,
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/treasury.transaction"
              }
            ],
            "description": "The Transaction associated with this object.",
            "x-expansionResources": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/treasury.transaction"
                }
              ]
            }
          }
        },
        "required": [
          "code",
          "transaction"
        ],
        "title": "TreasuryOutboundTransfersResourceReturnedDetails",
        "type": "object",
        "x-expandableFields": [
          "transaction"
        ],
        "x-stripeResource": {
          "class_name": "ReturnedDetails",
          "in_class": "treasury.outbound_transfer"
        }
      },
      "treasury_outbound_transfers_resource_status_transitions": {
        "description": "",
        "properties": {
          "canceled_at": {
            "description": "Timestamp describing when an OutboundTransfer changed status to `canceled`",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "failed_at": {
            "description": "Timestamp describing when an OutboundTransfer changed status to `failed`",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "posted_at": {
            "description": "Timestamp describing when an OutboundTransfer changed status to `posted`",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "returned_at": {
            "description": "Timestamp describing when an OutboundTransfer changed status to `returned`",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "canceled_at",
          "failed_at",
          "posted_at",
          "returned_at"
        ],
        "title": "TreasuryOutboundTransfersResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "StatusTransitions",
          "in_class": "treasury.outbound_transfer"
        }
      },
      "treasury_received_credits_resource_linked_flows": {
        "description": "",
        "properties": {
          "credit_reversal": {
            "description": "The CreditReversal created as a result of this ReceivedCredit being reversed.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issuing_authorization": {
            "description": "Set if the ReceivedCredit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issuing_transaction": {
            "description": "Set if the ReceivedCredit is also viewable as an [Issuing transaction](https://stripe.com/docs/api#issuing_transactions) object.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "source_flow": {
            "description": "ID of the source flow. Set if `network` is `stripe` and the source flow is visible to the user. Examples of source flows include OutboundPayments, payouts, or CreditReversals.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "source_flow_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/treasury_received_credits_resource_source_flows_details"
              }
            ],
            "description": "The expandable object of the source flow.",
            "nullable": true
          },
          "source_flow_type": {
            "description": "The type of flow that originated the ReceivedCredit (for example, `outbound_payment`).",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "credit_reversal",
          "issuing_authorization",
          "issuing_transaction",
          "source_flow",
          "source_flow_details",
          "source_flow_type"
        ],
        "title": "TreasuryReceivedCreditsResourceLinkedFlows",
        "type": "object",
        "x-expandableFields": [
          "source_flow_details"
        ],
        "x-stripeResource": {
          "class_name": "LinkedFlows",
          "in_class": "treasury.received_credit",
          "inner_classes": [
            "treasury_received_credits_resource_source_flows_details"
          ]
        }
      },
      "treasury_received_credits_resource_reversal_details": {
        "description": "",
        "properties": {
          "deadline": {
            "description": "Time before which a ReceivedCredit can be reversed.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "restricted_reason": {
            "description": "Set if a ReceivedCredit cannot be reversed.",
            "enum": [
              "already_reversed",
              "deadline_passed",
              "network_restricted",
              "other",
              "source_flow_restricted"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "deadline",
          "restricted_reason"
        ],
        "title": "TreasuryReceivedCreditsResourceReversalDetails",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ReversalDetails",
          "in_class": "treasury.received_credit"
        }
      },
      "treasury_received_credits_resource_source_flows_details": {
        "description": "",
        "properties": {
          "credit_reversal": {
            "$ref": "#/components/schemas/treasury.credit_reversal"
          },
          "outbound_payment": {
            "$ref": "#/components/schemas/treasury.outbound_payment"
          },
          "payout": {
            "$ref": "#/components/schemas/payout"
          },
          "type": {
            "description": "The type of the source flow that originated the ReceivedCredit.",
            "enum": [
              "credit_reversal",
              "other",
              "outbound_payment",
              "payout"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          }
        },
        "required": [
          "type"
        ],
        "title": "TreasuryReceivedCreditsResourceSourceFlowsDetails",
        "type": "object",
        "x-expandableFields": [
          "credit_reversal",
          "outbound_payment",
          "payout"
        ],
        "x-stripeResource": {
          "class_name": "SourceFlowDetails",
          "in_class": "treasury_received_credits_resource_linked_flows"
        }
      },
      "treasury_received_credits_resource_status_transitions": {
        "description": "",
        "properties": {
          "posted_at": {
            "description": "Timestamp describing when the CreditReversal changed status to `posted`",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "posted_at"
        ],
        "title": "TreasuryReceivedCreditsResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "StatusTransitions",
          "in_class": "treasury.received_credit"
        }
      },
      "treasury_received_debits_resource_debit_reversal_linked_flows": {
        "description": "",
        "properties": {
          "issuing_dispute": {
            "description": "Set if there is an Issuing dispute associated with the DebitReversal.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "issuing_dispute"
        ],
        "title": "TreasuryReceivedDebitsResourceDebitReversalLinkedFlows",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "LinkedFlows",
          "in_class": "treasury.debit_reversal"
        }
      },
      "treasury_received_debits_resource_linked_flows": {
        "description": "",
        "properties": {
          "debit_reversal": {
            "description": "The DebitReversal created as a result of this ReceivedDebit being reversed.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "inbound_transfer": {
            "description": "Set if the ReceivedDebit is associated with an InboundTransfer's return of funds.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issuing_authorization": {
            "description": "Set if the ReceivedDebit was created due to an [Issuing Authorization](https://stripe.com/docs/api#issuing_authorizations) object.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "issuing_transaction": {
            "description": "Set if the ReceivedDebit is also viewable as an [Issuing Dispute](https://stripe.com/docs/api#issuing_disputes) object.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "debit_reversal",
          "inbound_transfer",
          "issuing_authorization",
          "issuing_transaction"
        ],
        "title": "TreasuryReceivedDebitsResourceLinkedFlows",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "LinkedFlows",
          "in_class": "treasury.received_debit"
        }
      },
      "treasury_received_debits_resource_reversal_details": {
        "description": "",
        "properties": {
          "deadline": {
            "description": "Time before which a ReceivedDebit can be reversed.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "restricted_reason": {
            "description": "Set if a ReceivedDebit can't be reversed.",
            "enum": [
              "already_reversed",
              "deadline_passed",
              "network_restricted",
              "other",
              "source_flow_restricted"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "deadline",
          "restricted_reason"
        ],
        "title": "TreasuryReceivedDebitsResourceReversalDetails",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "ReversalDetails",
          "in_class": "treasury.received_debit"
        }
      },
      "treasury_received_debits_resource_status_transitions": {
        "description": "",
        "properties": {
          "completed_at": {
            "description": "Timestamp describing when the DebitReversal changed status to `completed`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "completed_at"
        ],
        "title": "TreasuryReceivedDebitsResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "StatusTransitions",
          "in_class": "treasury.received_debit"
        }
      },
      "treasury_shared_resource_billing_details": {
        "description": "",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "email": {
            "description": "Email address.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "name": {
            "description": "Full name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "address",
          "email",
          "name"
        ],
        "title": "TreasurySharedResourceBillingDetails",
        "type": "object",
        "x-expandableFields": [
          "address"
        ],
        "x-stripeResource": {
          "class_name": "BillingDetails",
          "in_class": "treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details"
        }
      },
      "treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details": {
        "description": "",
        "properties": {
          "balance": {
            "description": "Set when `type` is `balance`.",
            "enum": [
              "payments"
            ],
            "type": "string"
          },
          "billing_details": {
            "$ref": "#/components/schemas/treasury_shared_resource_billing_details"
          },
          "financial_account": {
            "$ref": "#/components/schemas/received_payment_method_details_financial_account"
          },
          "issuing_card": {
            "description": "Set when `type` is `issuing_card`. This is an [Issuing Card](https://stripe.com/docs/api#issuing_cards) ID.",
            "maxLength": 5000,
            "type": "string"
          },
          "type": {
            "description": "Polymorphic type matching the originating money movement's source. This can be an external account, a Stripe balance, or a FinancialAccount.",
            "enum": [
              "balance",
              "financial_account",
              "issuing_card",
              "stripe",
              "us_bank_account"
            ],
            "type": "string",
            "x-stripeBypassValidation": true
          },
          "us_bank_account": {
            "$ref": "#/components/schemas/treasury_shared_resource_initiating_payment_method_details_us_bank_account"
          }
        },
        "required": [
          "billing_details",
          "type"
        ],
        "title": "TreasurySharedResourceInitiatingPaymentMethodDetailsInitiatingPaymentMethodDetails",
        "type": "object",
        "x-expandableFields": [
          "billing_details",
          "financial_account",
          "us_bank_account"
        ],
        "x-stripeResource": {
          "class_name": "InitiatingPaymentMethodDetails",
          "in_class": "treasury.received_credit",
          "inner_classes": [
            "received_payment_method_details_financial_account",
            "treasury_shared_resource_billing_details",
            "treasury_shared_resource_initiating_payment_method_details_us_bank_account"
          ]
        }
      },
      "treasury_shared_resource_initiating_payment_method_details_us_bank_account": {
        "description": "",
        "properties": {
          "bank_name": {
            "description": "Bank name.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "last4": {
            "description": "The last four digits of the bank account number.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "routing_number": {
            "description": "The routing number for the bank account.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "bank_name",
          "last4",
          "routing_number"
        ],
        "title": "TreasurySharedResourceInitiatingPaymentMethodDetailsUSBankAccount",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "UsBankAccount",
          "in_class": "treasury_shared_resource_initiating_payment_method_details_initiating_payment_method_details"
        }
      },
      "treasury_transactions_resource_abstract_transaction_resource_status_transitions": {
        "description": "",
        "properties": {
          "posted_at": {
            "description": "Timestamp describing when the Transaction changed status to `posted`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          },
          "void_at": {
            "description": "Timestamp describing when the Transaction changed status to `void`.",
            "format": "unix-time",
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "posted_at",
          "void_at"
        ],
        "title": "TreasuryTransactionsResourceAbstractTransactionResourceStatusTransitions",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "StatusTransitions",
          "in_class": "treasury.transaction"
        }
      },
      "treasury_transactions_resource_balance_impact": {
        "description": "Change to a FinancialAccount's balance",
        "properties": {
          "cash": {
            "description": "The change made to funds the user can spend right now.",
            "type": "integer"
          },
          "inbound_pending": {
            "description": "The change made to funds that are not spendable yet, but will become available at a later time.",
            "type": "integer"
          },
          "outbound_pending": {
            "description": "The change made to funds in the account, but not spendable because they are being held for pending outbound flows.",
            "type": "integer"
          }
        },
        "required": [
          "cash",
          "inbound_pending",
          "outbound_pending"
        ],
        "title": "TreasuryTransactionsResourceBalanceImpact",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "BalanceImpact",
          "in_class": "treasury.transaction"
        }
      },
      "treasury_transactions_resource_flow_details": {
        "description": "",
        "properties": {
          "credit_reversal": {
            "$ref": "#/components/schemas/treasury.credit_reversal"
          },
          "debit_reversal": {
            "$ref": "#/components/schemas/treasury.debit_reversal"
          },
          "inbound_transfer": {
            "$ref": "#/components/schemas/treasury.inbound_transfer"
          },
          "issuing_authorization": {
            "$ref": "#/components/schemas/issuing.authorization"
          },
          "outbound_payment": {
            "$ref": "#/components/schemas/treasury.outbound_payment"
          },
          "outbound_transfer": {
            "$ref": "#/components/schemas/treasury.outbound_transfer"
          },
          "received_credit": {
            "$ref": "#/components/schemas/treasury.received_credit"
          },
          "received_debit": {
            "$ref": "#/components/schemas/treasury.received_debit"
          },
          "type": {
            "description": "Type of the flow that created the Transaction. Set to the same value as `flow_type`.",
            "enum": [
              "credit_reversal",
              "debit_reversal",
              "inbound_transfer",
              "issuing_authorization",
              "other",
              "outbound_payment",
              "outbound_transfer",
              "received_credit",
              "received_debit"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "title": "TreasuryTransactionsResourceFlowDetails",
        "type": "object",
        "x-expandableFields": [
          "credit_reversal",
          "debit_reversal",
          "inbound_transfer",
          "issuing_authorization",
          "outbound_payment",
          "outbound_transfer",
          "received_credit",
          "received_debit"
        ],
        "x-stripeResource": {
          "class_name": "FlowDetails",
          "in_package": "Treasury"
        }
      },
      "us_bank_account_networks": {
        "description": "",
        "properties": {
          "preferred": {
            "description": "The preferred network.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "supported": {
            "description": "All supported networks.",
            "items": {
              "enum": [
                "ach",
                "us_domestic_wire"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "preferred",
          "supported"
        ],
        "title": "us_bank_account_networks",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Networks",
          "in_class": "payment_method_us_bank_account"
        }
      },
      "usage_record": {
        "description": "Usage records allow you to report customer usage and metrics to Stripe for\nmetered billing of subscription prices.\n\nRelated guide: [Metered Billing](https://stripe.com/docs/billing/subscriptions/metered-billing).",
        "properties": {
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "usage_record"
            ],
            "type": "string"
          },
          "quantity": {
            "description": "The usage quantity for the specified date.",
            "type": "integer"
          },
          "subscription_item": {
            "description": "The ID of the subscription item this usage record contains data for.",
            "maxLength": 5000,
            "type": "string"
          },
          "timestamp": {
            "description": "The timestamp when this usage occurred.",
            "format": "unix-time",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "livemode",
          "object",
          "quantity",
          "subscription_item",
          "timestamp"
        ],
        "title": "UsageRecord",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "usage_record",
        "x-stripeOperations": [
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "custom",
            "operation": "post",
            "path": "/v1/subscription_items/{subscription_item}/usage_records"
          }
        ],
        "x-stripeResource": {
          "class_name": "UsageRecord",
          "in_package": ""
        }
      },
      "usage_record_summary": {
        "description": "",
        "properties": {
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "invoice": {
            "description": "The invoice in which this usage period has been billed for.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "usage_record_summary"
            ],
            "type": "string"
          },
          "period": {
            "$ref": "#/components/schemas/period"
          },
          "subscription_item": {
            "description": "The ID of the subscription item this summary is describing.",
            "maxLength": 5000,
            "type": "string"
          },
          "total_usage": {
            "description": "The total usage within this usage period.",
            "type": "integer"
          }
        },
        "required": [
          "id",
          "invoice",
          "livemode",
          "object",
          "period",
          "subscription_item",
          "total_usage"
        ],
        "title": "UsageRecordSummary",
        "type": "object",
        "x-expandableFields": [
          "period"
        ],
        "x-resourceId": "usage_record_summary",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/subscription_items/{subscription_item}/usage_record_summaries"
          }
        ],
        "x-stripeResource": {
          "class_name": "UsageRecordSummary",
          "has_collection_class": true,
          "in_package": "",
          "inner_classes": [
            "period"
          ]
        }
      },
      "verification_session_redaction": {
        "description": "",
        "properties": {
          "status": {
            "description": "Indicates whether this object and its related objects have been redacted or not.",
            "enum": [
              "processing",
              "redacted"
            ],
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "title": "verification_session_redaction",
        "type": "object",
        "x-expandableFields": [],
        "x-stripeResource": {
          "class_name": "Redaction",
          "in_class": "identity.verification_session"
        }
      },
      "webhook_endpoint": {
        "description": "You can configure [webhook endpoints](https://stripe.com/docs/webhooks/) via the API to be\nnotified about events that happen in your Stripe account or connected\naccounts.\n\nMost users configure webhooks from [the dashboard](https://dashboard.stripe.com/webhooks), which provides a user interface for registering and testing your webhook endpoints.\n\nRelated guide: [Setting up Webhooks](https://stripe.com/docs/webhooks/configure).",
        "properties": {
          "api_version": {
            "description": "The API version events are rendered as for this webhook endpoint.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "application": {
            "description": "The ID of the associated Connect application.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "created": {
            "description": "Time at which the object was created. Measured in seconds since the Unix epoch.",
            "format": "unix-time",
            "type": "integer"
          },
          "description": {
            "description": "An optional description of what the webhook is used for.",
            "maxLength": 5000,
            "nullable": true,
            "type": "string"
          },
          "enabled_events": {
            "description": "The list of events to enable for this endpoint. `['*']` indicates that all events are enabled, except those that require explicit selection.",
            "items": {
              "maxLength": 5000,
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Unique identifier for the object.",
            "maxLength": 5000,
            "type": "string"
          },
          "livemode": {
            "description": "Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {
              "maxLength": 500,
              "type": "string"
            },
            "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.",
            "type": "object"
          },
          "object": {
            "description": "String representing the object's type. Objects of the same type share the same value.",
            "enum": [
              "webhook_endpoint"
            ],
            "type": "string"
          },
          "secret": {
            "description": "The endpoint's secret, used to generate [webhook signatures](https://stripe.com/docs/webhooks/signatures). Only returned at creation.",
            "maxLength": 5000,
            "type": "string"
          },
          "status": {
            "description": "The status of the webhook. It can be `enabled` or `disabled`.",
            "maxLength": 5000,
            "type": "string"
          },
          "url": {
            "description": "The URL of the webhook endpoint.",
            "maxLength": 5000,
            "type": "string"
          }
        },
        "required": [
          "api_version",
          "application",
          "created",
          "description",
          "enabled_events",
          "id",
          "livemode",
          "metadata",
          "object",
          "status",
          "url"
        ],
        "title": "NotificationWebhookEndpoint",
        "type": "object",
        "x-expandableFields": [],
        "x-resourceId": "webhook_endpoint",
        "x-stripeOperations": [
          {
            "method_name": "list",
            "method_on": "service",
            "method_type": "list",
            "operation": "get",
            "path": "/v1/webhook_endpoints"
          },
          {
            "method_name": "retrieve",
            "method_on": "service",
            "method_type": "retrieve",
            "operation": "get",
            "path": "/v1/webhook_endpoints/{webhook_endpoint}"
          },
          {
            "method_name": "create",
            "method_on": "service",
            "method_type": "create",
            "operation": "post",
            "path": "/v1/webhook_endpoints"
          },
          {
            "method_name": "update",
            "method_on": "service",
            "method_type": "update",
            "operation": "post",
            "path": "/v1/webhook_endpoints/{webhook_endpoint}"
          },
          {
            "method_name": "delete",
            "method_on": "service",
            "method_type": "delete",
            "operation": "delete",
            "path": "/v1/webhook_endpoints/{webhook_endpoint}"
          }
        ],
        "x-stripeResource": {
          "class_name": "WebhookEndpoint",
          "has_collection_class": true,
          "in_package": ""
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "description": "Basic HTTP authentication. Allowed headers-- Authorization: Basic <api_key> | Authorization: Basic <base64 hash of `api_key:`>",
        "scheme": "basic",
        "type": "http"
      },
      "bearerAuth": {
        "bearerFormat": "auth-scheme",
        "description": "Bearer HTTP authentication. Allowed headers-- Authorization: Bearer <api_key>",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "dev-platform@stripe.com",
      "name": "Stripe Dev Platform Team",
      "url": "https://stripe.com"
    },
    "description": "The Stripe REST API. Please see https://stripe.com/docs/api for more details.",
    "termsOfService": "https://stripe.com/us/terms/",
    "title": "Stripe API",
    "version": "2022-08-01",
    "x-stripeSpecFilename": "spec3.sdk"
  },
  "openapi": "3.0.0",
  "paths": {
    "/v1/account": {
      "get": {
        "description": "<p>Retrieves the details of an account.</p>",
        "operationId": "GetAccount",
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/account_links": {
      "post": {
        "description": "<p>Creates an AccountLink object that includes a single-use Stripe URL that the platform can redirect their user to in order to take them through the Connect Onboarding flow.</p>",
        "operationId": "PostAccountLinks",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account": {
                    "description": "The identifier of the account to create an account link for.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "collect": {
                    "description": "Which information the platform needs to collect from the user. One of `currently_due` or `eventually_due`. Default is `currently_due`.",
                    "enum": [
                      "currently_due",
                      "eventually_due"
                    ],
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "refresh_url": {
                    "description": "The URL the user will be redirected to if the account link is expired, has been previously-visited, or is otherwise invalid. The URL you specify should attempt to generate a new account link with the same parameters used to create the original account link, then redirect the user to the new account link's URL so they can continue with Connect Onboarding. If a new account link cannot be generated or the redirect fails you should display a useful error to the user.",
                    "type": "string"
                  },
                  "return_url": {
                    "description": "The URL that the user will be redirected to upon leaving or completing the linked flow.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of account link the user is requesting. Possible values are `account_onboarding` or `account_update`.",
                    "enum": [
                      "account_onboarding",
                      "account_update",
                      "custom_account_update",
                      "custom_account_verification"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  }
                },
                "required": [
                  "account",
                  "type"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account_link"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/accounts": {
      "get": {
        "description": "<p>Returns a list of accounts connected to your platform via <a href=\"/docs/connect\">Connect</a>. If you’re not a platform, the list is empty.</p>",
        "operationId": "GetAccounts",
        "parameters": [
          {
            "explode": true,
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "properties": {
                    "gt": {
                      "description": "Minimum value to filter by (exclusive)",
                      "type": "integer"
                    },
                    "gte": {
                      "description": "Minimum value to filter by (inclusive)",
                      "type": "integer"
                    },
                    "lt": {
                      "description": "Maximum value to filter by (exclusive)",
                      "type": "integer"
                    },
                    "lte": {
                      "description": "Maximum value to filter by (inclusive)",
                      "type": "integer"
                    }
                  },
                  "title": "range_query_specs",
                  "type": "object"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/account"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/accounts",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "AccountList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "post": {
        "description": "<p>With <a href=\"/docs/connect\">Connect</a>, you can create Stripe accounts for your users.\nTo do this, you’ll first need to <a href=\"https://dashboard.stripe.com/account/applications/settings\">register your platform</a>.</p>",
        "operationId": "PostAccounts",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "business_profile": {
                  "explode": true,
                  "style": "deepObject"
                },
                "capabilities": {
                  "explode": true,
                  "style": "deepObject"
                },
                "company": {
                  "explode": true,
                  "style": "deepObject"
                },
                "documents": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "individual": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "settings": {
                  "explode": true,
                  "style": "deepObject"
                },
                "tos_acceptance": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account_token": {
                    "description": "An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "business_profile": {
                    "description": "Business information about the account.",
                    "properties": {
                      "mcc": {
                        "description": "[The merchant category code for the account](https://stripe.com/docs/connect/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.",
                        "maxLength": 4,
                        "type": "string"
                      },
                      "name": {
                        "description": "The customer-facing business name.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "product_description": {
                        "description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes.",
                        "maxLength": 40000,
                        "type": "string"
                      },
                      "support_address": {
                        "description": "A publicly available mailing address for sending support issues to.",
                        "properties": {
                          "city": {
                            "description": "City, district, suburb, town, or village.",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Address line 1 (e.g., street, PO Box, or company name).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "ZIP or postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "State, county, province, or region.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "support_email": {
                        "description": "A publicly available email address for sending support issues to.",
                        "type": "string"
                      },
                      "support_phone": {
                        "description": "A publicly available phone number to call with support issues.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "support_url": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "A publicly available website for handling support issues."
                      },
                      "url": {
                        "description": "The business's publicly available website.",
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "business_profile_specs",
                    "type": "object"
                  },
                  "business_type": {
                    "description": "The business type.",
                    "enum": [
                      "company",
                      "government_entity",
                      "individual",
                      "non_profit"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "capabilities": {
                    "description": "Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.",
                    "properties": {
                      "acss_debit_payments": {
                        "description": "The acss_debit_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "affirm_payments": {
                        "description": "The affirm_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "afterpay_clearpay_payments": {
                        "description": "The afterpay_clearpay_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "au_becs_debit_payments": {
                        "description": "The au_becs_debit_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bacs_debit_payments": {
                        "description": "The bacs_debit_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bancontact_payments": {
                        "description": "The bancontact_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bank_transfer_payments": {
                        "description": "The bank_transfer_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "blik_payments": {
                        "description": "The blik_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "boleto_payments": {
                        "description": "The boleto_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "card_issuing": {
                        "description": "The card_issuing capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "card_payments": {
                        "description": "The card_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "cartes_bancaires_payments": {
                        "description": "The cartes_bancaires_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "eps_payments": {
                        "description": "The eps_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "fpx_payments": {
                        "description": "The fpx_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "giropay_payments": {
                        "description": "The giropay_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "grabpay_payments": {
                        "description": "The grabpay_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "ideal_payments": {
                        "description": "The ideal_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "jcb_payments": {
                        "description": "The jcb_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "klarna_payments": {
                        "description": "The klarna_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "konbini_payments": {
                        "description": "The konbini_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "legacy_payments": {
                        "description": "The legacy_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "link_payments": {
                        "description": "The link_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "oxxo_payments": {
                        "description": "The oxxo_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "p24_payments": {
                        "description": "The p24_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "paynow_payments": {
                        "description": "The paynow_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "promptpay_payments": {
                        "description": "The promptpay_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "sepa_debit_payments": {
                        "description": "The sepa_debit_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "sofort_payments": {
                        "description": "The sofort_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "tax_reporting_us_1099_k": {
                        "description": "The tax_reporting_us_1099_k capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "tax_reporting_us_1099_misc": {
                        "description": "The tax_reporting_us_1099_misc capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "transfers": {
                        "description": "The transfers capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "treasury": {
                        "description": "The treasury capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "us_bank_account_ach_payments": {
                        "description": "The us_bank_account_ach_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      }
                    },
                    "title": "capabilities_param",
                    "type": "object"
                  },
                  "company": {
                    "description": "Information about the company or business. This field is available for any `business_type`.",
                    "properties": {
                      "address": {
                        "description": "The company's primary address.",
                        "properties": {
                          "city": {
                            "description": "City, district, suburb, town, or village.",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Address line 1 (e.g., street, PO Box, or company name).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "ZIP or postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "State, county, province, or region.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "address_kana": {
                        "description": "The Kana variation of the company's primary address (Japan only).",
                        "properties": {
                          "city": {
                            "description": "City or ward.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Block or building number.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Building details.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "Postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "Prefecture.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "description": "Town or cho-me.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kana_specs",
                        "type": "object"
                      },
                      "address_kanji": {
                        "description": "The Kanji variation of the company's primary address (Japan only).",
                        "properties": {
                          "city": {
                            "description": "City or ward.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Block or building number.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Building details.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "Postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "Prefecture.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "description": "Town or cho-me.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kanji_specs",
                        "type": "object"
                      },
                      "directors_provided": {
                        "description": "Whether the company's directors have been provided. Set this Boolean to `true` after creating all the company's directors with [the Persons API](https://stripe.com/docs/api/persons) for accounts with a `relationship.director` requirement. This value is not automatically set to `true` after creating directors, so it needs to be updated to indicate all directors have been provided.",
                        "type": "boolean"
                      },
                      "executives_provided": {
                        "description": "Whether the company's executives have been provided. Set this Boolean to `true` after creating all the company's executives with [the Persons API](https://stripe.com/docs/api/persons) for accounts with a `relationship.executive` requirement.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The company's legal name.",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "name_kana": {
                        "description": "The Kana variation of the company's legal name (Japan only).",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "name_kanji": {
                        "description": "The Kanji variation of the company's legal name (Japan only).",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "owners_provided": {
                        "description": "Whether the company's owners have been provided. Set this Boolean to `true` after creating all the company's owners with [the Persons API](https://stripe.com/docs/api/persons) for accounts with a `relationship.owner` requirement.",
                        "type": "boolean"
                      },
                      "ownership_declaration": {
                        "description": "This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct.",
                        "properties": {
                          "date": {
                            "description": "The Unix timestamp marking when the beneficial owner attestation was made.",
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "ip": {
                            "description": "The IP address from which the beneficial owner attestation was made.",
                            "type": "string"
                          },
                          "user_agent": {
                            "description": "The user agent of the browser from which the beneficial owner attestation was made.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "company_ownership_declaration",
                        "type": "object"
                      },
                      "phone": {
                        "description": "The company's phone number (used for verification).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "registration_number": {
                        "description": "The identification number given to a company when it is registered or incorporated, if distinct from the identification number used for filing taxes. (Examples are the CIN for companies and LLP IN for partnerships in India, and the Company Registration Number in Hong Kong).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "structure": {
                        "description": "The category identifying the legal structure of the company or legal entity. See [Business structure](https://stripe.com/docs/connect/identity-verification#business-structure) for more details.",
                        "enum": [
                          "",
                          "free_zone_establishment",
                          "free_zone_llc",
                          "government_instrumentality",
                          "governmental_unit",
                          "incorporated_non_profit",
                          "limited_liability_partnership",
                          "llc",
                          "multi_member_llc",
                          "private_company",
                          "private_corporation",
                          "private_partnership",
                          "public_company",
                          "public_corporation",
                          "public_partnership",
                          "single_member_llc",
                          "sole_establishment",
                          "sole_proprietorship",
                          "tax_exempt_government_instrumentality",
                          "unincorporated_association",
                          "unincorporated_non_profit"
                        ],
                        "type": "string",
                        "x-stripeBypassValidation": true
                      },
                      "tax_id": {
                        "description": "The business ID number of the company, as appropriate for the company’s country. (Examples are an Employer ID Number in the U.S., a Business Number in Canada, or a Company Number in the UK.)",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "tax_id_registrar": {
                        "description": "The jurisdiction in which the `tax_id` is registered (Germany-based companies only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "vat_id": {
                        "description": "The VAT number of the company.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "verification": {
                        "description": "Information on the verification state of the company.",
                        "properties": {
                          "document": {
                            "description": "A document verifying the business.",
                            "properties": {
                              "back": {
                                "description": "The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "description": "The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "verification_document_specs",
                            "type": "object"
                          }
                        },
                        "title": "verification_specs",
                        "type": "object"
                      }
                    },
                    "title": "company_specs",
                    "type": "object"
                  },
                  "country": {
                    "description": "The country in which the account holder resides, or in which the business is legally established. This should be an ISO 3166-1 alpha-2 country code. For example, if you are in the United States and the business for which you're creating an account is legally represented in Canada, you would use `CA` as the country for the account being created. Available countries include [Stripe's global markets](https://stripe.com/global) as well as countries where [cross-border payouts](https://stripe.com/docs/connect/cross-border-payouts) are supported.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "default_currency": {
                    "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
                    "type": "string"
                  },
                  "documents": {
                    "description": "Documents that may be submitted to satisfy various informational requests.",
                    "properties": {
                      "bank_account_ownership_verification": {
                        "description": "One or more documents that support the [Bank account ownership verification](https://support.stripe.com/questions/bank-account-ownership-verification) requirement. Must be a document associated with the account’s primary active bank account that displays the last 4 digits of the account number, either a statement or a voided check.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_license": {
                        "description": "One or more documents that demonstrate proof of a company's license to operate.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_memorandum_of_association": {
                        "description": "One or more documents showing the company's Memorandum of Association.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_ministerial_decree": {
                        "description": "(Certain countries only) One or more documents showing the ministerial decree legalizing the company's establishment.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_registration_verification": {
                        "description": "One or more documents that demonstrate proof of a company's registration with the appropriate local authorities.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_tax_id_verification": {
                        "description": "One or more documents that demonstrate proof of a company's tax ID.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "proof_of_registration": {
                        "description": "One or more documents showing the company’s proof of registration with the national business registry.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      }
                    },
                    "title": "documents_specs",
                    "type": "object"
                  },
                  "email": {
                    "description": "The email address of the account holder. This is only to make the account easier to identify to you. Stripe only emails Custom accounts with your consent.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "external_account": {
                    "description": "A card or bank account to attach to the account for receiving [payouts](https://stripe.com/docs/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary, as documented in the `external_account` parameter for [bank account](https://stripe.com/docs/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](https://stripe.com/docs/api#account_create_bank_account) or [card creation](https://stripe.com/docs/api#account_create_card) APIs.",
                    "maxLength": 5000,
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "individual": {
                    "description": "Information about the person represented by the account. This field is null unless `business_type` is set to `individual`.",
                    "properties": {
                      "address": {
                        "description": "The individual's primary address.",
                        "properties": {
                          "city": {
                            "description": "City, district, suburb, town, or village.",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Address line 1 (e.g., street, PO Box, or company name).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "ZIP or postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "State, county, province, or region.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "address_kana": {
                        "description": "The Kana variation of the the individual's primary address (Japan only).",
                        "properties": {
                          "city": {
                            "description": "City or ward.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Block or building number.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Building details.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "Postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "Prefecture.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "description": "Town or cho-me.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kana_specs",
                        "type": "object"
                      },
                      "address_kanji": {
                        "description": "The Kanji variation of the the individual's primary address (Japan only).",
                        "properties": {
                          "city": {
                            "description": "City or ward.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Block or building number.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Building details.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "Postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "Prefecture.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "description": "Town or cho-me.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kanji_specs",
                        "type": "object"
                      },
                      "dob": {
                        "anyOf": [
                          {
                            "properties": {
                              "day": {
                                "description": "The day of birth, between 1 and 31.",
                                "type": "integer"
                              },
                              "month": {
                                "description": "The month of birth, between 1 and 12.",
                                "type": "integer"
                              },
                              "year": {
                                "description": "The four-digit year of birth.",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "day",
                              "month",
                              "year"
                            ],
                            "title": "date_of_birth_specs",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "The individual's date of birth."
                      },
                      "email": {
                        "description": "The individual's email address.",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "The individual's first name.",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "first_name_kana": {
                        "description": "The Kana variation of the the individual's first name (Japan only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "first_name_kanji": {
                        "description": "The Kanji variation of the individual's first name (Japan only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "full_name_aliases": {
                        "anyOf": [
                          {
                            "items": {
                              "maxLength": 300,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "A list of alternate names or aliases that the individual is known by."
                      },
                      "gender": {
                        "description": "The individual's gender (International regulations require either \"male\" or \"female\").",
                        "type": "string"
                      },
                      "id_number": {
                        "description": "The government-issued ID number of the individual, as appropriate for the representative’s country. (Examples are a Social Security Number in the U.S., or a Social Insurance Number in Canada). Instead of the number itself, you can also provide a [PII token created with Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "id_number_secondary": {
                        "description": "The government-issued secondary ID number of the individual, as appropriate for the representative's country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token created with Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "last_name": {
                        "description": "The individual's last name.",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "last_name_kana": {
                        "description": "The Kana variation of the individual's last name (Japan only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "last_name_kanji": {
                        "description": "The Kanji variation of the individual's last name (Japan only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "maiden_name": {
                        "description": "The individual's maiden name.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "metadata": {
                        "anyOf": [
                          {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                      },
                      "phone": {
                        "description": "The individual's phone number.",
                        "type": "string"
                      },
                      "political_exposure": {
                        "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
                        "enum": [
                          "existing",
                          "none"
                        ],
                        "type": "string"
                      },
                      "registered_address": {
                        "description": "The individual's registered address.",
                        "properties": {
                          "city": {
                            "description": "City, district, suburb, town, or village.",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Address line 1 (e.g., street, PO Box, or company name).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "ZIP or postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "State, county, province, or region.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "ssn_last_4": {
                        "description": "The last four digits of the individual's Social Security Number (U.S. only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "verification": {
                        "description": "The individual's verification document information.",
                        "properties": {
                          "additional_document": {
                            "description": "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company.",
                            "properties": {
                              "back": {
                                "description": "The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "description": "The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "person_verification_document_specs",
                            "type": "object"
                          },
                          "document": {
                            "description": "An identifying document, either a passport or local ID card.",
                            "properties": {
                              "back": {
                                "description": "The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "description": "The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "person_verification_document_specs",
                            "type": "object"
                          }
                        },
                        "title": "person_verification_specs",
                        "type": "object"
                      }
                    },
                    "title": "individual_specs",
                    "type": "object"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "settings": {
                    "description": "Options for customizing how the account functions within Stripe.",
                    "properties": {
                      "branding": {
                        "description": "Settings used to apply the account's branding to email receipts, invoices, Checkout, and other products.",
                        "properties": {
                          "icon": {
                            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An icon for the account. Must be square and at least 128px x 128px.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "logo": {
                            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for the account that will be used in Checkout instead of the icon and without the account's name next to it if provided. Must be at least 128px x 128px.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "primary_color": {
                            "description": "A CSS hex color value representing the primary branding color for this account.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "secondary_color": {
                            "description": "A CSS hex color value representing the secondary branding color for this account.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "branding_settings_specs",
                        "type": "object"
                      },
                      "card_issuing": {
                        "description": "Settings specific to the account's use of the Card Issuing product.",
                        "properties": {
                          "tos_acceptance": {
                            "description": "Details on the account's acceptance of the [Stripe Issuing Terms and Disclosures](https://stripe.com/docs/issuing/connect/tos_acceptance).",
                            "properties": {
                              "date": {
                                "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "ip": {
                                "description": "The IP address from which the account representative accepted the service agreement.",
                                "type": "string"
                              },
                              "user_agent": {
                                "description": "The user agent of the browser from which the account representative accepted the service agreement.",
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "title": "settings_terms_of_service_specs",
                            "type": "object"
                          }
                        },
                        "title": "card_issuing_settings_specs",
                        "type": "object"
                      },
                      "card_payments": {
                        "description": "Settings specific to card charging on the account.",
                        "properties": {
                          "decline_on": {
                            "description": "Automatically declines certain charge types regardless of whether the card issuer accepted or declined the charge.",
                            "properties": {
                              "avs_failure": {
                                "description": "Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.",
                                "type": "boolean"
                              },
                              "cvc_failure": {
                                "description": "Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.",
                                "type": "boolean"
                              }
                            },
                            "title": "decline_charge_on_specs",
                            "type": "object"
                          },
                          "statement_descriptor_prefix": {
                            "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. `statement_descriptor_prefix` is useful for maximizing descriptor space for the dynamic portion.",
                            "maxLength": 10,
                            "type": "string"
                          },
                          "statement_descriptor_prefix_kana": {
                            "anyOf": [
                              {
                                "maxLength": 10,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion."
                          },
                          "statement_descriptor_prefix_kanji": {
                            "anyOf": [
                              {
                                "maxLength": 10,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion."
                          }
                        },
                        "title": "card_payments_settings_specs",
                        "type": "object"
                      },
                      "payments": {
                        "description": "Settings that apply across payment methods for charging on the account.",
                        "properties": {
                          "statement_descriptor": {
                            "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                            "maxLength": 22,
                            "type": "string"
                          },
                          "statement_descriptor_kana": {
                            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only).",
                            "maxLength": 22,
                            "type": "string"
                          },
                          "statement_descriptor_kanji": {
                            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only).",
                            "maxLength": 22,
                            "type": "string"
                          }
                        },
                        "title": "payments_settings_specs",
                        "type": "object"
                      },
                      "payouts": {
                        "description": "Settings specific to the account's payouts.",
                        "properties": {
                          "debit_negative_balances": {
                            "description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](https://stripe.com/docs/connect/account-balances).",
                            "type": "boolean"
                          },
                          "schedule": {
                            "description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](https://stripe.com/docs/connect/bank-transfers#payout-information) documentation.",
                            "properties": {
                              "delay_days": {
                                "anyOf": [
                                  {
                                    "enum": [
                                      "minimum"
                                    ],
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ],
                                "description": "The number of days charge funds are held before being paid out. May also be set to `minimum`, representing the lowest available value for the account country. Default is `minimum`. The `delay_days` parameter does not apply when the `interval` is `manual`."
                              },
                              "interval": {
                                "description": "How frequently available funds are paid out. One of: `daily`, `manual`, `weekly`, or `monthly`. Default is `daily`.",
                                "enum": [
                                  "daily",
                                  "manual",
                                  "monthly",
                                  "weekly"
                                ],
                                "maxLength": 5000,
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "monthly_anchor": {
                                "description": "The day of the month when available funds are paid out, specified as a number between 1--31. Payouts nominally scheduled between the 29th and 31st of the month are instead sent on the last day of a shorter month. Required and applicable only if `interval` is `monthly`.",
                                "type": "integer"
                              },
                              "weekly_anchor": {
                                "description": "The day of the week when available funds are paid out, specified as `monday`, `tuesday`, etc. (required and applicable only if `interval` is `weekly`.)",
                                "enum": [
                                  "friday",
                                  "monday",
                                  "saturday",
                                  "sunday",
                                  "thursday",
                                  "tuesday",
                                  "wednesday"
                                ],
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "title": "transfer_schedule_specs",
                            "type": "object"
                          },
                          "statement_descriptor": {
                            "description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
                            "maxLength": 22,
                            "type": "string"
                          }
                        },
                        "title": "payout_settings_specs",
                        "type": "object"
                      },
                      "treasury": {
                        "description": "Settings specific to the account's Treasury FinancialAccounts.",
                        "properties": {
                          "tos_acceptance": {
                            "description": "Details on the account's acceptance of the Stripe Treasury Services Agreement.",
                            "properties": {
                              "date": {
                                "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "ip": {
                                "description": "The IP address from which the account representative accepted the service agreement.",
                                "type": "string"
                              },
                              "user_agent": {
                                "description": "The user agent of the browser from which the account representative accepted the service agreement.",
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "title": "settings_terms_of_service_specs",
                            "type": "object"
                          }
                        },
                        "title": "treasury_settings_specs",
                        "type": "object"
                      }
                    },
                    "title": "settings_specs",
                    "type": "object"
                  },
                  "tos_acceptance": {
                    "description": "Details on the account's acceptance of the [Stripe Services Agreement](https://stripe.com/docs/connect/updating-accounts#tos-acceptance).",
                    "properties": {
                      "date": {
                        "description": "The Unix timestamp marking when the account representative accepted their service agreement.",
                        "format": "unix-time",
                        "type": "integer"
                      },
                      "ip": {
                        "description": "The IP address from which the account representative accepted their service agreement.",
                        "type": "string"
                      },
                      "service_agreement": {
                        "description": "The user's service agreement type.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "The user agent of the browser from which the account representative accepted their service agreement.",
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "tos_acceptance_specs",
                    "type": "object"
                  },
                  "type": {
                    "description": "The type of Stripe account to create. May be one of `custom`, `express` or `standard`.",
                    "enum": [
                      "custom",
                      "express",
                      "standard"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/accounts/{account}": {
      "delete": {
        "description": "<p>With <a href=\"/docs/connect\">Connect</a>, you can delete accounts you manage.</p>\n\n<p>Accounts created using test-mode keys can be deleted at any time. Standard accounts created using live-mode keys cannot be deleted. Custom or Express accounts created using live-mode keys can only be deleted once all balances are zero.</p>\n\n<p>If you want to delete your own account, use the <a href=\"https://dashboard.stripe.com/account\">account information tab in your account settings</a> instead.</p>",
        "operationId": "DeleteAccountsAccount",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleted_account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "get": {
        "description": "<p>Retrieves the details of an account.</p>",
        "operationId": "GetAccountsAccount",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "post": {
        "description": "<p>Updates a <a href=\"/docs/connect/accounts\">connected account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are not supported for Standard accounts.</p>\n\n<p>To update your own account, use the <a href=\"https://dashboard.stripe.com/account\">Dashboard</a>. Refer to our <a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>",
        "operationId": "PostAccountsAccount",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "business_profile": {
                  "explode": true,
                  "style": "deepObject"
                },
                "capabilities": {
                  "explode": true,
                  "style": "deepObject"
                },
                "company": {
                  "explode": true,
                  "style": "deepObject"
                },
                "documents": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "individual": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "settings": {
                  "explode": true,
                  "style": "deepObject"
                },
                "tos_acceptance": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account_token": {
                    "description": "An [account token](https://stripe.com/docs/api#create_account_token), used to securely provide details to the account.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "business_profile": {
                    "description": "Business information about the account.",
                    "properties": {
                      "mcc": {
                        "description": "[The merchant category code for the account](https://stripe.com/docs/connect/setting-mcc). MCCs are used to classify businesses based on the goods or services they provide.",
                        "maxLength": 4,
                        "type": "string"
                      },
                      "name": {
                        "description": "The customer-facing business name.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "product_description": {
                        "description": "Internal-only description of the product sold by, or service provided by, the business. Used by Stripe for risk and underwriting purposes.",
                        "maxLength": 40000,
                        "type": "string"
                      },
                      "support_address": {
                        "description": "A publicly available mailing address for sending support issues to.",
                        "properties": {
                          "city": {
                            "description": "City, district, suburb, town, or village.",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Address line 1 (e.g., street, PO Box, or company name).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "ZIP or postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "State, county, province, or region.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "support_email": {
                        "description": "A publicly available email address for sending support issues to.",
                        "type": "string"
                      },
                      "support_phone": {
                        "description": "A publicly available phone number to call with support issues.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "support_url": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "A publicly available website for handling support issues."
                      },
                      "url": {
                        "description": "The business's publicly available website.",
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "business_profile_specs",
                    "type": "object"
                  },
                  "business_type": {
                    "description": "The business type.",
                    "enum": [
                      "company",
                      "government_entity",
                      "individual",
                      "non_profit"
                    ],
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "capabilities": {
                    "description": "Each key of the dictionary represents a capability, and each capability maps to its settings (e.g. whether it has been requested or not). Each capability will be inactive until you have provided its specific requirements and Stripe has verified them. An account may have some of its requested capabilities be active and some be inactive.",
                    "properties": {
                      "acss_debit_payments": {
                        "description": "The acss_debit_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "affirm_payments": {
                        "description": "The affirm_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "afterpay_clearpay_payments": {
                        "description": "The afterpay_clearpay_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "au_becs_debit_payments": {
                        "description": "The au_becs_debit_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bacs_debit_payments": {
                        "description": "The bacs_debit_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bancontact_payments": {
                        "description": "The bancontact_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "bank_transfer_payments": {
                        "description": "The bank_transfer_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "blik_payments": {
                        "description": "The blik_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "boleto_payments": {
                        "description": "The boleto_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "card_issuing": {
                        "description": "The card_issuing capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "card_payments": {
                        "description": "The card_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "cartes_bancaires_payments": {
                        "description": "The cartes_bancaires_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "eps_payments": {
                        "description": "The eps_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "fpx_payments": {
                        "description": "The fpx_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "giropay_payments": {
                        "description": "The giropay_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "grabpay_payments": {
                        "description": "The grabpay_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "ideal_payments": {
                        "description": "The ideal_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "jcb_payments": {
                        "description": "The jcb_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "klarna_payments": {
                        "description": "The klarna_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "konbini_payments": {
                        "description": "The konbini_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "legacy_payments": {
                        "description": "The legacy_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "link_payments": {
                        "description": "The link_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "oxxo_payments": {
                        "description": "The oxxo_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "p24_payments": {
                        "description": "The p24_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "paynow_payments": {
                        "description": "The paynow_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "promptpay_payments": {
                        "description": "The promptpay_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "sepa_debit_payments": {
                        "description": "The sepa_debit_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "sofort_payments": {
                        "description": "The sofort_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "tax_reporting_us_1099_k": {
                        "description": "The tax_reporting_us_1099_k capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "tax_reporting_us_1099_misc": {
                        "description": "The tax_reporting_us_1099_misc capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "transfers": {
                        "description": "The transfers capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "treasury": {
                        "description": "The treasury capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      },
                      "us_bank_account_ach_payments": {
                        "description": "The us_bank_account_ach_payments capability.",
                        "properties": {
                          "requested": {
                            "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                            "type": "boolean"
                          }
                        },
                        "title": "capability_param",
                        "type": "object"
                      }
                    },
                    "title": "capabilities_param",
                    "type": "object"
                  },
                  "company": {
                    "description": "Information about the company or business. This field is available for any `business_type`.",
                    "properties": {
                      "address": {
                        "description": "The company's primary address.",
                        "properties": {
                          "city": {
                            "description": "City, district, suburb, town, or village.",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Address line 1 (e.g., street, PO Box, or company name).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "ZIP or postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "State, county, province, or region.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "address_kana": {
                        "description": "The Kana variation of the company's primary address (Japan only).",
                        "properties": {
                          "city": {
                            "description": "City or ward.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Block or building number.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Building details.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "Postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "Prefecture.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "description": "Town or cho-me.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kana_specs",
                        "type": "object"
                      },
                      "address_kanji": {
                        "description": "The Kanji variation of the company's primary address (Japan only).",
                        "properties": {
                          "city": {
                            "description": "City or ward.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Block or building number.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Building details.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "Postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "Prefecture.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "description": "Town or cho-me.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kanji_specs",
                        "type": "object"
                      },
                      "directors_provided": {
                        "description": "Whether the company's directors have been provided. Set this Boolean to `true` after creating all the company's directors with [the Persons API](https://stripe.com/docs/api/persons) for accounts with a `relationship.director` requirement. This value is not automatically set to `true` after creating directors, so it needs to be updated to indicate all directors have been provided.",
                        "type": "boolean"
                      },
                      "executives_provided": {
                        "description": "Whether the company's executives have been provided. Set this Boolean to `true` after creating all the company's executives with [the Persons API](https://stripe.com/docs/api/persons) for accounts with a `relationship.executive` requirement.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The company's legal name.",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "name_kana": {
                        "description": "The Kana variation of the company's legal name (Japan only).",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "name_kanji": {
                        "description": "The Kanji variation of the company's legal name (Japan only).",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "owners_provided": {
                        "description": "Whether the company's owners have been provided. Set this Boolean to `true` after creating all the company's owners with [the Persons API](https://stripe.com/docs/api/persons) for accounts with a `relationship.owner` requirement.",
                        "type": "boolean"
                      },
                      "ownership_declaration": {
                        "description": "This hash is used to attest that the beneficial owner information provided to Stripe is both current and correct.",
                        "properties": {
                          "date": {
                            "description": "The Unix timestamp marking when the beneficial owner attestation was made.",
                            "format": "unix-time",
                            "type": "integer"
                          },
                          "ip": {
                            "description": "The IP address from which the beneficial owner attestation was made.",
                            "type": "string"
                          },
                          "user_agent": {
                            "description": "The user agent of the browser from which the beneficial owner attestation was made.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "company_ownership_declaration",
                        "type": "object"
                      },
                      "phone": {
                        "description": "The company's phone number (used for verification).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "registration_number": {
                        "description": "The identification number given to a company when it is registered or incorporated, if distinct from the identification number used for filing taxes. (Examples are the CIN for companies and LLP IN for partnerships in India, and the Company Registration Number in Hong Kong).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "structure": {
                        "description": "The category identifying the legal structure of the company or legal entity. See [Business structure](https://stripe.com/docs/connect/identity-verification#business-structure) for more details.",
                        "enum": [
                          "",
                          "free_zone_establishment",
                          "free_zone_llc",
                          "government_instrumentality",
                          "governmental_unit",
                          "incorporated_non_profit",
                          "limited_liability_partnership",
                          "llc",
                          "multi_member_llc",
                          "private_company",
                          "private_corporation",
                          "private_partnership",
                          "public_company",
                          "public_corporation",
                          "public_partnership",
                          "single_member_llc",
                          "sole_establishment",
                          "sole_proprietorship",
                          "tax_exempt_government_instrumentality",
                          "unincorporated_association",
                          "unincorporated_non_profit"
                        ],
                        "type": "string",
                        "x-stripeBypassValidation": true
                      },
                      "tax_id": {
                        "description": "The business ID number of the company, as appropriate for the company’s country. (Examples are an Employer ID Number in the U.S., a Business Number in Canada, or a Company Number in the UK.)",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "tax_id_registrar": {
                        "description": "The jurisdiction in which the `tax_id` is registered (Germany-based companies only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "vat_id": {
                        "description": "The VAT number of the company.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "verification": {
                        "description": "Information on the verification state of the company.",
                        "properties": {
                          "document": {
                            "description": "A document verifying the business.",
                            "properties": {
                              "back": {
                                "description": "The back of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "description": "The front of a document returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `additional_verification`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "verification_document_specs",
                            "type": "object"
                          }
                        },
                        "title": "verification_specs",
                        "type": "object"
                      }
                    },
                    "title": "company_specs",
                    "type": "object"
                  },
                  "default_currency": {
                    "description": "Three-letter ISO currency code representing the default currency for the account. This must be a currency that [Stripe supports in the account's country](https://stripe.com/docs/payouts).",
                    "type": "string"
                  },
                  "documents": {
                    "description": "Documents that may be submitted to satisfy various informational requests.",
                    "properties": {
                      "bank_account_ownership_verification": {
                        "description": "One or more documents that support the [Bank account ownership verification](https://support.stripe.com/questions/bank-account-ownership-verification) requirement. Must be a document associated with the account’s primary active bank account that displays the last 4 digits of the account number, either a statement or a voided check.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_license": {
                        "description": "One or more documents that demonstrate proof of a company's license to operate.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_memorandum_of_association": {
                        "description": "One or more documents showing the company's Memorandum of Association.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_ministerial_decree": {
                        "description": "(Certain countries only) One or more documents showing the ministerial decree legalizing the company's establishment.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_registration_verification": {
                        "description": "One or more documents that demonstrate proof of a company's registration with the appropriate local authorities.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "company_tax_id_verification": {
                        "description": "One or more documents that demonstrate proof of a company's tax ID.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      },
                      "proof_of_registration": {
                        "description": "One or more documents showing the company’s proof of registration with the national business registry.",
                        "properties": {
                          "files": {
                            "description": "One or more document ids returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `account_requirement`.",
                            "items": {
                              "maxLength": 500,
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "title": "documents_param",
                        "type": "object"
                      }
                    },
                    "title": "documents_specs",
                    "type": "object"
                  },
                  "email": {
                    "description": "The email address of the account holder. This is only to make the account easier to identify to you. Stripe only emails Custom accounts with your consent.",
                    "type": "string"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "external_account": {
                    "description": "A card or bank account to attach to the account for receiving [payouts](https://stripe.com/docs/connect/bank-debit-card-payouts) (you won’t be able to use it for top-ups). You can provide either a token, like the ones returned by [Stripe.js](https://stripe.com/docs/js), or a dictionary, as documented in the `external_account` parameter for [bank account](https://stripe.com/docs/api#account_create_bank_account) creation. <br><br>By default, providing an external account sets it as the new default external account for its currency, and deletes the old default if one exists. To add additional external accounts without replacing the existing default for the currency, use the [bank account](https://stripe.com/docs/api#account_create_bank_account) or [card creation](https://stripe.com/docs/api#account_create_card) APIs.",
                    "maxLength": 5000,
                    "type": "string",
                    "x-stripeBypassValidation": true
                  },
                  "individual": {
                    "description": "Information about the person represented by the account. This field is null unless `business_type` is set to `individual`.",
                    "properties": {
                      "address": {
                        "description": "The individual's primary address.",
                        "properties": {
                          "city": {
                            "description": "City, district, suburb, town, or village.",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Address line 1 (e.g., street, PO Box, or company name).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "ZIP or postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "State, county, province, or region.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "address_kana": {
                        "description": "The Kana variation of the the individual's primary address (Japan only).",
                        "properties": {
                          "city": {
                            "description": "City or ward.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Block or building number.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Building details.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "Postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "Prefecture.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "description": "Town or cho-me.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kana_specs",
                        "type": "object"
                      },
                      "address_kanji": {
                        "description": "The Kanji variation of the the individual's primary address (Japan only).",
                        "properties": {
                          "city": {
                            "description": "City or ward.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Block or building number.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Building details.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "Postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "Prefecture.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "town": {
                            "description": "Town or cho-me.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "japan_address_kanji_specs",
                        "type": "object"
                      },
                      "dob": {
                        "anyOf": [
                          {
                            "properties": {
                              "day": {
                                "description": "The day of birth, between 1 and 31.",
                                "type": "integer"
                              },
                              "month": {
                                "description": "The month of birth, between 1 and 12.",
                                "type": "integer"
                              },
                              "year": {
                                "description": "The four-digit year of birth.",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "day",
                              "month",
                              "year"
                            ],
                            "title": "date_of_birth_specs",
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "The individual's date of birth."
                      },
                      "email": {
                        "description": "The individual's email address.",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "The individual's first name.",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "first_name_kana": {
                        "description": "The Kana variation of the the individual's first name (Japan only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "first_name_kanji": {
                        "description": "The Kanji variation of the individual's first name (Japan only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "full_name_aliases": {
                        "anyOf": [
                          {
                            "items": {
                              "maxLength": 300,
                              "type": "string"
                            },
                            "type": "array"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "A list of alternate names or aliases that the individual is known by."
                      },
                      "gender": {
                        "description": "The individual's gender (International regulations require either \"male\" or \"female\").",
                        "type": "string"
                      },
                      "id_number": {
                        "description": "The government-issued ID number of the individual, as appropriate for the representative’s country. (Examples are a Social Security Number in the U.S., or a Social Insurance Number in Canada). Instead of the number itself, you can also provide a [PII token created with Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "id_number_secondary": {
                        "description": "The government-issued secondary ID number of the individual, as appropriate for the representative's country, will be used for enhanced verification checks. In Thailand, this would be the laser code found on the back of an ID card. Instead of the number itself, you can also provide a [PII token created with Stripe.js](https://stripe.com/docs/js/tokens_sources/create_token?type=pii).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "last_name": {
                        "description": "The individual's last name.",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "last_name_kana": {
                        "description": "The Kana variation of the individual's last name (Japan only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "last_name_kanji": {
                        "description": "The Kanji variation of the individual's last name (Japan only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "maiden_name": {
                        "description": "The individual's maiden name.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "metadata": {
                        "anyOf": [
                          {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "type": "object"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                      },
                      "phone": {
                        "description": "The individual's phone number.",
                        "type": "string"
                      },
                      "political_exposure": {
                        "description": "Indicates if the person or any of their representatives, family members, or other closely related persons, declares that they hold or have held an important public job or function, in any jurisdiction.",
                        "enum": [
                          "existing",
                          "none"
                        ],
                        "type": "string"
                      },
                      "registered_address": {
                        "description": "The individual's registered address.",
                        "properties": {
                          "city": {
                            "description": "City, district, suburb, town, or village.",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "country": {
                            "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "line1": {
                            "description": "Address line 1 (e.g., street, PO Box, or company name).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "line2": {
                            "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                            "maxLength": 200,
                            "type": "string"
                          },
                          "postal_code": {
                            "description": "ZIP or postal code.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "state": {
                            "description": "State, county, province, or region.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "address_specs",
                        "type": "object"
                      },
                      "ssn_last_4": {
                        "description": "The last four digits of the individual's Social Security Number (U.S. only).",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "verification": {
                        "description": "The individual's verification document information.",
                        "properties": {
                          "additional_document": {
                            "description": "A document showing address, either a passport, local ID card, or utility bill from a well-known utility company.",
                            "properties": {
                              "back": {
                                "description": "The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "description": "The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "person_verification_document_specs",
                            "type": "object"
                          },
                          "document": {
                            "description": "An identifying document, either a passport or local ID card.",
                            "properties": {
                              "back": {
                                "description": "The back of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              },
                              "front": {
                                "description": "The front of an ID returned by a [file upload](https://stripe.com/docs/api#create_file) with a `purpose` value of `identity_document`. The uploaded file needs to be a color image (smaller than 8,000px by 8,000px), in JPG, PNG, or PDF format, and less than 10 MB in size.",
                                "maxLength": 500,
                                "type": "string"
                              }
                            },
                            "title": "person_verification_document_specs",
                            "type": "object"
                          }
                        },
                        "title": "person_verification_specs",
                        "type": "object"
                      }
                    },
                    "title": "individual_specs",
                    "type": "object"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "settings": {
                    "description": "Options for customizing how the account functions within Stripe.",
                    "properties": {
                      "branding": {
                        "description": "Settings used to apply the account's branding to email receipts, invoices, Checkout, and other products.",
                        "properties": {
                          "icon": {
                            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An icon for the account. Must be square and at least 128px x 128px.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "logo": {
                            "description": "(ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo for the account that will be used in Checkout instead of the icon and without the account's name next to it if provided. Must be at least 128px x 128px.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "primary_color": {
                            "description": "A CSS hex color value representing the primary branding color for this account.",
                            "maxLength": 5000,
                            "type": "string"
                          },
                          "secondary_color": {
                            "description": "A CSS hex color value representing the secondary branding color for this account.",
                            "maxLength": 5000,
                            "type": "string"
                          }
                        },
                        "title": "branding_settings_specs",
                        "type": "object"
                      },
                      "card_issuing": {
                        "description": "Settings specific to the account's use of the Card Issuing product.",
                        "properties": {
                          "tos_acceptance": {
                            "description": "Details on the account's acceptance of the [Stripe Issuing Terms and Disclosures](https://stripe.com/docs/issuing/connect/tos_acceptance).",
                            "properties": {
                              "date": {
                                "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "ip": {
                                "description": "The IP address from which the account representative accepted the service agreement.",
                                "type": "string"
                              },
                              "user_agent": {
                                "description": "The user agent of the browser from which the account representative accepted the service agreement.",
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "title": "settings_terms_of_service_specs",
                            "type": "object"
                          }
                        },
                        "title": "card_issuing_settings_specs",
                        "type": "object"
                      },
                      "card_payments": {
                        "description": "Settings specific to card charging on the account.",
                        "properties": {
                          "decline_on": {
                            "description": "Automatically declines certain charge types regardless of whether the card issuer accepted or declined the charge.",
                            "properties": {
                              "avs_failure": {
                                "description": "Whether Stripe automatically declines charges with an incorrect ZIP or postal code. This setting only applies when a ZIP or postal code is provided and they fail bank verification.",
                                "type": "boolean"
                              },
                              "cvc_failure": {
                                "description": "Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.",
                                "type": "boolean"
                              }
                            },
                            "title": "decline_charge_on_specs",
                            "type": "object"
                          },
                          "statement_descriptor_prefix": {
                            "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge. `statement_descriptor_prefix` is useful for maximizing descriptor space for the dynamic portion.",
                            "maxLength": 10,
                            "type": "string"
                          },
                          "statement_descriptor_prefix_kana": {
                            "anyOf": [
                              {
                                "maxLength": 10,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kana` specified on the charge. `statement_descriptor_prefix_kana` is useful for maximizing descriptor space for the dynamic portion."
                          },
                          "statement_descriptor_prefix_kanji": {
                            "anyOf": [
                              {
                                "maxLength": 10,
                                "type": "string"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only). This field prefixes any dynamic `statement_descriptor_suffix_kanji` specified on the charge. `statement_descriptor_prefix_kanji` is useful for maximizing descriptor space for the dynamic portion."
                          }
                        },
                        "title": "card_payments_settings_specs",
                        "type": "object"
                      },
                      "payments": {
                        "description": "Settings that apply across payment methods for charging on the account.",
                        "properties": {
                          "statement_descriptor": {
                            "description": "The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic `statement_descriptor` specified on the charge.",
                            "maxLength": 22,
                            "type": "string"
                          },
                          "statement_descriptor_kana": {
                            "description": "The Kana variation of the default text that appears on credit card statements when a charge is made (Japan only).",
                            "maxLength": 22,
                            "type": "string"
                          },
                          "statement_descriptor_kanji": {
                            "description": "The Kanji variation of the default text that appears on credit card statements when a charge is made (Japan only).",
                            "maxLength": 22,
                            "type": "string"
                          }
                        },
                        "title": "payments_settings_specs",
                        "type": "object"
                      },
                      "payouts": {
                        "description": "Settings specific to the account's payouts.",
                        "properties": {
                          "debit_negative_balances": {
                            "description": "A Boolean indicating whether Stripe should try to reclaim negative balances from an attached bank account. For details, see [Understanding Connect Account Balances](https://stripe.com/docs/connect/account-balances).",
                            "type": "boolean"
                          },
                          "schedule": {
                            "description": "Details on when funds from charges are available, and when they are paid out to an external account. For details, see our [Setting Bank and Debit Card Payouts](https://stripe.com/docs/connect/bank-transfers#payout-information) documentation.",
                            "properties": {
                              "delay_days": {
                                "anyOf": [
                                  {
                                    "enum": [
                                      "minimum"
                                    ],
                                    "maxLength": 5000,
                                    "type": "string"
                                  },
                                  {
                                    "type": "integer"
                                  }
                                ],
                                "description": "The number of days charge funds are held before being paid out. May also be set to `minimum`, representing the lowest available value for the account country. Default is `minimum`. The `delay_days` parameter does not apply when the `interval` is `manual`."
                              },
                              "interval": {
                                "description": "How frequently available funds are paid out. One of: `daily`, `manual`, `weekly`, or `monthly`. Default is `daily`.",
                                "enum": [
                                  "daily",
                                  "manual",
                                  "monthly",
                                  "weekly"
                                ],
                                "maxLength": 5000,
                                "type": "string",
                                "x-stripeBypassValidation": true
                              },
                              "monthly_anchor": {
                                "description": "The day of the month when available funds are paid out, specified as a number between 1--31. Payouts nominally scheduled between the 29th and 31st of the month are instead sent on the last day of a shorter month. Required and applicable only if `interval` is `monthly`.",
                                "type": "integer"
                              },
                              "weekly_anchor": {
                                "description": "The day of the week when available funds are paid out, specified as `monday`, `tuesday`, etc. (required and applicable only if `interval` is `weekly`.)",
                                "enum": [
                                  "friday",
                                  "monday",
                                  "saturday",
                                  "sunday",
                                  "thursday",
                                  "tuesday",
                                  "wednesday"
                                ],
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "title": "transfer_schedule_specs",
                            "type": "object"
                          },
                          "statement_descriptor": {
                            "description": "The text that appears on the bank account statement for payouts. If not set, this defaults to the platform's bank descriptor as set in the Dashboard.",
                            "maxLength": 22,
                            "type": "string"
                          }
                        },
                        "title": "payout_settings_specs",
                        "type": "object"
                      },
                      "treasury": {
                        "description": "Settings specific to the account's Treasury FinancialAccounts.",
                        "properties": {
                          "tos_acceptance": {
                            "description": "Details on the account's acceptance of the Stripe Treasury Services Agreement.",
                            "properties": {
                              "date": {
                                "description": "The Unix timestamp marking when the account representative accepted the service agreement.",
                                "format": "unix-time",
                                "type": "integer"
                              },
                              "ip": {
                                "description": "The IP address from which the account representative accepted the service agreement.",
                                "type": "string"
                              },
                              "user_agent": {
                                "description": "The user agent of the browser from which the account representative accepted the service agreement.",
                                "maxLength": 5000,
                                "type": "string"
                              }
                            },
                            "title": "settings_terms_of_service_specs",
                            "type": "object"
                          }
                        },
                        "title": "treasury_settings_specs",
                        "type": "object"
                      }
                    },
                    "title": "settings_specs_update",
                    "type": "object"
                  },
                  "tos_acceptance": {
                    "description": "Details on the account's acceptance of the [Stripe Services Agreement](https://stripe.com/docs/connect/updating-accounts#tos-acceptance).",
                    "properties": {
                      "date": {
                        "description": "The Unix timestamp marking when the account representative accepted their service agreement.",
                        "format": "unix-time",
                        "type": "integer"
                      },
                      "ip": {
                        "description": "The IP address from which the account representative accepted their service agreement.",
                        "type": "string"
                      },
                      "service_agreement": {
                        "description": "The user's service agreement type.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "user_agent": {
                        "description": "The user agent of the browser from which the account representative accepted their service agreement.",
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "tos_acceptance_specs",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/accounts/{account}/capabilities": {
      "get": {
        "description": "<p>Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.</p>",
        "operationId": "GetAccountsAccountCapabilities",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/capability"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "ListAccountCapability",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/accounts/{account}/capabilities/{capability}": {
      "get": {
        "description": "<p>Retrieves information about the specified Account Capability.</p>",
        "operationId": "GetAccountsAccountCapabilitiesCapability",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "capability",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/capability"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "post": {
        "description": "<p>Updates an existing Account Capability.</p>",
        "operationId": "PostAccountsAccountCapabilitiesCapability",
        "parameters": [
          {
            "in": "path",
            "name": "account",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          },
          {
            "in": "path",
            "name": "capability",
            "required": true,
            "schema": {
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "requested": {
                    "description": "Passing true requests the capability for the account, if it is not already requested. A requested capability may not immediately become active. Any requirements to activate the capability are returned in the `requirements` arrays.",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/capability"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/invoiceitems/{invoiceitem}": {
      "delete": {
        "description": "<p>Deletes an invoice item, removing it from an invoice. Deleting invoice items is only possible when they’re not attached to invoices, or if it’s attached to a draft invoice.</p>",
        "operationId": "DeleteInvoiceitemsInvoiceitem",
        "parameters": [
          {
            "in": "path",
            "name": "invoiceitem",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleted_invoiceitem"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "get": {
        "description": "<p>Retrieves the invoice item with the given ID.</p>",
        "operationId": "GetInvoiceitemsInvoiceitem",
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "in": "path",
            "name": "invoiceitem",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invoiceitem"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "post": {
        "description": "<p>Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it’s attached to is closed.</p>",
        "operationId": "PostInvoiceitemsInvoiceitem",
        "parameters": [
          {
            "in": "path",
            "name": "invoiceitem",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "discounts": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "period": {
                  "explode": true,
                  "style": "deepObject"
                },
                "price_data": {
                  "explode": true,
                  "style": "deepObject"
                },
                "tax_code": {
                  "explode": true,
                  "style": "deepObject"
                },
                "tax_rates": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "amount": {
                    "description": "The integer amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. If you want to apply a credit to the customer's account, pass a negative amount.",
                    "type": "integer"
                  },
                  "description": {
                    "description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "discountable": {
                    "description": "Controls whether discounts apply to this invoice item. Defaults to false for prorations or negative invoice items, and true for all other invoice items. Cannot be set to true for prorations.",
                    "type": "boolean"
                  },
                  "discounts": {
                    "anyOf": [
                      {
                        "items": {
                          "properties": {
                            "coupon": {
                              "description": "ID of the coupon to create a new discount for.",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "discount": {
                              "description": "ID of an existing discount on the object (or one of its ancestors) to reuse.",
                              "maxLength": 5000,
                              "type": "string"
                            }
                          },
                          "title": "discounts_data_param",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The coupons & existing discounts which apply to the invoice item or invoice line item. Item discounts are applied before invoice discounts. Pass an empty string to remove previously-defined discounts."
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "period": {
                    "description": "The period associated with this invoice item. When set to different values, the period will be rendered on the invoice.",
                    "properties": {
                      "end": {
                        "description": "The end of the period, which must be greater than or equal to the start.",
                        "format": "unix-time",
                        "type": "integer"
                      },
                      "start": {
                        "description": "The start of the period.",
                        "format": "unix-time",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "end",
                      "start"
                    ],
                    "title": "period",
                    "type": "object"
                  },
                  "price": {
                    "description": "The ID of the price object.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "price_data": {
                    "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.",
                    "properties": {
                      "currency": {
                        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "type": "string"
                      },
                      "product": {
                        "description": "The ID of the product that this price will belong to.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "tax_behavior": {
                        "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
                        "enum": [
                          "exclusive",
                          "inclusive",
                          "unspecified"
                        ],
                        "type": "string"
                      },
                      "unit_amount": {
                        "description": "A positive integer in cents (or local equivalent) (or 0 for a free price) representing how much to charge.",
                        "type": "integer"
                      },
                      "unit_amount_decimal": {
                        "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
                        "format": "decimal",
                        "type": "string"
                      }
                    },
                    "required": [
                      "currency",
                      "product"
                    ],
                    "title": "one_time_price_data",
                    "type": "object"
                  },
                  "quantity": {
                    "description": "Non-negative integer. The quantity of units for the invoice item.",
                    "type": "integer"
                  },
                  "tax_behavior": {
                    "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
                    "enum": [
                      "exclusive",
                      "inclusive",
                      "unspecified"
                    ],
                    "type": "string"
                  },
                  "tax_code": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID."
                  },
                  "tax_rates": {
                    "anyOf": [
                      {
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The tax rates which apply to the invoice item. When set, the `default_tax_rates` on the invoice do not apply to this invoice item. Pass an empty string to remove previously-defined tax rates."
                  },
                  "unit_amount": {
                    "description": "The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount.",
                    "type": "integer"
                  },
                  "unit_amount_decimal": {
                    "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
                    "format": "decimal",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invoiceitem"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/invoices": {
      "get": {
        "description": "<p>You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.</p>",
        "operationId": "GetInvoices",
        "parameters": [
          {
            "description": "The collection method of the invoice to retrieve. Either `charge_automatically` or `send_invoice`.",
            "in": "query",
            "name": "collection_method",
            "required": false,
            "schema": {
              "enum": [
                "charge_automatically",
                "send_invoice"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "created",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "properties": {
                    "gt": {
                      "description": "Minimum value to filter by (exclusive)",
                      "type": "integer"
                    },
                    "gte": {
                      "description": "Minimum value to filter by (inclusive)",
                      "type": "integer"
                    },
                    "lt": {
                      "description": "Maximum value to filter by (exclusive)",
                      "type": "integer"
                    },
                    "lte": {
                      "description": "Maximum value to filter by (inclusive)",
                      "type": "integer"
                    }
                  },
                  "title": "range_query_specs",
                  "type": "object"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "Only return invoices for the customer specified by this customer ID.",
            "in": "query",
            "name": "customer",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "due_date",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "properties": {
                    "gt": {
                      "description": "Minimum value to filter by (exclusive)",
                      "type": "integer"
                    },
                    "gte": {
                      "description": "Minimum value to filter by (inclusive)",
                      "type": "integer"
                    },
                    "lt": {
                      "description": "Maximum value to filter by (exclusive)",
                      "type": "integer"
                    },
                    "lte": {
                      "description": "Maximum value to filter by (inclusive)",
                      "type": "integer"
                    }
                  },
                  "title": "range_query_specs",
                  "type": "object"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "enum": [
                "draft",
                "open",
                "paid",
                "uncollectible",
                "void"
              ],
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Only return invoices for the subscription specified by this subscription ID.",
            "in": "query",
            "name": "subscription",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/invoice"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "pattern": "^/v1/invoices",
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "InvoicesList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      },
      "post": {
        "description": "<p>This endpoint creates a draft invoice for a given customer. The invoice remains a draft until you <a href=\"#finalize_invoice\">finalize</a> the invoice, which allows you to <a href=\"#pay_invoice\">pay</a> or <a href=\"#send_invoice\">send</a> the invoice to your customers.</p>",
        "operationId": "PostInvoices",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {
                "account_tax_ids": {
                  "explode": true,
                  "style": "deepObject"
                },
                "automatic_tax": {
                  "explode": true,
                  "style": "deepObject"
                },
                "custom_fields": {
                  "explode": true,
                  "style": "deepObject"
                },
                "default_tax_rates": {
                  "explode": true,
                  "style": "deepObject"
                },
                "discounts": {
                  "explode": true,
                  "style": "deepObject"
                },
                "expand": {
                  "explode": true,
                  "style": "deepObject"
                },
                "from_invoice": {
                  "explode": true,
                  "style": "deepObject"
                },
                "metadata": {
                  "explode": true,
                  "style": "deepObject"
                },
                "payment_settings": {
                  "explode": true,
                  "style": "deepObject"
                },
                "rendering_options": {
                  "explode": true,
                  "style": "deepObject"
                },
                "transfer_data": {
                  "explode": true,
                  "style": "deepObject"
                }
              },
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "account_tax_ids": {
                    "anyOf": [
                      {
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The account tax IDs associated with the invoice. Only editable when the invoice is a draft."
                  },
                  "application_fee_amount": {
                    "description": "A fee in cents (or local equivalent) that will be applied to the invoice and transferred to the application owner's Stripe account. The request must be made with an OAuth key or the Stripe-Account header in order to take an application fee. For more information, see the application fees [documentation](https://stripe.com/docs/billing/invoices/connect#collecting-fees).",
                    "type": "integer"
                  },
                  "auto_advance": {
                    "description": "Controls whether Stripe will perform [automatic collection](https://stripe.com/docs/billing/invoices/workflow/#auto_advance) of the invoice. When `false`, the invoice's state will not automatically advance without an explicit action.",
                    "type": "boolean"
                  },
                  "automatic_tax": {
                    "description": "Settings for automatic tax lookup for this invoice.",
                    "properties": {
                      "enabled": {
                        "description": "Whether Stripe automatically computes tax on this invoice. Note that incompatible invoice items (invoice items with manually specified [tax rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`) cannot be added to automatic tax invoices.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "enabled"
                    ],
                    "title": "automatic_tax_param",
                    "type": "object"
                  },
                  "collection_method": {
                    "description": "Either `charge_automatically`, or `send_invoice`. When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer. When sending an invoice, Stripe will email this invoice to the customer with payment instructions. Defaults to `charge_automatically`.",
                    "enum": [
                      "charge_automatically",
                      "send_invoice"
                    ],
                    "type": "string"
                  },
                  "currency": {
                    "description": "The currency to create this invoice in. Defaults to that of `customer` if not specified.",
                    "type": "string"
                  },
                  "custom_fields": {
                    "anyOf": [
                      {
                        "items": {
                          "properties": {
                            "name": {
                              "description": "The name of the custom field. This may be up to 30 characters.",
                              "maxLength": 30,
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of the custom field. This may be up to 30 characters.",
                              "maxLength": 30,
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "value"
                          ],
                          "title": "custom_field_params",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "A list of up to 4 custom fields to be displayed on the invoice."
                  },
                  "customer": {
                    "description": "The ID of the customer who will be billed.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "days_until_due": {
                    "description": "The number of days from when the invoice is created until it is due. Valid only for invoices where `collection_method=send_invoice`.",
                    "type": "integer"
                  },
                  "default_payment_method": {
                    "description": "ID of the default payment method for the invoice. It must belong to the customer associated with the invoice. If not set, defaults to the subscription's default payment method, if any, or to the default payment method in the customer's invoice settings.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "default_source": {
                    "description": "ID of the default payment source for the invoice. It must belong to the customer associated with the invoice and be in a chargeable state. If not set, defaults to the subscription's default source, if any, or to the customer's default source.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "default_tax_rates": {
                    "description": "The tax rates that will apply to any line item that does not have `tax_rates` set.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "description": {
                    "description": "An arbitrary string attached to the object. Often useful for displaying to users. Referenced as 'memo' in the Dashboard.",
                    "maxLength": 1500,
                    "type": "string"
                  },
                  "discounts": {
                    "anyOf": [
                      {
                        "items": {
                          "properties": {
                            "coupon": {
                              "description": "ID of the coupon to create a new discount for.",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "discount": {
                              "description": "ID of an existing discount on the object (or one of its ancestors) to reuse.",
                              "maxLength": 5000,
                              "type": "string"
                            }
                          },
                          "title": "discounts_data_param",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The coupons to redeem into discounts for the invoice. If not specified, inherits the discount from the invoice's customer. Pass an empty string to avoid inheriting any discounts."
                  },
                  "due_date": {
                    "description": "The date on which payment for this invoice is due. Valid only for invoices where `collection_method=send_invoice`.",
                    "format": "unix-time",
                    "type": "integer"
                  },
                  "expand": {
                    "description": "Specifies which fields in the response should be expanded.",
                    "items": {
                      "maxLength": 5000,
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "footer": {
                    "description": "Footer to be displayed on the invoice.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "from_invoice": {
                    "description": "Revise an existing invoice. The new invoice will be created in `status=draft`. See the [revision documentation](https://stripe.com/docs/invoicing/invoice-revisions) for more details.",
                    "properties": {
                      "action": {
                        "description": "The relation between the new invoice and the original invoice. Currently, only 'revision' is permitted",
                        "enum": [
                          "revision"
                        ],
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "invoice": {
                        "description": "The `id` of the invoice that will be cloned.",
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "required": [
                      "action",
                      "invoice"
                    ],
                    "title": "from_invoice",
                    "type": "object"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "on_behalf_of": {
                    "description": "The account (if any) for which the funds of the invoice payment are intended. If set, the invoice will be presented with the branding and support information of the specified account. See the [Invoices with Connect](https://stripe.com/docs/billing/invoices/connect) documentation for details.",
                    "type": "string"
                  },
                  "payment_settings": {
                    "description": "Configuration settings for the PaymentIntent that is generated when the invoice is finalized.",
                    "properties": {
                      "default_mandate": {
                        "description": "ID of the mandate to be used for this invoice. It must correspond to the payment method used to pay the invoice, including the invoice's default_payment_method or default_source, if set.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "payment_method_options": {
                        "description": "Payment-method-specific configuration to provide to the invoice’s PaymentIntent.",
                        "properties": {
                          "acss_debit": {
                            "anyOf": [
                              {
                                "properties": {
                                  "mandate_options": {
                                    "description": "Additional fields for Mandate creation",
                                    "properties": {
                                      "transaction_type": {
                                        "description": "Transaction type of the mandate.",
                                        "enum": [
                                          "business",
                                          "personal"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "title": "mandate_options_param",
                                    "type": "object"
                                  },
                                  "verification_method": {
                                    "description": "Verification method for the intent",
                                    "enum": [
                                      "automatic",
                                      "instant",
                                      "microdeposits"
                                    ],
                                    "type": "string",
                                    "x-stripeBypassValidation": true
                                  }
                                },
                                "title": "invoice_payment_method_options_param",
                                "type": "object"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "If paying by `acss_debit`, this sub-hash contains details about the Canadian pre-authorized debit payment method options to pass to the invoice’s PaymentIntent."
                          },
                          "bancontact": {
                            "anyOf": [
                              {
                                "properties": {
                                  "preferred_language": {
                                    "description": "Preferred language of the Bancontact authorization page that the customer is redirected to.",
                                    "enum": [
                                      "de",
                                      "en",
                                      "fr",
                                      "nl"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "title": "invoice_payment_method_options_param",
                                "type": "object"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "If paying by `bancontact`, this sub-hash contains details about the Bancontact payment method options to pass to the invoice’s PaymentIntent."
                          },
                          "card": {
                            "anyOf": [
                              {
                                "properties": {
                                  "installments": {
                                    "description": "Installment configuration for payments attempted on this invoice (Mexico Only).\n\nFor more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).",
                                    "properties": {
                                      "enabled": {
                                        "description": "Setting to true enables installments for this invoice.\nSetting to false will prevent any selected plan from applying to a payment.",
                                        "type": "boolean"
                                      },
                                      "plan": {
                                        "anyOf": [
                                          {
                                            "properties": {
                                              "count": {
                                                "description": "For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.",
                                                "type": "integer"
                                              },
                                              "interval": {
                                                "description": "For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.\nOne of `month`.",
                                                "enum": [
                                                  "month"
                                                ],
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "Type of installment plan, one of `fixed_count`.",
                                                "enum": [
                                                  "fixed_count"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "count",
                                              "interval",
                                              "type"
                                            ],
                                            "title": "installment_plan",
                                            "type": "object"
                                          },
                                          {
                                            "enum": [
                                              ""
                                            ],
                                            "type": "string"
                                          }
                                        ],
                                        "description": "The selected installment plan to use for this invoice."
                                      }
                                    },
                                    "title": "installments_param",
                                    "type": "object"
                                  },
                                  "request_three_d_secure": {
                                    "description": "We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.",
                                    "enum": [
                                      "any",
                                      "automatic"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "title": "invoice_payment_method_options_param",
                                "type": "object"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "If paying by `card`, this sub-hash contains details about the Card payment method options to pass to the invoice’s PaymentIntent."
                          },
                          "customer_balance": {
                            "anyOf": [
                              {
                                "properties": {
                                  "bank_transfer": {
                                    "description": "Configuration for the bank transfer funding type, if the `funding_type` is set to `bank_transfer`.",
                                    "properties": {
                                      "eu_bank_transfer": {
                                        "description": "Configuration for eu_bank_transfer funding type.",
                                        "properties": {
                                          "country": {
                                            "description": "The desired country code of the bank account information. Permitted values include: `DE`, `ES`, `FR`, `IE`, or `NL`.",
                                            "maxLength": 5000,
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "country"
                                        ],
                                        "title": "eu_bank_transfer_param",
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "The bank transfer type that can be used for funding. Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`, or `mx_bank_transfer`.",
                                        "type": "string"
                                      }
                                    },
                                    "title": "bank_transfer_param",
                                    "type": "object"
                                  },
                                  "funding_type": {
                                    "description": "The funding method type to be used when there are not enough funds in the customer balance. Permitted values include: `bank_transfer`.",
                                    "type": "string"
                                  }
                                },
                                "title": "invoice_payment_method_options_param",
                                "type": "object"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "If paying by `customer_balance`, this sub-hash contains details about the Bank transfer payment method options to pass to the invoice’s PaymentIntent."
                          },
                          "konbini": {
                            "anyOf": [
                              {
                                "properties": {},
                                "title": "invoice_payment_method_options_param",
                                "type": "object"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "If paying by `konbini`, this sub-hash contains details about the Konbini payment method options to pass to the invoice’s PaymentIntent."
                          },
                          "us_bank_account": {
                            "anyOf": [
                              {
                                "properties": {
                                  "financial_connections": {
                                    "description": "Additional fields for Financial Connections Session creation",
                                    "properties": {
                                      "permissions": {
                                        "description": "The list of permissions to request. If this parameter is passed, the `payment_method` permission must be included. Valid permissions include: `balances`, `ownership`, `payment_method`, and `transactions`.",
                                        "items": {
                                          "enum": [
                                            "balances",
                                            "ownership",
                                            "payment_method",
                                            "transactions"
                                          ],
                                          "maxLength": 5000,
                                          "type": "string",
                                          "x-stripeBypassValidation": true
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "title": "invoice_linked_account_options_param",
                                    "type": "object"
                                  },
                                  "verification_method": {
                                    "description": "Verification method for the intent",
                                    "enum": [
                                      "automatic",
                                      "instant",
                                      "microdeposits"
                                    ],
                                    "type": "string",
                                    "x-stripeBypassValidation": true
                                  }
                                },
                                "title": "invoice_payment_method_options_param",
                                "type": "object"
                              },
                              {
                                "enum": [
                                  ""
                                ],
                                "type": "string"
                              }
                            ],
                            "description": "If paying by `us_bank_account`, this sub-hash contains details about the ACH direct debit payment method options to pass to the invoice’s PaymentIntent."
                          }
                        },
                        "title": "payment_method_options",
                        "type": "object"
                      },
                      "payment_method_types": {
                        "anyOf": [
                          {
                            "items": {
                              "enum": [
                                "ach_credit_transfer",
                                "ach_debit",
                                "acss_debit",
                                "au_becs_debit",
                                "bacs_debit",
                                "bancontact",
                                "boleto",
                                "card",
                                "customer_balance",
                                "fpx",
                                "giropay",
                                "grabpay",
                                "ideal",
                                "konbini",
                                "link",
                                "paynow",
                                "promptpay",
                                "sepa_credit_transfer",
                                "sepa_debit",
                                "sofort",
                                "us_bank_account",
                                "wechat_pay"
                              ],
                              "type": "string",
                              "x-stripeBypassValidation": true
                            },
                            "type": "array"
                          },
                          {
                            "enum": [
                              ""
                            ],
                            "type": "string"
                          }
                        ],
                        "description": "The list of payment method types (e.g. card) to provide to the invoice’s PaymentIntent. If not set, Stripe attempts to automatically determine the types to use by looking at the invoice’s default payment method, the subscription’s default payment method, the customer’s default payment method, and your [invoice template settings](https://dashboard.stripe.com/settings/billing/invoice)."
                      }
                    },
                    "title": "payment_settings",
                    "type": "object"
                  },
                  "pending_invoice_items_behavior": {
                    "description": "How to handle pending invoice items on invoice creation. One of `include` or `exclude`. `include` will include any pending invoice items, and will create an empty draft invoice if no pending invoice items exist. `exclude` will always create an empty invoice draft regardless if there are pending invoice items or not. Defaults to `exclude` if the parameter is omitted.",
                    "enum": [
                      "exclude",
                      "include",
                      "include_and_require"
                    ],
                    "type": "string"
                  },
                  "rendering_options": {
                    "anyOf": [
                      {
                        "properties": {
                          "amount_tax_display": {
                            "description": "How line-item prices and amounts will be displayed with respect to tax on invoice PDFs. One of `exclude_tax` or `include_inclusive_tax`. `include_inclusive_tax` will include inclusive tax (and exclude exclusive tax) in invoice PDF amounts. `exclude_tax` will exclude all tax (inclusive and exclusive alike) from invoice PDF amounts.",
                            "enum": [
                              "",
                              "exclude_tax",
                              "include_inclusive_tax"
                            ],
                            "type": "string"
                          }
                        },
                        "title": "rendering_options_param",
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Options for invoice PDF rendering."
                  },
                  "statement_descriptor": {
                    "description": "Extra information about a charge for the customer's credit card statement. It must contain at least one letter. If not specified and this invoice is part of a subscription, the default `statement_descriptor` will be set to the first subscription item's product's `statement_descriptor`.",
                    "maxLength": 22,
                    "type": "string"
                  },
                  "subscription": {
                    "description": "The ID of the subscription to invoice, if any. If set, the created invoice will only include pending invoice items for that subscription and pending invoice items not associated with any subscription if `pending_invoice_items_behavior` is `include`. The subscription's billing cycle and regular subscription events won't be affected.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "transfer_data": {
                    "description": "If specified, the funds from the invoice will be transferred to the destination and the ID of the resulting transfer will be found on the invoice's charge.",
                    "properties": {
                      "amount": {
                        "description": "The amount that will be transferred automatically when the invoice is paid. If no amount is set, the full amount is transferred.",
                        "type": "integer"
                      },
                      "destination": {
                        "description": "ID of an existing, connected Stripe account.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "destination"
                    ],
                    "title": "transfer_data_specs",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invoice"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/invoices/search": {
      "get": {
        "description": "<p>Search for invoices you’ve previously created using Stripe’s <a href=\"/docs/search#search-query-language\">Search Query Language</a>.\nDon’t use search in read-after-write flows where strict consistency is necessary. Under normal operating\nconditions, data is searchable in less than a minute. Occasionally, propagation of new or updated data can be up\nto an hour behind during outages. Search functionality is not available to merchants in India.</p>",
        "operationId": "GetInvoicesSearch",
        "parameters": [
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "A cursor for pagination across multiple pages of results. Don't include this parameter on the first call. Use the next_page value returned in a previous response to request subsequent results.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The search query string. See [search query language](https://stripe.com/docs/search#search-query-language) and the list of supported [query fields for invoices](https://stripe.com/docs/search#query-fields-for-invoices).",
            "in": "query",
            "name": "query",
            "required": true,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/invoice"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "type": "boolean"
                    },
                    "next_page": {
                      "maxLength": 5000,
                      "nullable": true,
                      "type": "string"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value.",
                      "enum": [
                        "search_result"
                      ],
                      "type": "string"
                    },
                    "total_count": {
                      "description": "The total number of objects that match the query, only accurate up to 10,000.",
                      "type": "integer"
                    },
                    "url": {
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "next_page",
                    "object",
                    "url"
                  ],
                  "title": "SearchResult",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/invoices/upcoming": {
      "get": {
        "description": "<p>At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discounts that are applicable to the invoice.</p>\n\n<p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.</p>\n\n<p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass a <code>proration_date</code> parameter when doing the actual subscription update. The value passed in should be the same as the <code>subscription_proration_date</code> returned on the upcoming invoice resource. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_proration_date</code> on the upcoming invoice resource.</p>",
        "operationId": "GetInvoicesUpcoming",
        "parameters": [
          {
            "description": "Settings for automatic tax lookup for this invoice preview.",
            "explode": true,
            "in": "query",
            "name": "automatic_tax",
            "required": false,
            "schema": {
              "properties": {
                "enabled": {
                  "description": "Whether Stripe automatically computes tax on this invoice. Note that incompatible invoice items (invoice items with manually specified [tax rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`) cannot be added to automatic tax invoices.",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "title": "automatic_tax_param",
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string.",
            "in": "query",
            "name": "coupon",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The currency to preview this invoice in. Defaults to that of `customer` if not specified.",
            "in": "query",
            "name": "currency",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The identifier of the customer whose upcoming invoice you'd like to retrieve.",
            "in": "query",
            "name": "customer",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Details about the customer you want to invoice or overrides for an existing customer.",
            "explode": true,
            "in": "query",
            "name": "customer_details",
            "required": false,
            "schema": {
              "properties": {
                "address": {
                  "anyOf": [
                    {
                      "properties": {
                        "city": {
                          "description": "City, district, suburb, town, or village.",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "country": {
                          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "line1": {
                          "description": "Address line 1 (e.g., street, PO Box, or company name).",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "line2": {
                          "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "postal_code": {
                          "description": "ZIP or postal code.",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "state": {
                          "description": "State, county, province, or region.",
                          "maxLength": 5000,
                          "type": "string"
                        }
                      },
                      "title": "optional_fields_address",
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ],
                  "description": "The customer's address."
                },
                "shipping": {
                  "anyOf": [
                    {
                      "properties": {
                        "address": {
                          "description": "Customer shipping address.",
                          "properties": {
                            "city": {
                              "description": "City, district, suburb, town, or village.",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "country": {
                              "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "line1": {
                              "description": "Address line 1 (e.g., street, PO Box, or company name).",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "line2": {
                              "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "ZIP or postal code.",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "state": {
                              "description": "State, county, province, or region.",
                              "maxLength": 5000,
                              "type": "string"
                            }
                          },
                          "title": "optional_fields_address",
                          "type": "object"
                        },
                        "name": {
                          "description": "Customer name.",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "phone": {
                          "description": "Customer phone (including extension).",
                          "maxLength": 5000,
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "name"
                      ],
                      "title": "customer_shipping",
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ],
                  "description": "The customer's shipping information. Appears on invoices emailed to this customer."
                },
                "tax": {
                  "description": "Tax details about the customer.",
                  "properties": {
                    "ip_address": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "enum": [
                            ""
                          ],
                          "type": "string"
                        }
                      ],
                      "description": "A recent IP address of the customer used for tax reporting and tax location inference. Stripe recommends updating the IP address when a new PaymentMethod is attached or the address field on the customer is updated. We recommend against updating this field more frequently since it could result in unexpected tax location/reporting outcomes."
                    }
                  },
                  "title": "tax_param",
                  "type": "object"
                },
                "tax_exempt": {
                  "description": "The customer's tax exemption. One of `none`, `exempt`, or `reverse`.",
                  "enum": [
                    "",
                    "exempt",
                    "none",
                    "reverse"
                  ],
                  "type": "string"
                },
                "tax_ids": {
                  "description": "The customer's tax IDs.",
                  "items": {
                    "properties": {
                      "type": {
                        "description": "Type of the tax ID, one of `ae_trn`, `au_abn`, `au_arn`, `bg_uic`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_vat`, `cl_tin`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `no_vat`, `nz_gst`, `ph_tin`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, or `za_vat`",
                        "enum": [
                          "ae_trn",
                          "au_abn",
                          "au_arn",
                          "bg_uic",
                          "br_cnpj",
                          "br_cpf",
                          "ca_bn",
                          "ca_gst_hst",
                          "ca_pst_bc",
                          "ca_pst_mb",
                          "ca_pst_sk",
                          "ca_qst",
                          "ch_vat",
                          "cl_tin",
                          "eg_tin",
                          "es_cif",
                          "eu_oss_vat",
                          "eu_vat",
                          "gb_vat",
                          "ge_vat",
                          "hk_br",
                          "hu_tin",
                          "id_npwp",
                          "il_vat",
                          "in_gst",
                          "is_vat",
                          "jp_cn",
                          "jp_rn",
                          "jp_trn",
                          "ke_pin",
                          "kr_brn",
                          "li_uid",
                          "mx_rfc",
                          "my_frp",
                          "my_itn",
                          "my_sst",
                          "no_vat",
                          "nz_gst",
                          "ph_tin",
                          "ru_inn",
                          "ru_kpp",
                          "sa_vat",
                          "sg_gst",
                          "sg_uen",
                          "si_tin",
                          "th_vat",
                          "tr_tin",
                          "tw_vat",
                          "ua_vat",
                          "us_ein",
                          "za_vat"
                        ],
                        "maxLength": 5000,
                        "type": "string",
                        "x-stripeBypassValidation": true
                      },
                      "value": {
                        "description": "Value of the tax ID.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "value"
                    ],
                    "title": "data_params",
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "title": "customer_details_param",
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the customer or subscription. This only works for coupons directly applied to the invoice. To apply a coupon to a subscription, you must use the `coupon` parameter instead. Pass an empty string to avoid inheriting any discounts. To preview the upcoming invoice for a subscription that hasn't been created, use `coupon` instead.",
            "explode": true,
            "in": "query",
            "name": "discounts",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "properties": {
                      "coupon": {
                        "description": "ID of the coupon to create a new discount for.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "discount": {
                        "description": "ID of an existing discount on the object (or one of its ancestors) to reuse.",
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "discounts_data_param",
                    "type": "object"
                  },
                  "type": "array"
                },
                {
                  "enum": [
                    ""
                  ],
                  "type": "string"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "List of invoice items to add or update in the upcoming invoice preview.",
            "explode": true,
            "in": "query",
            "name": "invoice_items",
            "required": false,
            "schema": {
              "items": {
                "properties": {
                  "amount": {
                    "description": "The integer amount in cents (or local equivalent) of previewed invoice item.",
                    "type": "integer"
                  },
                  "currency": {
                    "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Only applicable to new invoice items.",
                    "type": "string"
                  },
                  "description": {
                    "description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "discountable": {
                    "description": "Explicitly controls whether discounts apply to this invoice item. Defaults to true, except for negative invoice items.",
                    "type": "boolean"
                  },
                  "discounts": {
                    "anyOf": [
                      {
                        "items": {
                          "properties": {
                            "coupon": {
                              "description": "ID of the coupon to create a new discount for.",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "discount": {
                              "description": "ID of an existing discount on the object (or one of its ancestors) to reuse.",
                              "maxLength": 5000,
                              "type": "string"
                            }
                          },
                          "title": "discounts_data_param",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The coupons to redeem into discounts for the invoice item in the preview."
                  },
                  "invoiceitem": {
                    "description": "The ID of the invoice item to update in preview. If not specified, a new invoice item will be added to the preview of the upcoming invoice.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "period": {
                    "description": "The period associated with this invoice item. When set to different values, the period will be rendered on the invoice.",
                    "properties": {
                      "end": {
                        "description": "The end of the period, which must be greater than or equal to the start.",
                        "format": "unix-time",
                        "type": "integer"
                      },
                      "start": {
                        "description": "The start of the period.",
                        "format": "unix-time",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "end",
                      "start"
                    ],
                    "title": "period",
                    "type": "object"
                  },
                  "price": {
                    "description": "The ID of the price object.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "price_data": {
                    "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.",
                    "properties": {
                      "currency": {
                        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "type": "string"
                      },
                      "product": {
                        "description": "The ID of the product that this price will belong to.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "tax_behavior": {
                        "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
                        "enum": [
                          "exclusive",
                          "inclusive",
                          "unspecified"
                        ],
                        "type": "string"
                      },
                      "unit_amount": {
                        "description": "A positive integer in cents (or local equivalent) (or 0 for a free price) representing how much to charge.",
                        "type": "integer"
                      },
                      "unit_amount_decimal": {
                        "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
                        "format": "decimal",
                        "type": "string"
                      }
                    },
                    "required": [
                      "currency",
                      "product"
                    ],
                    "title": "one_time_price_data",
                    "type": "object"
                  },
                  "quantity": {
                    "description": "Non-negative integer. The quantity of units for the invoice item.",
                    "type": "integer"
                  },
                  "tax_behavior": {
                    "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
                    "enum": [
                      "exclusive",
                      "inclusive",
                      "unspecified"
                    ],
                    "type": "string"
                  },
                  "tax_code": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID."
                  },
                  "tax_rates": {
                    "anyOf": [
                      {
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The tax rates that apply to the item. When set, any `default_tax_rates` do not apply to this item."
                  },
                  "unit_amount": {
                    "description": "The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount.",
                    "type": "integer"
                  },
                  "unit_amount_decimal": {
                    "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
                    "format": "decimal",
                    "type": "string"
                  }
                },
                "title": "invoice_item_preview_params",
                "type": "object"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "The identifier of the unstarted schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.",
            "in": "query",
            "name": "schedule",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.",
            "in": "query",
            "name": "subscription",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`.",
            "explode": true,
            "in": "query",
            "name": "subscription_billing_cycle_anchor",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "now",
                    "unchanged"
                  ],
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "format": "unix-time",
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period and prorations have been enabled using `proration_behavior`.",
            "explode": true,
            "in": "query",
            "name": "subscription_cancel_at",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "unix-time",
                  "type": "integer"
                },
                {
                  "enum": [
                    ""
                  ],
                  "type": "string"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "Boolean indicating whether this subscription should cancel at the end of the current period.",
            "in": "query",
            "name": "subscription_cancel_at_period_end",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "This simulates the subscription being canceled or expired immediately.",
            "in": "query",
            "name": "subscription_cancel_now",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set.",
            "explode": true,
            "in": "query",
            "name": "subscription_default_tax_rates",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "enum": [
                    ""
                  ],
                  "type": "string"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "A list of up to 20 subscription items, each with an attached price.",
            "explode": true,
            "in": "query",
            "name": "subscription_items",
            "required": false,
            "schema": {
              "items": {
                "properties": {
                  "billing_thresholds": {
                    "anyOf": [
                      {
                        "properties": {
                          "usage_gte": {
                            "description": "Usage threshold that triggers the subscription to advance to a new billing period",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "usage_gte"
                        ],
                        "title": "item_billing_thresholds_param",
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds."
                  },
                  "clear_usage": {
                    "description": "Delete all usage for a given subscription item. Allowed only when `deleted` is set to `true` and the current plan's `usage_type` is `metered`.",
                    "type": "boolean"
                  },
                  "deleted": {
                    "description": "A flag that, if set to `true`, will delete the specified item.",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "Subscription item to update.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "plan": {
                    "description": "Plan ID for this item, as a string.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "price": {
                    "description": "The ID of the price object. When changing a subscription item's price, `quantity` is set to 1 unless a `quantity` parameter is provided.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "price_data": {
                    "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.",
                    "properties": {
                      "currency": {
                        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "type": "string"
                      },
                      "product": {
                        "description": "The ID of the product that this price will belong to.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "recurring": {
                        "description": "The recurring components of a price such as `interval` and `interval_count`.",
                        "properties": {
                          "interval": {
                            "description": "Specifies billing frequency. Either `day`, `week`, `month` or `year`.",
                            "enum": [
                              "day",
                              "month",
                              "week",
                              "year"
                            ],
                            "type": "string"
                          },
                          "interval_count": {
                            "description": "The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "interval"
                        ],
                        "title": "recurring_adhoc",
                        "type": "object"
                      },
                      "tax_behavior": {
                        "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
                        "enum": [
                          "exclusive",
                          "inclusive",
                          "unspecified"
                        ],
                        "type": "string"
                      },
                      "unit_amount": {
                        "description": "A positive integer in cents (or local equivalent) (or 0 for a free price) representing how much to charge.",
                        "type": "integer"
                      },
                      "unit_amount_decimal": {
                        "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
                        "format": "decimal",
                        "type": "string"
                      }
                    },
                    "required": [
                      "currency",
                      "product",
                      "recurring"
                    ],
                    "title": "recurring_price_data",
                    "type": "object"
                  },
                  "quantity": {
                    "description": "Quantity for this item.",
                    "type": "integer"
                  },
                  "tax_rates": {
                    "anyOf": [
                      {
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates."
                  }
                },
                "title": "subscription_item_update_params",
                "type": "object"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes.",
            "in": "query",
            "name": "subscription_proration_behavior",
            "required": false,
            "schema": {
              "enum": [
                "always_invoice",
                "create_prorations",
                "none"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'.",
            "in": "query",
            "name": "subscription_proration_date",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Date a subscription is intended to start (can be future or past)",
            "in": "query",
            "name": "subscription_start_date",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required.",
            "explode": true,
            "in": "query",
            "name": "subscription_trial_end",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "now"
                  ],
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "format": "unix-time",
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "in": "query",
            "name": "subscription_trial_from_plan",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/invoice"
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    },
    "/v1/invoices/upcoming/lines": {
      "get": {
        "description": "<p>When retrieving an upcoming invoice, you’ll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
        "operationId": "GetInvoicesUpcomingLines",
        "parameters": [
          {
            "description": "Settings for automatic tax lookup for this invoice preview.",
            "explode": true,
            "in": "query",
            "name": "automatic_tax",
            "required": false,
            "schema": {
              "properties": {
                "enabled": {
                  "description": "Whether Stripe automatically computes tax on this invoice. Note that incompatible invoice items (invoice items with manually specified [tax rates](https://stripe.com/docs/api/tax_rates), negative amounts, or `tax_behavior=unspecified`) cannot be added to automatic tax invoices.",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "title": "automatic_tax_param",
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string.",
            "in": "query",
            "name": "coupon",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The currency to preview this invoice in. Defaults to that of `customer` if not specified.",
            "in": "query",
            "name": "currency",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The identifier of the customer whose upcoming invoice you'd like to retrieve.",
            "in": "query",
            "name": "customer",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Details about the customer you want to invoice or overrides for an existing customer.",
            "explode": true,
            "in": "query",
            "name": "customer_details",
            "required": false,
            "schema": {
              "properties": {
                "address": {
                  "anyOf": [
                    {
                      "properties": {
                        "city": {
                          "description": "City, district, suburb, town, or village.",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "country": {
                          "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "line1": {
                          "description": "Address line 1 (e.g., street, PO Box, or company name).",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "line2": {
                          "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "postal_code": {
                          "description": "ZIP or postal code.",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "state": {
                          "description": "State, county, province, or region.",
                          "maxLength": 5000,
                          "type": "string"
                        }
                      },
                      "title": "optional_fields_address",
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ],
                  "description": "The customer's address."
                },
                "shipping": {
                  "anyOf": [
                    {
                      "properties": {
                        "address": {
                          "description": "Customer shipping address.",
                          "properties": {
                            "city": {
                              "description": "City, district, suburb, town, or village.",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "country": {
                              "description": "Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "line1": {
                              "description": "Address line 1 (e.g., street, PO Box, or company name).",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "line2": {
                              "description": "Address line 2 (e.g., apartment, suite, unit, or building).",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "ZIP or postal code.",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "state": {
                              "description": "State, county, province, or region.",
                              "maxLength": 5000,
                              "type": "string"
                            }
                          },
                          "title": "optional_fields_address",
                          "type": "object"
                        },
                        "name": {
                          "description": "Customer name.",
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "phone": {
                          "description": "Customer phone (including extension).",
                          "maxLength": 5000,
                          "type": "string"
                        }
                      },
                      "required": [
                        "address",
                        "name"
                      ],
                      "title": "customer_shipping",
                      "type": "object"
                    },
                    {
                      "enum": [
                        ""
                      ],
                      "type": "string"
                    }
                  ],
                  "description": "The customer's shipping information. Appears on invoices emailed to this customer."
                },
                "tax": {
                  "description": "Tax details about the customer.",
                  "properties": {
                    "ip_address": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "enum": [
                            ""
                          ],
                          "type": "string"
                        }
                      ],
                      "description": "A recent IP address of the customer used for tax reporting and tax location inference. Stripe recommends updating the IP address when a new PaymentMethod is attached or the address field on the customer is updated. We recommend against updating this field more frequently since it could result in unexpected tax location/reporting outcomes."
                    }
                  },
                  "title": "tax_param",
                  "type": "object"
                },
                "tax_exempt": {
                  "description": "The customer's tax exemption. One of `none`, `exempt`, or `reverse`.",
                  "enum": [
                    "",
                    "exempt",
                    "none",
                    "reverse"
                  ],
                  "type": "string"
                },
                "tax_ids": {
                  "description": "The customer's tax IDs.",
                  "items": {
                    "properties": {
                      "type": {
                        "description": "Type of the tax ID, one of `ae_trn`, `au_abn`, `au_arn`, `bg_uic`, `br_cnpj`, `br_cpf`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `ch_vat`, `cl_tin`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`, `ge_vat`, `hk_br`, `hu_tin`, `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kr_brn`, `li_uid`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `no_vat`, `nz_gst`, `ph_tin`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`, `si_tin`, `th_vat`, `tr_tin`, `tw_vat`, `ua_vat`, `us_ein`, or `za_vat`",
                        "enum": [
                          "ae_trn",
                          "au_abn",
                          "au_arn",
                          "bg_uic",
                          "br_cnpj",
                          "br_cpf",
                          "ca_bn",
                          "ca_gst_hst",
                          "ca_pst_bc",
                          "ca_pst_mb",
                          "ca_pst_sk",
                          "ca_qst",
                          "ch_vat",
                          "cl_tin",
                          "eg_tin",
                          "es_cif",
                          "eu_oss_vat",
                          "eu_vat",
                          "gb_vat",
                          "ge_vat",
                          "hk_br",
                          "hu_tin",
                          "id_npwp",
                          "il_vat",
                          "in_gst",
                          "is_vat",
                          "jp_cn",
                          "jp_rn",
                          "jp_trn",
                          "ke_pin",
                          "kr_brn",
                          "li_uid",
                          "mx_rfc",
                          "my_frp",
                          "my_itn",
                          "my_sst",
                          "no_vat",
                          "nz_gst",
                          "ph_tin",
                          "ru_inn",
                          "ru_kpp",
                          "sa_vat",
                          "sg_gst",
                          "sg_uen",
                          "si_tin",
                          "th_vat",
                          "tr_tin",
                          "tw_vat",
                          "ua_vat",
                          "us_ein",
                          "za_vat"
                        ],
                        "maxLength": 5000,
                        "type": "string",
                        "x-stripeBypassValidation": true
                      },
                      "value": {
                        "description": "Value of the tax ID.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "value"
                    ],
                    "title": "data_params",
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "title": "customer_details_param",
              "type": "object"
            },
            "style": "deepObject"
          },
          {
            "description": "The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the customer or subscription. This only works for coupons directly applied to the invoice. To apply a coupon to a subscription, you must use the `coupon` parameter instead. Pass an empty string to avoid inheriting any discounts. To preview the upcoming invoice for a subscription that hasn't been created, use `coupon` instead.",
            "explode": true,
            "in": "query",
            "name": "discounts",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "properties": {
                      "coupon": {
                        "description": "ID of the coupon to create a new discount for.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "discount": {
                        "description": "ID of an existing discount on the object (or one of its ancestors) to reuse.",
                        "maxLength": 5000,
                        "type": "string"
                      }
                    },
                    "title": "discounts_data_param",
                    "type": "object"
                  },
                  "type": "array"
                },
                {
                  "enum": [
                    ""
                  ],
                  "type": "string"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.",
            "in": "query",
            "name": "ending_before",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "Specifies which fields in the response should be expanded.",
            "explode": true,
            "in": "query",
            "name": "expand",
            "required": false,
            "schema": {
              "items": {
                "maxLength": 5000,
                "type": "string"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "List of invoice items to add or update in the upcoming invoice preview.",
            "explode": true,
            "in": "query",
            "name": "invoice_items",
            "required": false,
            "schema": {
              "items": {
                "properties": {
                  "amount": {
                    "description": "The integer amount in cents (or local equivalent) of previewed invoice item.",
                    "type": "integer"
                  },
                  "currency": {
                    "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies). Only applicable to new invoice items.",
                    "type": "string"
                  },
                  "description": {
                    "description": "An arbitrary string which you can attach to the invoice item. The description is displayed in the invoice for easy tracking.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "discountable": {
                    "description": "Explicitly controls whether discounts apply to this invoice item. Defaults to true, except for negative invoice items.",
                    "type": "boolean"
                  },
                  "discounts": {
                    "anyOf": [
                      {
                        "items": {
                          "properties": {
                            "coupon": {
                              "description": "ID of the coupon to create a new discount for.",
                              "maxLength": 5000,
                              "type": "string"
                            },
                            "discount": {
                              "description": "ID of an existing discount on the object (or one of its ancestors) to reuse.",
                              "maxLength": 5000,
                              "type": "string"
                            }
                          },
                          "title": "discounts_data_param",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The coupons to redeem into discounts for the invoice item in the preview."
                  },
                  "invoiceitem": {
                    "description": "The ID of the invoice item to update in preview. If not specified, a new invoice item will be added to the preview of the upcoming invoice.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "period": {
                    "description": "The period associated with this invoice item. When set to different values, the period will be rendered on the invoice.",
                    "properties": {
                      "end": {
                        "description": "The end of the period, which must be greater than or equal to the start.",
                        "format": "unix-time",
                        "type": "integer"
                      },
                      "start": {
                        "description": "The start of the period.",
                        "format": "unix-time",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "end",
                      "start"
                    ],
                    "title": "period",
                    "type": "object"
                  },
                  "price": {
                    "description": "The ID of the price object.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "price_data": {
                    "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.",
                    "properties": {
                      "currency": {
                        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "type": "string"
                      },
                      "product": {
                        "description": "The ID of the product that this price will belong to.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "tax_behavior": {
                        "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
                        "enum": [
                          "exclusive",
                          "inclusive",
                          "unspecified"
                        ],
                        "type": "string"
                      },
                      "unit_amount": {
                        "description": "A positive integer in cents (or local equivalent) (or 0 for a free price) representing how much to charge.",
                        "type": "integer"
                      },
                      "unit_amount_decimal": {
                        "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
                        "format": "decimal",
                        "type": "string"
                      }
                    },
                    "required": [
                      "currency",
                      "product"
                    ],
                    "title": "one_time_price_data",
                    "type": "object"
                  },
                  "quantity": {
                    "description": "Non-negative integer. The quantity of units for the invoice item.",
                    "type": "integer"
                  },
                  "tax_behavior": {
                    "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
                    "enum": [
                      "exclusive",
                      "inclusive",
                      "unspecified"
                    ],
                    "type": "string"
                  },
                  "tax_code": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "A [tax code](https://stripe.com/docs/tax/tax-categories) ID."
                  },
                  "tax_rates": {
                    "anyOf": [
                      {
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "The tax rates that apply to the item. When set, any `default_tax_rates` do not apply to this item."
                  },
                  "unit_amount": {
                    "description": "The integer unit amount in cents (or local equivalent) of the charge to be applied to the upcoming invoice. This unit_amount will be multiplied by the quantity to get the full amount. If you want to apply a credit to the customer's account, pass a negative unit_amount.",
                    "type": "integer"
                  },
                  "unit_amount_decimal": {
                    "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
                    "format": "decimal",
                    "type": "string"
                  }
                },
                "title": "invoice_item_preview_params",
                "type": "object"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "The identifier of the unstarted schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.",
            "in": "query",
            "name": "schedule",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.",
            "in": "query",
            "name": "starting_after",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.",
            "in": "query",
            "name": "subscription",
            "required": false,
            "schema": {
              "maxLength": 5000,
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`.",
            "explode": true,
            "in": "query",
            "name": "subscription_billing_cycle_anchor",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "now",
                    "unchanged"
                  ],
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "format": "unix-time",
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period and prorations have been enabled using `proration_behavior`.",
            "explode": true,
            "in": "query",
            "name": "subscription_cancel_at",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "format": "unix-time",
                  "type": "integer"
                },
                {
                  "enum": [
                    ""
                  ],
                  "type": "string"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "Boolean indicating whether this subscription should cancel at the end of the current period.",
            "in": "query",
            "name": "subscription_cancel_at_period_end",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "This simulates the subscription being canceled or expired immediately.",
            "in": "query",
            "name": "subscription_cancel_now",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          },
          {
            "description": "If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set.",
            "explode": true,
            "in": "query",
            "name": "subscription_default_tax_rates",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "enum": [
                    ""
                  ],
                  "type": "string"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "A list of up to 20 subscription items, each with an attached price.",
            "explode": true,
            "in": "query",
            "name": "subscription_items",
            "required": false,
            "schema": {
              "items": {
                "properties": {
                  "billing_thresholds": {
                    "anyOf": [
                      {
                        "properties": {
                          "usage_gte": {
                            "description": "Usage threshold that triggers the subscription to advance to a new billing period",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "usage_gte"
                        ],
                        "title": "item_billing_thresholds_param",
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period. When updating, pass an empty string to remove previously-defined thresholds."
                  },
                  "clear_usage": {
                    "description": "Delete all usage for a given subscription item. Allowed only when `deleted` is set to `true` and the current plan's `usage_type` is `metered`.",
                    "type": "boolean"
                  },
                  "deleted": {
                    "description": "A flag that, if set to `true`, will delete the specified item.",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "Subscription item to update.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "additionalProperties": {
                          "type": "string"
                        },
                        "type": "object"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`."
                  },
                  "plan": {
                    "description": "Plan ID for this item, as a string.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "price": {
                    "description": "The ID of the price object. When changing a subscription item's price, `quantity` is set to 1 unless a `quantity` parameter is provided.",
                    "maxLength": 5000,
                    "type": "string"
                  },
                  "price_data": {
                    "description": "Data used to generate a new [Price](https://stripe.com/docs/api/prices) object inline.",
                    "properties": {
                      "currency": {
                        "description": "Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).",
                        "type": "string"
                      },
                      "product": {
                        "description": "The ID of the product that this price will belong to.",
                        "maxLength": 5000,
                        "type": "string"
                      },
                      "recurring": {
                        "description": "The recurring components of a price such as `interval` and `interval_count`.",
                        "properties": {
                          "interval": {
                            "description": "Specifies billing frequency. Either `day`, `week`, `month` or `year`.",
                            "enum": [
                              "day",
                              "month",
                              "week",
                              "year"
                            ],
                            "type": "string"
                          },
                          "interval_count": {
                            "description": "The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "interval"
                        ],
                        "title": "recurring_adhoc",
                        "type": "object"
                      },
                      "tax_behavior": {
                        "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`. Once specified as either `inclusive` or `exclusive`, it cannot be changed.",
                        "enum": [
                          "exclusive",
                          "inclusive",
                          "unspecified"
                        ],
                        "type": "string"
                      },
                      "unit_amount": {
                        "description": "A positive integer in cents (or local equivalent) (or 0 for a free price) representing how much to charge.",
                        "type": "integer"
                      },
                      "unit_amount_decimal": {
                        "description": "Same as `unit_amount`, but accepts a decimal value in cents (or local equivalent) with at most 12 decimal places. Only one of `unit_amount` and `unit_amount_decimal` can be set.",
                        "format": "decimal",
                        "type": "string"
                      }
                    },
                    "required": [
                      "currency",
                      "product",
                      "recurring"
                    ],
                    "title": "recurring_price_data",
                    "type": "object"
                  },
                  "quantity": {
                    "description": "Quantity for this item.",
                    "type": "integer"
                  },
                  "tax_rates": {
                    "anyOf": [
                      {
                        "items": {
                          "maxLength": 5000,
                          "type": "string"
                        },
                        "type": "array"
                      },
                      {
                        "enum": [
                          ""
                        ],
                        "type": "string"
                      }
                    ],
                    "description": "A list of [Tax Rate](https://stripe.com/docs/api/tax_rates) ids. These Tax Rates will override the [`default_tax_rates`](https://stripe.com/docs/api/subscriptions/create#create_subscription-default_tax_rates) on the Subscription. When updating, pass an empty string to remove previously-defined tax rates."
                  }
                },
                "title": "subscription_item_update_params",
                "type": "object"
              },
              "type": "array"
            },
            "style": "deepObject"
          },
          {
            "description": "Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes.",
            "in": "query",
            "name": "subscription_proration_behavior",
            "required": false,
            "schema": {
              "enum": [
                "always_invoice",
                "create_prorations",
                "none"
              ],
              "type": "string"
            },
            "style": "form"
          },
          {
            "description": "If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'.",
            "in": "query",
            "name": "subscription_proration_date",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "Date a subscription is intended to start (can be future or past)",
            "in": "query",
            "name": "subscription_start_date",
            "required": false,
            "schema": {
              "format": "unix-time",
              "type": "integer"
            },
            "style": "form"
          },
          {
            "description": "If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required.",
            "explode": true,
            "in": "query",
            "name": "subscription_trial_end",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "now"
                  ],
                  "maxLength": 5000,
                  "type": "string"
                },
                {
                  "format": "unix-time",
                  "type": "integer"
                }
              ]
            },
            "style": "deepObject"
          },
          {
            "description": "Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed. See [Using trial periods on subscriptions](https://stripe.com/docs/billing/subscriptions/trials) to learn more.",
            "in": "query",
            "name": "subscription_trial_from_plan",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "style": "form"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "encoding": {},
              "schema": {
                "additionalProperties": false,
                "properties": {},
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "properties": {
                    "data": {
                      "description": "Details about each object.",
                      "items": {
                        "$ref": "#/components/schemas/line_item"
                      },
                      "type": "array"
                    },
                    "has_more": {
                      "description": "True if this list has another page of items after this one that can be fetched.",
                      "type": "boolean"
                    },
                    "object": {
                      "description": "String representing the object's type. Objects of the same type share the same value. Always has the value `list`.",
                      "enum": [
                        "list"
                      ],
                      "type": "string"
                    },
                    "url": {
                      "description": "The URL where this list can be accessed.",
                      "maxLength": 5000,
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "has_more",
                    "object",
                    "url"
                  ],
                  "title": "InvoiceLinesList",
                  "type": "object",
                  "x-expandableFields": [
                    "data"
                  ]
                }
              }
            },
            "description": "Successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            },
            "description": "Error response."
          }
        }
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    },
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://api.stripe.com/"
    }
  ]
}